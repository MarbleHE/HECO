module {
  func.func private @encryptedPSU(%arg0: tensor<4x2x!fhe.secret<f64>>, %arg1: tensor<4x!fhe.secret<f64>>, %arg2: tensor<4x2x!fhe.secret<f64>>, %arg3: tensor<4x!fhe.secret<f64>>) -> !fhe.secret<f64> {
    %c1 = arith.constant 1 : index
    %c3 = arith.constant 3 : index
    %c2 = arith.constant 2 : index
    %c0 = arith.constant 0 : index
    %c1_sf64 = fhe.constant 1.000000e+00 : f64
    %0 = tensor.extract %arg1[%c0] : tensor<4x!fhe.secret<f64>>
    %1 = tensor.extract %arg1[%c1] : tensor<4x!fhe.secret<f64>>
    %2 = fhe.add(%0, %1) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %3 = tensor.extract %arg1[%c2] : tensor<4x!fhe.secret<f64>>
    %4 = fhe.add(%2, %3) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %5 = tensor.extract %arg1[%c3] : tensor<4x!fhe.secret<f64>>
    %6 = fhe.add(%4, %5) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %7 = tensor.extract %arg0[%c0, %c0] : tensor<4x2x!fhe.secret<f64>>
    %8 = tensor.extract %arg2[%c0, %c0] : tensor<4x2x!fhe.secret<f64>>
    %9 = fhe.sub(%7, %8) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %10 = fhe.multiply(%9, %9) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %11 = fhe.sub(%c1_sf64, %10) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %12 = tensor.extract %arg0[%c0, %c1] : tensor<4x2x!fhe.secret<f64>>
    %13 = tensor.extract %arg2[%c0, %c1] : tensor<4x2x!fhe.secret<f64>>
    %14 = fhe.sub(%12, %13) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %15 = fhe.multiply(%14, %14) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %16 = fhe.sub(%c1_sf64, %15) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %17 = fhe.multiply(%16, %11) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %18 = fhe.sub(%c1_sf64, %17) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %19 = tensor.extract %arg2[%c1, %c0] : tensor<4x2x!fhe.secret<f64>>
    %20 = fhe.sub(%7, %19) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %21 = fhe.multiply(%20, %20) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %22 = fhe.sub(%c1_sf64, %21) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %23 = tensor.extract %arg2[%c1, %c1] : tensor<4x2x!fhe.secret<f64>>
    %24 = fhe.sub(%12, %23) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %25 = fhe.multiply(%24, %24) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %26 = fhe.sub(%c1_sf64, %25) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %27 = fhe.multiply(%26, %22) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %28 = fhe.sub(%c1_sf64, %27) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %29 = fhe.multiply(%28, %18) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %30 = tensor.extract %arg2[%c2, %c0] : tensor<4x2x!fhe.secret<f64>>
    %31 = fhe.sub(%7, %30) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %32 = fhe.multiply(%31, %31) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %33 = fhe.sub(%c1_sf64, %32) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %34 = tensor.extract %arg2[%c2, %c1] : tensor<4x2x!fhe.secret<f64>>
    %35 = fhe.sub(%12, %34) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %36 = fhe.multiply(%35, %35) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %37 = fhe.sub(%c1_sf64, %36) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %38 = fhe.multiply(%37, %33) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %39 = fhe.sub(%c1_sf64, %38) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %40 = fhe.multiply(%39, %29) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %41 = tensor.extract %arg2[%c3, %c0] : tensor<4x2x!fhe.secret<f64>>
    %42 = fhe.sub(%7, %41) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %43 = fhe.multiply(%42, %42) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %44 = fhe.sub(%c1_sf64, %43) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %45 = tensor.extract %arg2[%c3, %c1] : tensor<4x2x!fhe.secret<f64>>
    %46 = fhe.sub(%12, %45) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %47 = fhe.multiply(%46, %46) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %48 = fhe.sub(%c1_sf64, %47) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %49 = fhe.multiply(%48, %44) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %50 = fhe.sub(%c1_sf64, %49) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %51 = fhe.multiply(%50, %40) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %52 = tensor.extract %arg3[%c0] : tensor<4x!fhe.secret<f64>>
    %53 = fhe.multiply(%52, %51) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %54 = fhe.add(%6, %53) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %55 = tensor.extract %arg0[%c1, %c0] : tensor<4x2x!fhe.secret<f64>>
    %56 = fhe.sub(%55, %8) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %57 = fhe.multiply(%56, %56) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %58 = fhe.sub(%c1_sf64, %57) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %59 = tensor.extract %arg0[%c1, %c1] : tensor<4x2x!fhe.secret<f64>>
    %60 = fhe.sub(%59, %13) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %61 = fhe.multiply(%60, %60) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %62 = fhe.sub(%c1_sf64, %61) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %63 = fhe.multiply(%62, %58) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %64 = fhe.sub(%c1_sf64, %63) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %65 = fhe.sub(%55, %19) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %66 = fhe.multiply(%65, %65) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %67 = fhe.sub(%c1_sf64, %66) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %68 = fhe.sub(%59, %23) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %69 = fhe.multiply(%68, %68) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %70 = fhe.sub(%c1_sf64, %69) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %71 = fhe.multiply(%70, %67) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %72 = fhe.sub(%c1_sf64, %71) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %73 = fhe.multiply(%72, %64) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %74 = fhe.sub(%55, %30) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %75 = fhe.multiply(%74, %74) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %76 = fhe.sub(%c1_sf64, %75) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %77 = fhe.sub(%59, %34) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %78 = fhe.multiply(%77, %77) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %79 = fhe.sub(%c1_sf64, %78) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %80 = fhe.multiply(%79, %76) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %81 = fhe.sub(%c1_sf64, %80) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %82 = fhe.multiply(%81, %73) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %83 = fhe.sub(%55, %41) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %84 = fhe.multiply(%83, %83) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %85 = fhe.sub(%c1_sf64, %84) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %86 = fhe.sub(%59, %45) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %87 = fhe.multiply(%86, %86) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %88 = fhe.sub(%c1_sf64, %87) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %89 = fhe.multiply(%88, %85) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %90 = fhe.sub(%c1_sf64, %89) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %91 = fhe.multiply(%90, %82) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %92 = tensor.extract %arg3[%c1] : tensor<4x!fhe.secret<f64>>
    %93 = fhe.multiply(%92, %91) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %94 = fhe.add(%54, %93) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %95 = tensor.extract %arg0[%c2, %c0] : tensor<4x2x!fhe.secret<f64>>
    %96 = fhe.sub(%95, %8) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %97 = fhe.multiply(%96, %96) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %98 = fhe.sub(%c1_sf64, %97) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %99 = tensor.extract %arg0[%c2, %c1] : tensor<4x2x!fhe.secret<f64>>
    %100 = fhe.sub(%99, %13) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %101 = fhe.multiply(%100, %100) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %102 = fhe.sub(%c1_sf64, %101) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %103 = fhe.multiply(%102, %98) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %104 = fhe.sub(%c1_sf64, %103) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %105 = fhe.sub(%95, %19) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %106 = fhe.multiply(%105, %105) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %107 = fhe.sub(%c1_sf64, %106) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %108 = fhe.sub(%99, %23) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %109 = fhe.multiply(%108, %108) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %110 = fhe.sub(%c1_sf64, %109) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %111 = fhe.multiply(%110, %107) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %112 = fhe.sub(%c1_sf64, %111) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %113 = fhe.multiply(%112, %104) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %114 = fhe.sub(%95, %30) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %115 = fhe.multiply(%114, %114) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %116 = fhe.sub(%c1_sf64, %115) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %117 = fhe.sub(%99, %34) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %118 = fhe.multiply(%117, %117) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %119 = fhe.sub(%c1_sf64, %118) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %120 = fhe.multiply(%119, %116) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %121 = fhe.sub(%c1_sf64, %120) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %122 = fhe.multiply(%121, %113) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %123 = fhe.sub(%95, %41) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %124 = fhe.multiply(%123, %123) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %125 = fhe.sub(%c1_sf64, %124) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %126 = fhe.sub(%99, %45) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %127 = fhe.multiply(%126, %126) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %128 = fhe.sub(%c1_sf64, %127) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %129 = fhe.multiply(%128, %125) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %130 = fhe.sub(%c1_sf64, %129) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %131 = fhe.multiply(%130, %122) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %132 = tensor.extract %arg3[%c2] : tensor<4x!fhe.secret<f64>>
    %133 = fhe.multiply(%132, %131) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %134 = fhe.add(%94, %133) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %135 = tensor.extract %arg0[%c3, %c0] : tensor<4x2x!fhe.secret<f64>>
    %136 = fhe.sub(%135, %8) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %137 = fhe.multiply(%136, %136) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %138 = fhe.sub(%c1_sf64, %137) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %139 = tensor.extract %arg0[%c3, %c1] : tensor<4x2x!fhe.secret<f64>>
    %140 = fhe.sub(%139, %13) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %141 = fhe.multiply(%140, %140) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %142 = fhe.sub(%c1_sf64, %141) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %143 = fhe.multiply(%142, %138) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %144 = fhe.sub(%c1_sf64, %143) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %145 = fhe.sub(%135, %19) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %146 = fhe.multiply(%145, %145) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %147 = fhe.sub(%c1_sf64, %146) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %148 = fhe.sub(%139, %23) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %149 = fhe.multiply(%148, %148) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %150 = fhe.sub(%c1_sf64, %149) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %151 = fhe.multiply(%150, %147) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %152 = fhe.sub(%c1_sf64, %151) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %153 = fhe.multiply(%152, %144) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %154 = fhe.sub(%135, %30) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %155 = fhe.multiply(%154, %154) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %156 = fhe.sub(%c1_sf64, %155) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %157 = fhe.sub(%139, %34) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %158 = fhe.multiply(%157, %157) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %159 = fhe.sub(%c1_sf64, %158) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %160 = fhe.multiply(%159, %156) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %161 = fhe.sub(%c1_sf64, %160) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %162 = fhe.multiply(%161, %153) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %163 = fhe.sub(%135, %41) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %164 = fhe.multiply(%163, %163) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %165 = fhe.sub(%c1_sf64, %164) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %166 = fhe.sub(%139, %45) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %167 = fhe.multiply(%166, %166) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %168 = fhe.sub(%c1_sf64, %167) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %169 = fhe.multiply(%168, %165) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %170 = fhe.sub(%c1_sf64, %169) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %171 = fhe.multiply(%170, %162) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %172 = tensor.extract %arg3[%c3] : tensor<4x!fhe.secret<f64>>
    %173 = fhe.multiply(%172, %171) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %174 = fhe.add(%134, %173) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    return %174 : !fhe.secret<f64>
  }
}

