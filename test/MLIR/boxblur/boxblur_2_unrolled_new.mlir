#map0 = affine_map<(d0) -> (d0 + 1)>
#map1 = affine_map<(d0) -> (d0 + 2)>
#map2 = affine_map<(d0) -> (d0 + 3)>
#map3 = affine_map<(d0) -> (d0 + 4)>
#map4 = affine_map<(d0) -> (d0 + 5)>
#map5 = affine_map<(d0) -> (d0 + 6)>
#map6 = affine_map<(d0) -> (d0 + 7)>
module {
  func.func private @encryptedBoxBlur(%arg0: tensor<64x!fhe.secret<i16>>) -> tensor<64x!fhe.secret<i16>> {
    %c0 = arith.constant 0 : index
    %c0_0 = arith.constant 0 : index
    %c-1 = arith.constant -1 : index
    %c-1_1 = arith.constant -1 : index
    %c64 = arith.constant 64 : index
    %c8 = arith.constant 8 : index
    %c0_i16 = fhe.constant 0 : i16
    %0 = arith.addi %c0, %c-1_1 : index
    %1 = arith.muli %0, %c8 : index
    %2 = arith.addi %c0_0, %c-1 : index
    %3 = arith.addi %1, %2 : index
    %4 = arith.remui %3, %c64 : index
    %5 = tensor.extract %arg0[%4] : tensor<64x!fhe.secret<i16>>
    %6 = fhe.add(%c0_i16, %5) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %7 = affine.apply #map0(%c-1_1)
    %8 = arith.addi %c0, %7 : index
    %9 = arith.muli %8, %c8 : index
    %10 = arith.addi %c0_0, %c-1 : index
    %11 = arith.addi %9, %10 : index
    %12 = arith.remui %11, %c64 : index
    %13 = tensor.extract %arg0[%12] : tensor<64x!fhe.secret<i16>>
    %14 = fhe.add(%6, %13) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %15 = affine.apply #map1(%c-1_1)
    %16 = arith.addi %c0, %15 : index
    %17 = arith.muli %16, %c8 : index
    %18 = arith.addi %c0_0, %c-1 : index
    %19 = arith.addi %17, %18 : index
    %20 = arith.remui %19, %c64 : index
    %21 = tensor.extract %arg0[%20] : tensor<64x!fhe.secret<i16>>
    %22 = fhe.add(%14, %21) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %23 = affine.apply #map0(%c-1)
    %24 = arith.addi %c0, %c-1_1 : index
    %25 = arith.muli %24, %c8 : index
    %26 = arith.addi %c0_0, %23 : index
    %27 = arith.addi %25, %26 : index
    %28 = arith.remui %27, %c64 : index
    %29 = tensor.extract %arg0[%28] : tensor<64x!fhe.secret<i16>>
    %30 = fhe.add(%22, %29) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %31 = affine.apply #map0(%c-1_1)
    %32 = arith.addi %c0, %31 : index
    %33 = arith.muli %32, %c8 : index
    %34 = arith.addi %c0_0, %23 : index
    %35 = arith.addi %33, %34 : index
    %36 = arith.remui %35, %c64 : index
    %37 = tensor.extract %arg0[%36] : tensor<64x!fhe.secret<i16>>
    %38 = fhe.add(%30, %37) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %39 = affine.apply #map1(%c-1_1)
    %40 = arith.addi %c0, %39 : index
    %41 = arith.muli %40, %c8 : index
    %42 = arith.addi %c0_0, %23 : index
    %43 = arith.addi %41, %42 : index
    %44 = arith.remui %43, %c64 : index
    %45 = tensor.extract %arg0[%44] : tensor<64x!fhe.secret<i16>>
    %46 = fhe.add(%38, %45) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %47 = affine.apply #map1(%c-1)
    %48 = arith.addi %c0, %c-1_1 : index
    %49 = arith.muli %48, %c8 : index
    %50 = arith.addi %c0_0, %47 : index
    %51 = arith.addi %49, %50 : index
    %52 = arith.remui %51, %c64 : index
    %53 = tensor.extract %arg0[%52] : tensor<64x!fhe.secret<i16>>
    %54 = fhe.add(%46, %53) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %55 = affine.apply #map0(%c-1_1)
    %56 = arith.addi %c0, %55 : index
    %57 = arith.muli %56, %c8 : index
    %58 = arith.addi %c0_0, %47 : index
    %59 = arith.addi %57, %58 : index
    %60 = arith.remui %59, %c64 : index
    %61 = tensor.extract %arg0[%60] : tensor<64x!fhe.secret<i16>>
    %62 = fhe.add(%54, %61) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %63 = affine.apply #map1(%c-1_1)
    %64 = arith.addi %c0, %63 : index
    %65 = arith.muli %64, %c8 : index
    %66 = arith.addi %c0_0, %47 : index
    %67 = arith.addi %65, %66 : index
    %68 = arith.remui %67, %c64 : index
    %69 = tensor.extract %arg0[%68] : tensor<64x!fhe.secret<i16>>
    %70 = fhe.add(%62, %69) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %71 = arith.muli %c8, %c0 : index
    %72 = arith.addi %71, %c0_0 : index
    %73 = arith.remui %72, %c64 : index
    %74 = tensor.insert %70 into %arg0[%73] : tensor<64x!fhe.secret<i16>>
    %75 = affine.apply #map0(%c0_0)
    %c0_i16_2 = fhe.constant 0 : i16
    %76 = arith.addi %c0, %c-1_1 : index
    %77 = arith.muli %76, %c8 : index
    %78 = arith.addi %75, %c-1 : index
    %79 = arith.addi %77, %78 : index
    %80 = arith.remui %79, %c64 : index
    %81 = tensor.extract %arg0[%80] : tensor<64x!fhe.secret<i16>>
    %82 = fhe.add(%c0_i16_2, %81) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %83 = affine.apply #map0(%c-1_1)
    %84 = arith.addi %c0, %83 : index
    %85 = arith.muli %84, %c8 : index
    %86 = arith.addi %75, %c-1 : index
    %87 = arith.addi %85, %86 : index
    %88 = arith.remui %87, %c64 : index
    %89 = tensor.extract %arg0[%88] : tensor<64x!fhe.secret<i16>>
    %90 = fhe.add(%82, %89) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %91 = affine.apply #map1(%c-1_1)
    %92 = arith.addi %c0, %91 : index
    %93 = arith.muli %92, %c8 : index
    %94 = arith.addi %75, %c-1 : index
    %95 = arith.addi %93, %94 : index
    %96 = arith.remui %95, %c64 : index
    %97 = tensor.extract %arg0[%96] : tensor<64x!fhe.secret<i16>>
    %98 = fhe.add(%90, %97) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %99 = affine.apply #map0(%c-1)
    %100 = arith.addi %c0, %c-1_1 : index
    %101 = arith.muli %100, %c8 : index
    %102 = arith.addi %75, %99 : index
    %103 = arith.addi %101, %102 : index
    %104 = arith.remui %103, %c64 : index
    %105 = tensor.extract %arg0[%104] : tensor<64x!fhe.secret<i16>>
    %106 = fhe.add(%98, %105) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %107 = affine.apply #map0(%c-1_1)
    %108 = arith.addi %c0, %107 : index
    %109 = arith.muli %108, %c8 : index
    %110 = arith.addi %75, %99 : index
    %111 = arith.addi %109, %110 : index
    %112 = arith.remui %111, %c64 : index
    %113 = tensor.extract %arg0[%112] : tensor<64x!fhe.secret<i16>>
    %114 = fhe.add(%106, %113) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %115 = affine.apply #map1(%c-1_1)
    %116 = arith.addi %c0, %115 : index
    %117 = arith.muli %116, %c8 : index
    %118 = arith.addi %75, %99 : index
    %119 = arith.addi %117, %118 : index
    %120 = arith.remui %119, %c64 : index
    %121 = tensor.extract %arg0[%120] : tensor<64x!fhe.secret<i16>>
    %122 = fhe.add(%114, %121) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %123 = affine.apply #map1(%c-1)
    %124 = arith.addi %c0, %c-1_1 : index
    %125 = arith.muli %124, %c8 : index
    %126 = arith.addi %75, %123 : index
    %127 = arith.addi %125, %126 : index
    %128 = arith.remui %127, %c64 : index
    %129 = tensor.extract %arg0[%128] : tensor<64x!fhe.secret<i16>>
    %130 = fhe.add(%122, %129) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %131 = affine.apply #map0(%c-1_1)
    %132 = arith.addi %c0, %131 : index
    %133 = arith.muli %132, %c8 : index
    %134 = arith.addi %75, %123 : index
    %135 = arith.addi %133, %134 : index
    %136 = arith.remui %135, %c64 : index
    %137 = tensor.extract %arg0[%136] : tensor<64x!fhe.secret<i16>>
    %138 = fhe.add(%130, %137) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %139 = affine.apply #map1(%c-1_1)
    %140 = arith.addi %c0, %139 : index
    %141 = arith.muli %140, %c8 : index
    %142 = arith.addi %75, %123 : index
    %143 = arith.addi %141, %142 : index
    %144 = arith.remui %143, %c64 : index
    %145 = tensor.extract %arg0[%144] : tensor<64x!fhe.secret<i16>>
    %146 = fhe.add(%138, %145) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %147 = arith.muli %c8, %c0 : index
    %148 = arith.addi %147, %75 : index
    %149 = arith.remui %148, %c64 : index
    %150 = tensor.insert %146 into %74[%149] : tensor<64x!fhe.secret<i16>>
    %151 = affine.apply #map1(%c0_0)
    %c0_i16_3 = fhe.constant 0 : i16
    %152 = arith.addi %c0, %c-1_1 : index
    %153 = arith.muli %152, %c8 : index
    %154 = arith.addi %151, %c-1 : index
    %155 = arith.addi %153, %154 : index
    %156 = arith.remui %155, %c64 : index
    %157 = tensor.extract %arg0[%156] : tensor<64x!fhe.secret<i16>>
    %158 = fhe.add(%c0_i16_3, %157) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %159 = affine.apply #map0(%c-1_1)
    %160 = arith.addi %c0, %159 : index
    %161 = arith.muli %160, %c8 : index
    %162 = arith.addi %151, %c-1 : index
    %163 = arith.addi %161, %162 : index
    %164 = arith.remui %163, %c64 : index
    %165 = tensor.extract %arg0[%164] : tensor<64x!fhe.secret<i16>>
    %166 = fhe.add(%158, %165) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %167 = affine.apply #map1(%c-1_1)
    %168 = arith.addi %c0, %167 : index
    %169 = arith.muli %168, %c8 : index
    %170 = arith.addi %151, %c-1 : index
    %171 = arith.addi %169, %170 : index
    %172 = arith.remui %171, %c64 : index
    %173 = tensor.extract %arg0[%172] : tensor<64x!fhe.secret<i16>>
    %174 = fhe.add(%166, %173) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %175 = affine.apply #map0(%c-1)
    %176 = arith.addi %c0, %c-1_1 : index
    %177 = arith.muli %176, %c8 : index
    %178 = arith.addi %151, %175 : index
    %179 = arith.addi %177, %178 : index
    %180 = arith.remui %179, %c64 : index
    %181 = tensor.extract %arg0[%180] : tensor<64x!fhe.secret<i16>>
    %182 = fhe.add(%174, %181) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %183 = affine.apply #map0(%c-1_1)
    %184 = arith.addi %c0, %183 : index
    %185 = arith.muli %184, %c8 : index
    %186 = arith.addi %151, %175 : index
    %187 = arith.addi %185, %186 : index
    %188 = arith.remui %187, %c64 : index
    %189 = tensor.extract %arg0[%188] : tensor<64x!fhe.secret<i16>>
    %190 = fhe.add(%182, %189) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %191 = affine.apply #map1(%c-1_1)
    %192 = arith.addi %c0, %191 : index
    %193 = arith.muli %192, %c8 : index
    %194 = arith.addi %151, %175 : index
    %195 = arith.addi %193, %194 : index
    %196 = arith.remui %195, %c64 : index
    %197 = tensor.extract %arg0[%196] : tensor<64x!fhe.secret<i16>>
    %198 = fhe.add(%190, %197) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %199 = affine.apply #map1(%c-1)
    %200 = arith.addi %c0, %c-1_1 : index
    %201 = arith.muli %200, %c8 : index
    %202 = arith.addi %151, %199 : index
    %203 = arith.addi %201, %202 : index
    %204 = arith.remui %203, %c64 : index
    %205 = tensor.extract %arg0[%204] : tensor<64x!fhe.secret<i16>>
    %206 = fhe.add(%198, %205) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %207 = affine.apply #map0(%c-1_1)
    %208 = arith.addi %c0, %207 : index
    %209 = arith.muli %208, %c8 : index
    %210 = arith.addi %151, %199 : index
    %211 = arith.addi %209, %210 : index
    %212 = arith.remui %211, %c64 : index
    %213 = tensor.extract %arg0[%212] : tensor<64x!fhe.secret<i16>>
    %214 = fhe.add(%206, %213) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %215 = affine.apply #map1(%c-1_1)
    %216 = arith.addi %c0, %215 : index
    %217 = arith.muli %216, %c8 : index
    %218 = arith.addi %151, %199 : index
    %219 = arith.addi %217, %218 : index
    %220 = arith.remui %219, %c64 : index
    %221 = tensor.extract %arg0[%220] : tensor<64x!fhe.secret<i16>>
    %222 = fhe.add(%214, %221) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %223 = arith.muli %c8, %c0 : index
    %224 = arith.addi %223, %151 : index
    %225 = arith.remui %224, %c64 : index
    %226 = tensor.insert %222 into %150[%225] : tensor<64x!fhe.secret<i16>>
    %227 = affine.apply #map2(%c0_0)
    %c0_i16_4 = fhe.constant 0 : i16
    %228 = arith.addi %c0, %c-1_1 : index
    %229 = arith.muli %228, %c8 : index
    %230 = arith.addi %227, %c-1 : index
    %231 = arith.addi %229, %230 : index
    %232 = arith.remui %231, %c64 : index
    %233 = tensor.extract %arg0[%232] : tensor<64x!fhe.secret<i16>>
    %234 = fhe.add(%c0_i16_4, %233) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %235 = affine.apply #map0(%c-1_1)
    %236 = arith.addi %c0, %235 : index
    %237 = arith.muli %236, %c8 : index
    %238 = arith.addi %227, %c-1 : index
    %239 = arith.addi %237, %238 : index
    %240 = arith.remui %239, %c64 : index
    %241 = tensor.extract %arg0[%240] : tensor<64x!fhe.secret<i16>>
    %242 = fhe.add(%234, %241) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %243 = affine.apply #map1(%c-1_1)
    %244 = arith.addi %c0, %243 : index
    %245 = arith.muli %244, %c8 : index
    %246 = arith.addi %227, %c-1 : index
    %247 = arith.addi %245, %246 : index
    %248 = arith.remui %247, %c64 : index
    %249 = tensor.extract %arg0[%248] : tensor<64x!fhe.secret<i16>>
    %250 = fhe.add(%242, %249) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %251 = affine.apply #map0(%c-1)
    %252 = arith.addi %c0, %c-1_1 : index
    %253 = arith.muli %252, %c8 : index
    %254 = arith.addi %227, %251 : index
    %255 = arith.addi %253, %254 : index
    %256 = arith.remui %255, %c64 : index
    %257 = tensor.extract %arg0[%256] : tensor<64x!fhe.secret<i16>>
    %258 = fhe.add(%250, %257) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %259 = affine.apply #map0(%c-1_1)
    %260 = arith.addi %c0, %259 : index
    %261 = arith.muli %260, %c8 : index
    %262 = arith.addi %227, %251 : index
    %263 = arith.addi %261, %262 : index
    %264 = arith.remui %263, %c64 : index
    %265 = tensor.extract %arg0[%264] : tensor<64x!fhe.secret<i16>>
    %266 = fhe.add(%258, %265) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %267 = affine.apply #map1(%c-1_1)
    %268 = arith.addi %c0, %267 : index
    %269 = arith.muli %268, %c8 : index
    %270 = arith.addi %227, %251 : index
    %271 = arith.addi %269, %270 : index
    %272 = arith.remui %271, %c64 : index
    %273 = tensor.extract %arg0[%272] : tensor<64x!fhe.secret<i16>>
    %274 = fhe.add(%266, %273) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %275 = affine.apply #map1(%c-1)
    %276 = arith.addi %c0, %c-1_1 : index
    %277 = arith.muli %276, %c8 : index
    %278 = arith.addi %227, %275 : index
    %279 = arith.addi %277, %278 : index
    %280 = arith.remui %279, %c64 : index
    %281 = tensor.extract %arg0[%280] : tensor<64x!fhe.secret<i16>>
    %282 = fhe.add(%274, %281) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %283 = affine.apply #map0(%c-1_1)
    %284 = arith.addi %c0, %283 : index
    %285 = arith.muli %284, %c8 : index
    %286 = arith.addi %227, %275 : index
    %287 = arith.addi %285, %286 : index
    %288 = arith.remui %287, %c64 : index
    %289 = tensor.extract %arg0[%288] : tensor<64x!fhe.secret<i16>>
    %290 = fhe.add(%282, %289) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %291 = affine.apply #map1(%c-1_1)
    %292 = arith.addi %c0, %291 : index
    %293 = arith.muli %292, %c8 : index
    %294 = arith.addi %227, %275 : index
    %295 = arith.addi %293, %294 : index
    %296 = arith.remui %295, %c64 : index
    %297 = tensor.extract %arg0[%296] : tensor<64x!fhe.secret<i16>>
    %298 = fhe.add(%290, %297) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %299 = arith.muli %c8, %c0 : index
    %300 = arith.addi %299, %227 : index
    %301 = arith.remui %300, %c64 : index
    %302 = tensor.insert %298 into %226[%301] : tensor<64x!fhe.secret<i16>>
    %303 = affine.apply #map3(%c0_0)
    %c0_i16_5 = fhe.constant 0 : i16
    %304 = arith.addi %c0, %c-1_1 : index
    %305 = arith.muli %304, %c8 : index
    %306 = arith.addi %303, %c-1 : index
    %307 = arith.addi %305, %306 : index
    %308 = arith.remui %307, %c64 : index
    %309 = tensor.extract %arg0[%308] : tensor<64x!fhe.secret<i16>>
    %310 = fhe.add(%c0_i16_5, %309) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %311 = affine.apply #map0(%c-1_1)
    %312 = arith.addi %c0, %311 : index
    %313 = arith.muli %312, %c8 : index
    %314 = arith.addi %303, %c-1 : index
    %315 = arith.addi %313, %314 : index
    %316 = arith.remui %315, %c64 : index
    %317 = tensor.extract %arg0[%316] : tensor<64x!fhe.secret<i16>>
    %318 = fhe.add(%310, %317) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %319 = affine.apply #map1(%c-1_1)
    %320 = arith.addi %c0, %319 : index
    %321 = arith.muli %320, %c8 : index
    %322 = arith.addi %303, %c-1 : index
    %323 = arith.addi %321, %322 : index
    %324 = arith.remui %323, %c64 : index
    %325 = tensor.extract %arg0[%324] : tensor<64x!fhe.secret<i16>>
    %326 = fhe.add(%318, %325) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %327 = affine.apply #map0(%c-1)
    %328 = arith.addi %c0, %c-1_1 : index
    %329 = arith.muli %328, %c8 : index
    %330 = arith.addi %303, %327 : index
    %331 = arith.addi %329, %330 : index
    %332 = arith.remui %331, %c64 : index
    %333 = tensor.extract %arg0[%332] : tensor<64x!fhe.secret<i16>>
    %334 = fhe.add(%326, %333) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %335 = affine.apply #map0(%c-1_1)
    %336 = arith.addi %c0, %335 : index
    %337 = arith.muli %336, %c8 : index
    %338 = arith.addi %303, %327 : index
    %339 = arith.addi %337, %338 : index
    %340 = arith.remui %339, %c64 : index
    %341 = tensor.extract %arg0[%340] : tensor<64x!fhe.secret<i16>>
    %342 = fhe.add(%334, %341) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %343 = affine.apply #map1(%c-1_1)
    %344 = arith.addi %c0, %343 : index
    %345 = arith.muli %344, %c8 : index
    %346 = arith.addi %303, %327 : index
    %347 = arith.addi %345, %346 : index
    %348 = arith.remui %347, %c64 : index
    %349 = tensor.extract %arg0[%348] : tensor<64x!fhe.secret<i16>>
    %350 = fhe.add(%342, %349) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %351 = affine.apply #map1(%c-1)
    %352 = arith.addi %c0, %c-1_1 : index
    %353 = arith.muli %352, %c8 : index
    %354 = arith.addi %303, %351 : index
    %355 = arith.addi %353, %354 : index
    %356 = arith.remui %355, %c64 : index
    %357 = tensor.extract %arg0[%356] : tensor<64x!fhe.secret<i16>>
    %358 = fhe.add(%350, %357) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %359 = affine.apply #map0(%c-1_1)
    %360 = arith.addi %c0, %359 : index
    %361 = arith.muli %360, %c8 : index
    %362 = arith.addi %303, %351 : index
    %363 = arith.addi %361, %362 : index
    %364 = arith.remui %363, %c64 : index
    %365 = tensor.extract %arg0[%364] : tensor<64x!fhe.secret<i16>>
    %366 = fhe.add(%358, %365) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %367 = affine.apply #map1(%c-1_1)
    %368 = arith.addi %c0, %367 : index
    %369 = arith.muli %368, %c8 : index
    %370 = arith.addi %303, %351 : index
    %371 = arith.addi %369, %370 : index
    %372 = arith.remui %371, %c64 : index
    %373 = tensor.extract %arg0[%372] : tensor<64x!fhe.secret<i16>>
    %374 = fhe.add(%366, %373) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %375 = arith.muli %c8, %c0 : index
    %376 = arith.addi %375, %303 : index
    %377 = arith.remui %376, %c64 : index
    %378 = tensor.insert %374 into %302[%377] : tensor<64x!fhe.secret<i16>>
    %379 = affine.apply #map4(%c0_0)
    %c0_i16_6 = fhe.constant 0 : i16
    %380 = arith.addi %c0, %c-1_1 : index
    %381 = arith.muli %380, %c8 : index
    %382 = arith.addi %379, %c-1 : index
    %383 = arith.addi %381, %382 : index
    %384 = arith.remui %383, %c64 : index
    %385 = tensor.extract %arg0[%384] : tensor<64x!fhe.secret<i16>>
    %386 = fhe.add(%c0_i16_6, %385) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %387 = affine.apply #map0(%c-1_1)
    %388 = arith.addi %c0, %387 : index
    %389 = arith.muli %388, %c8 : index
    %390 = arith.addi %379, %c-1 : index
    %391 = arith.addi %389, %390 : index
    %392 = arith.remui %391, %c64 : index
    %393 = tensor.extract %arg0[%392] : tensor<64x!fhe.secret<i16>>
    %394 = fhe.add(%386, %393) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %395 = affine.apply #map1(%c-1_1)
    %396 = arith.addi %c0, %395 : index
    %397 = arith.muli %396, %c8 : index
    %398 = arith.addi %379, %c-1 : index
    %399 = arith.addi %397, %398 : index
    %400 = arith.remui %399, %c64 : index
    %401 = tensor.extract %arg0[%400] : tensor<64x!fhe.secret<i16>>
    %402 = fhe.add(%394, %401) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %403 = affine.apply #map0(%c-1)
    %404 = arith.addi %c0, %c-1_1 : index
    %405 = arith.muli %404, %c8 : index
    %406 = arith.addi %379, %403 : index
    %407 = arith.addi %405, %406 : index
    %408 = arith.remui %407, %c64 : index
    %409 = tensor.extract %arg0[%408] : tensor<64x!fhe.secret<i16>>
    %410 = fhe.add(%402, %409) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %411 = affine.apply #map0(%c-1_1)
    %412 = arith.addi %c0, %411 : index
    %413 = arith.muli %412, %c8 : index
    %414 = arith.addi %379, %403 : index
    %415 = arith.addi %413, %414 : index
    %416 = arith.remui %415, %c64 : index
    %417 = tensor.extract %arg0[%416] : tensor<64x!fhe.secret<i16>>
    %418 = fhe.add(%410, %417) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %419 = affine.apply #map1(%c-1_1)
    %420 = arith.addi %c0, %419 : index
    %421 = arith.muli %420, %c8 : index
    %422 = arith.addi %379, %403 : index
    %423 = arith.addi %421, %422 : index
    %424 = arith.remui %423, %c64 : index
    %425 = tensor.extract %arg0[%424] : tensor<64x!fhe.secret<i16>>
    %426 = fhe.add(%418, %425) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %427 = affine.apply #map1(%c-1)
    %428 = arith.addi %c0, %c-1_1 : index
    %429 = arith.muli %428, %c8 : index
    %430 = arith.addi %379, %427 : index
    %431 = arith.addi %429, %430 : index
    %432 = arith.remui %431, %c64 : index
    %433 = tensor.extract %arg0[%432] : tensor<64x!fhe.secret<i16>>
    %434 = fhe.add(%426, %433) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %435 = affine.apply #map0(%c-1_1)
    %436 = arith.addi %c0, %435 : index
    %437 = arith.muli %436, %c8 : index
    %438 = arith.addi %379, %427 : index
    %439 = arith.addi %437, %438 : index
    %440 = arith.remui %439, %c64 : index
    %441 = tensor.extract %arg0[%440] : tensor<64x!fhe.secret<i16>>
    %442 = fhe.add(%434, %441) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %443 = affine.apply #map1(%c-1_1)
    %444 = arith.addi %c0, %443 : index
    %445 = arith.muli %444, %c8 : index
    %446 = arith.addi %379, %427 : index
    %447 = arith.addi %445, %446 : index
    %448 = arith.remui %447, %c64 : index
    %449 = tensor.extract %arg0[%448] : tensor<64x!fhe.secret<i16>>
    %450 = fhe.add(%442, %449) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %451 = arith.muli %c8, %c0 : index
    %452 = arith.addi %451, %379 : index
    %453 = arith.remui %452, %c64 : index
    %454 = tensor.insert %450 into %378[%453] : tensor<64x!fhe.secret<i16>>
    %455 = affine.apply #map5(%c0_0)
    %c0_i16_7 = fhe.constant 0 : i16
    %456 = arith.addi %c0, %c-1_1 : index
    %457 = arith.muli %456, %c8 : index
    %458 = arith.addi %455, %c-1 : index
    %459 = arith.addi %457, %458 : index
    %460 = arith.remui %459, %c64 : index
    %461 = tensor.extract %arg0[%460] : tensor<64x!fhe.secret<i16>>
    %462 = fhe.add(%c0_i16_7, %461) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %463 = affine.apply #map0(%c-1_1)
    %464 = arith.addi %c0, %463 : index
    %465 = arith.muli %464, %c8 : index
    %466 = arith.addi %455, %c-1 : index
    %467 = arith.addi %465, %466 : index
    %468 = arith.remui %467, %c64 : index
    %469 = tensor.extract %arg0[%468] : tensor<64x!fhe.secret<i16>>
    %470 = fhe.add(%462, %469) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %471 = affine.apply #map1(%c-1_1)
    %472 = arith.addi %c0, %471 : index
    %473 = arith.muli %472, %c8 : index
    %474 = arith.addi %455, %c-1 : index
    %475 = arith.addi %473, %474 : index
    %476 = arith.remui %475, %c64 : index
    %477 = tensor.extract %arg0[%476] : tensor<64x!fhe.secret<i16>>
    %478 = fhe.add(%470, %477) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %479 = affine.apply #map0(%c-1)
    %480 = arith.addi %c0, %c-1_1 : index
    %481 = arith.muli %480, %c8 : index
    %482 = arith.addi %455, %479 : index
    %483 = arith.addi %481, %482 : index
    %484 = arith.remui %483, %c64 : index
    %485 = tensor.extract %arg0[%484] : tensor<64x!fhe.secret<i16>>
    %486 = fhe.add(%478, %485) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %487 = affine.apply #map0(%c-1_1)
    %488 = arith.addi %c0, %487 : index
    %489 = arith.muli %488, %c8 : index
    %490 = arith.addi %455, %479 : index
    %491 = arith.addi %489, %490 : index
    %492 = arith.remui %491, %c64 : index
    %493 = tensor.extract %arg0[%492] : tensor<64x!fhe.secret<i16>>
    %494 = fhe.add(%486, %493) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %495 = affine.apply #map1(%c-1_1)
    %496 = arith.addi %c0, %495 : index
    %497 = arith.muli %496, %c8 : index
    %498 = arith.addi %455, %479 : index
    %499 = arith.addi %497, %498 : index
    %500 = arith.remui %499, %c64 : index
    %501 = tensor.extract %arg0[%500] : tensor<64x!fhe.secret<i16>>
    %502 = fhe.add(%494, %501) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %503 = affine.apply #map1(%c-1)
    %504 = arith.addi %c0, %c-1_1 : index
    %505 = arith.muli %504, %c8 : index
    %506 = arith.addi %455, %503 : index
    %507 = arith.addi %505, %506 : index
    %508 = arith.remui %507, %c64 : index
    %509 = tensor.extract %arg0[%508] : tensor<64x!fhe.secret<i16>>
    %510 = fhe.add(%502, %509) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %511 = affine.apply #map0(%c-1_1)
    %512 = arith.addi %c0, %511 : index
    %513 = arith.muli %512, %c8 : index
    %514 = arith.addi %455, %503 : index
    %515 = arith.addi %513, %514 : index
    %516 = arith.remui %515, %c64 : index
    %517 = tensor.extract %arg0[%516] : tensor<64x!fhe.secret<i16>>
    %518 = fhe.add(%510, %517) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %519 = affine.apply #map1(%c-1_1)
    %520 = arith.addi %c0, %519 : index
    %521 = arith.muli %520, %c8 : index
    %522 = arith.addi %455, %503 : index
    %523 = arith.addi %521, %522 : index
    %524 = arith.remui %523, %c64 : index
    %525 = tensor.extract %arg0[%524] : tensor<64x!fhe.secret<i16>>
    %526 = fhe.add(%518, %525) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %527 = arith.muli %c8, %c0 : index
    %528 = arith.addi %527, %455 : index
    %529 = arith.remui %528, %c64 : index
    %530 = tensor.insert %526 into %454[%529] : tensor<64x!fhe.secret<i16>>
    %531 = affine.apply #map6(%c0_0)
    %c0_i16_8 = fhe.constant 0 : i16
    %532 = arith.addi %c0, %c-1_1 : index
    %533 = arith.muli %532, %c8 : index
    %534 = arith.addi %531, %c-1 : index
    %535 = arith.addi %533, %534 : index
    %536 = arith.remui %535, %c64 : index
    %537 = tensor.extract %arg0[%536] : tensor<64x!fhe.secret<i16>>
    %538 = fhe.add(%c0_i16_8, %537) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %539 = affine.apply #map0(%c-1_1)
    %540 = arith.addi %c0, %539 : index
    %541 = arith.muli %540, %c8 : index
    %542 = arith.addi %531, %c-1 : index
    %543 = arith.addi %541, %542 : index
    %544 = arith.remui %543, %c64 : index
    %545 = tensor.extract %arg0[%544] : tensor<64x!fhe.secret<i16>>
    %546 = fhe.add(%538, %545) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %547 = affine.apply #map1(%c-1_1)
    %548 = arith.addi %c0, %547 : index
    %549 = arith.muli %548, %c8 : index
    %550 = arith.addi %531, %c-1 : index
    %551 = arith.addi %549, %550 : index
    %552 = arith.remui %551, %c64 : index
    %553 = tensor.extract %arg0[%552] : tensor<64x!fhe.secret<i16>>
    %554 = fhe.add(%546, %553) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %555 = affine.apply #map0(%c-1)
    %556 = arith.addi %c0, %c-1_1 : index
    %557 = arith.muli %556, %c8 : index
    %558 = arith.addi %531, %555 : index
    %559 = arith.addi %557, %558 : index
    %560 = arith.remui %559, %c64 : index
    %561 = tensor.extract %arg0[%560] : tensor<64x!fhe.secret<i16>>
    %562 = fhe.add(%554, %561) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %563 = affine.apply #map0(%c-1_1)
    %564 = arith.addi %c0, %563 : index
    %565 = arith.muli %564, %c8 : index
    %566 = arith.addi %531, %555 : index
    %567 = arith.addi %565, %566 : index
    %568 = arith.remui %567, %c64 : index
    %569 = tensor.extract %arg0[%568] : tensor<64x!fhe.secret<i16>>
    %570 = fhe.add(%562, %569) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %571 = affine.apply #map1(%c-1_1)
    %572 = arith.addi %c0, %571 : index
    %573 = arith.muli %572, %c8 : index
    %574 = arith.addi %531, %555 : index
    %575 = arith.addi %573, %574 : index
    %576 = arith.remui %575, %c64 : index
    %577 = tensor.extract %arg0[%576] : tensor<64x!fhe.secret<i16>>
    %578 = fhe.add(%570, %577) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %579 = affine.apply #map1(%c-1)
    %580 = arith.addi %c0, %c-1_1 : index
    %581 = arith.muli %580, %c8 : index
    %582 = arith.addi %531, %579 : index
    %583 = arith.addi %581, %582 : index
    %584 = arith.remui %583, %c64 : index
    %585 = tensor.extract %arg0[%584] : tensor<64x!fhe.secret<i16>>
    %586 = fhe.add(%578, %585) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %587 = affine.apply #map0(%c-1_1)
    %588 = arith.addi %c0, %587 : index
    %589 = arith.muli %588, %c8 : index
    %590 = arith.addi %531, %579 : index
    %591 = arith.addi %589, %590 : index
    %592 = arith.remui %591, %c64 : index
    %593 = tensor.extract %arg0[%592] : tensor<64x!fhe.secret<i16>>
    %594 = fhe.add(%586, %593) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %595 = affine.apply #map1(%c-1_1)
    %596 = arith.addi %c0, %595 : index
    %597 = arith.muli %596, %c8 : index
    %598 = arith.addi %531, %579 : index
    %599 = arith.addi %597, %598 : index
    %600 = arith.remui %599, %c64 : index
    %601 = tensor.extract %arg0[%600] : tensor<64x!fhe.secret<i16>>
    %602 = fhe.add(%594, %601) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %603 = arith.muli %c8, %c0 : index
    %604 = arith.addi %603, %531 : index
    %605 = arith.remui %604, %c64 : index
    %606 = tensor.insert %602 into %530[%605] : tensor<64x!fhe.secret<i16>>
    %607 = affine.apply #map0(%c0)
    %c0_i16_9 = fhe.constant 0 : i16
    %608 = arith.addi %607, %c-1_1 : index
    %609 = arith.muli %608, %c8 : index
    %610 = arith.addi %c0_0, %c-1 : index
    %611 = arith.addi %609, %610 : index
    %612 = arith.remui %611, %c64 : index
    %613 = tensor.extract %arg0[%612] : tensor<64x!fhe.secret<i16>>
    %614 = fhe.add(%c0_i16_9, %613) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %615 = affine.apply #map0(%c-1_1)
    %616 = arith.addi %607, %615 : index
    %617 = arith.muli %616, %c8 : index
    %618 = arith.addi %c0_0, %c-1 : index
    %619 = arith.addi %617, %618 : index
    %620 = arith.remui %619, %c64 : index
    %621 = tensor.extract %arg0[%620] : tensor<64x!fhe.secret<i16>>
    %622 = fhe.add(%614, %621) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %623 = affine.apply #map1(%c-1_1)
    %624 = arith.addi %607, %623 : index
    %625 = arith.muli %624, %c8 : index
    %626 = arith.addi %c0_0, %c-1 : index
    %627 = arith.addi %625, %626 : index
    %628 = arith.remui %627, %c64 : index
    %629 = tensor.extract %arg0[%628] : tensor<64x!fhe.secret<i16>>
    %630 = fhe.add(%622, %629) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %631 = affine.apply #map0(%c-1)
    %632 = arith.addi %607, %c-1_1 : index
    %633 = arith.muli %632, %c8 : index
    %634 = arith.addi %c0_0, %631 : index
    %635 = arith.addi %633, %634 : index
    %636 = arith.remui %635, %c64 : index
    %637 = tensor.extract %arg0[%636] : tensor<64x!fhe.secret<i16>>
    %638 = fhe.add(%630, %637) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %639 = affine.apply #map0(%c-1_1)
    %640 = arith.addi %607, %639 : index
    %641 = arith.muli %640, %c8 : index
    %642 = arith.addi %c0_0, %631 : index
    %643 = arith.addi %641, %642 : index
    %644 = arith.remui %643, %c64 : index
    %645 = tensor.extract %arg0[%644] : tensor<64x!fhe.secret<i16>>
    %646 = fhe.add(%638, %645) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %647 = affine.apply #map1(%c-1_1)
    %648 = arith.addi %607, %647 : index
    %649 = arith.muli %648, %c8 : index
    %650 = arith.addi %c0_0, %631 : index
    %651 = arith.addi %649, %650 : index
    %652 = arith.remui %651, %c64 : index
    %653 = tensor.extract %arg0[%652] : tensor<64x!fhe.secret<i16>>
    %654 = fhe.add(%646, %653) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %655 = affine.apply #map1(%c-1)
    %656 = arith.addi %607, %c-1_1 : index
    %657 = arith.muli %656, %c8 : index
    %658 = arith.addi %c0_0, %655 : index
    %659 = arith.addi %657, %658 : index
    %660 = arith.remui %659, %c64 : index
    %661 = tensor.extract %arg0[%660] : tensor<64x!fhe.secret<i16>>
    %662 = fhe.add(%654, %661) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %663 = affine.apply #map0(%c-1_1)
    %664 = arith.addi %607, %663 : index
    %665 = arith.muli %664, %c8 : index
    %666 = arith.addi %c0_0, %655 : index
    %667 = arith.addi %665, %666 : index
    %668 = arith.remui %667, %c64 : index
    %669 = tensor.extract %arg0[%668] : tensor<64x!fhe.secret<i16>>
    %670 = fhe.add(%662, %669) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %671 = affine.apply #map1(%c-1_1)
    %672 = arith.addi %607, %671 : index
    %673 = arith.muli %672, %c8 : index
    %674 = arith.addi %c0_0, %655 : index
    %675 = arith.addi %673, %674 : index
    %676 = arith.remui %675, %c64 : index
    %677 = tensor.extract %arg0[%676] : tensor<64x!fhe.secret<i16>>
    %678 = fhe.add(%670, %677) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %679 = arith.muli %c8, %607 : index
    %680 = arith.addi %679, %c0_0 : index
    %681 = arith.remui %680, %c64 : index
    %682 = tensor.insert %678 into %606[%681] : tensor<64x!fhe.secret<i16>>
    %683 = affine.apply #map0(%c0_0)
    %c0_i16_10 = fhe.constant 0 : i16
    %684 = arith.addi %607, %c-1_1 : index
    %685 = arith.muli %684, %c8 : index
    %686 = arith.addi %683, %c-1 : index
    %687 = arith.addi %685, %686 : index
    %688 = arith.remui %687, %c64 : index
    %689 = tensor.extract %arg0[%688] : tensor<64x!fhe.secret<i16>>
    %690 = fhe.add(%c0_i16_10, %689) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %691 = affine.apply #map0(%c-1_1)
    %692 = arith.addi %607, %691 : index
    %693 = arith.muli %692, %c8 : index
    %694 = arith.addi %683, %c-1 : index
    %695 = arith.addi %693, %694 : index
    %696 = arith.remui %695, %c64 : index
    %697 = tensor.extract %arg0[%696] : tensor<64x!fhe.secret<i16>>
    %698 = fhe.add(%690, %697) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %699 = affine.apply #map1(%c-1_1)
    %700 = arith.addi %607, %699 : index
    %701 = arith.muli %700, %c8 : index
    %702 = arith.addi %683, %c-1 : index
    %703 = arith.addi %701, %702 : index
    %704 = arith.remui %703, %c64 : index
    %705 = tensor.extract %arg0[%704] : tensor<64x!fhe.secret<i16>>
    %706 = fhe.add(%698, %705) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %707 = affine.apply #map0(%c-1)
    %708 = arith.addi %607, %c-1_1 : index
    %709 = arith.muli %708, %c8 : index
    %710 = arith.addi %683, %707 : index
    %711 = arith.addi %709, %710 : index
    %712 = arith.remui %711, %c64 : index
    %713 = tensor.extract %arg0[%712] : tensor<64x!fhe.secret<i16>>
    %714 = fhe.add(%706, %713) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %715 = affine.apply #map0(%c-1_1)
    %716 = arith.addi %607, %715 : index
    %717 = arith.muli %716, %c8 : index
    %718 = arith.addi %683, %707 : index
    %719 = arith.addi %717, %718 : index
    %720 = arith.remui %719, %c64 : index
    %721 = tensor.extract %arg0[%720] : tensor<64x!fhe.secret<i16>>
    %722 = fhe.add(%714, %721) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %723 = affine.apply #map1(%c-1_1)
    %724 = arith.addi %607, %723 : index
    %725 = arith.muli %724, %c8 : index
    %726 = arith.addi %683, %707 : index
    %727 = arith.addi %725, %726 : index
    %728 = arith.remui %727, %c64 : index
    %729 = tensor.extract %arg0[%728] : tensor<64x!fhe.secret<i16>>
    %730 = fhe.add(%722, %729) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %731 = affine.apply #map1(%c-1)
    %732 = arith.addi %607, %c-1_1 : index
    %733 = arith.muli %732, %c8 : index
    %734 = arith.addi %683, %731 : index
    %735 = arith.addi %733, %734 : index
    %736 = arith.remui %735, %c64 : index
    %737 = tensor.extract %arg0[%736] : tensor<64x!fhe.secret<i16>>
    %738 = fhe.add(%730, %737) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %739 = affine.apply #map0(%c-1_1)
    %740 = arith.addi %607, %739 : index
    %741 = arith.muli %740, %c8 : index
    %742 = arith.addi %683, %731 : index
    %743 = arith.addi %741, %742 : index
    %744 = arith.remui %743, %c64 : index
    %745 = tensor.extract %arg0[%744] : tensor<64x!fhe.secret<i16>>
    %746 = fhe.add(%738, %745) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %747 = affine.apply #map1(%c-1_1)
    %748 = arith.addi %607, %747 : index
    %749 = arith.muli %748, %c8 : index
    %750 = arith.addi %683, %731 : index
    %751 = arith.addi %749, %750 : index
    %752 = arith.remui %751, %c64 : index
    %753 = tensor.extract %arg0[%752] : tensor<64x!fhe.secret<i16>>
    %754 = fhe.add(%746, %753) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %755 = arith.muli %c8, %607 : index
    %756 = arith.addi %755, %683 : index
    %757 = arith.remui %756, %c64 : index
    %758 = tensor.insert %754 into %682[%757] : tensor<64x!fhe.secret<i16>>
    %759 = affine.apply #map1(%c0_0)
    %c0_i16_11 = fhe.constant 0 : i16
    %760 = arith.addi %607, %c-1_1 : index
    %761 = arith.muli %760, %c8 : index
    %762 = arith.addi %759, %c-1 : index
    %763 = arith.addi %761, %762 : index
    %764 = arith.remui %763, %c64 : index
    %765 = tensor.extract %arg0[%764] : tensor<64x!fhe.secret<i16>>
    %766 = fhe.add(%c0_i16_11, %765) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %767 = affine.apply #map0(%c-1_1)
    %768 = arith.addi %607, %767 : index
    %769 = arith.muli %768, %c8 : index
    %770 = arith.addi %759, %c-1 : index
    %771 = arith.addi %769, %770 : index
    %772 = arith.remui %771, %c64 : index
    %773 = tensor.extract %arg0[%772] : tensor<64x!fhe.secret<i16>>
    %774 = fhe.add(%766, %773) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %775 = affine.apply #map1(%c-1_1)
    %776 = arith.addi %607, %775 : index
    %777 = arith.muli %776, %c8 : index
    %778 = arith.addi %759, %c-1 : index
    %779 = arith.addi %777, %778 : index
    %780 = arith.remui %779, %c64 : index
    %781 = tensor.extract %arg0[%780] : tensor<64x!fhe.secret<i16>>
    %782 = fhe.add(%774, %781) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %783 = affine.apply #map0(%c-1)
    %784 = arith.addi %607, %c-1_1 : index
    %785 = arith.muli %784, %c8 : index
    %786 = arith.addi %759, %783 : index
    %787 = arith.addi %785, %786 : index
    %788 = arith.remui %787, %c64 : index
    %789 = tensor.extract %arg0[%788] : tensor<64x!fhe.secret<i16>>
    %790 = fhe.add(%782, %789) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %791 = affine.apply #map0(%c-1_1)
    %792 = arith.addi %607, %791 : index
    %793 = arith.muli %792, %c8 : index
    %794 = arith.addi %759, %783 : index
    %795 = arith.addi %793, %794 : index
    %796 = arith.remui %795, %c64 : index
    %797 = tensor.extract %arg0[%796] : tensor<64x!fhe.secret<i16>>
    %798 = fhe.add(%790, %797) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %799 = affine.apply #map1(%c-1_1)
    %800 = arith.addi %607, %799 : index
    %801 = arith.muli %800, %c8 : index
    %802 = arith.addi %759, %783 : index
    %803 = arith.addi %801, %802 : index
    %804 = arith.remui %803, %c64 : index
    %805 = tensor.extract %arg0[%804] : tensor<64x!fhe.secret<i16>>
    %806 = fhe.add(%798, %805) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %807 = affine.apply #map1(%c-1)
    %808 = arith.addi %607, %c-1_1 : index
    %809 = arith.muli %808, %c8 : index
    %810 = arith.addi %759, %807 : index
    %811 = arith.addi %809, %810 : index
    %812 = arith.remui %811, %c64 : index
    %813 = tensor.extract %arg0[%812] : tensor<64x!fhe.secret<i16>>
    %814 = fhe.add(%806, %813) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %815 = affine.apply #map0(%c-1_1)
    %816 = arith.addi %607, %815 : index
    %817 = arith.muli %816, %c8 : index
    %818 = arith.addi %759, %807 : index
    %819 = arith.addi %817, %818 : index
    %820 = arith.remui %819, %c64 : index
    %821 = tensor.extract %arg0[%820] : tensor<64x!fhe.secret<i16>>
    %822 = fhe.add(%814, %821) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %823 = affine.apply #map1(%c-1_1)
    %824 = arith.addi %607, %823 : index
    %825 = arith.muli %824, %c8 : index
    %826 = arith.addi %759, %807 : index
    %827 = arith.addi %825, %826 : index
    %828 = arith.remui %827, %c64 : index
    %829 = tensor.extract %arg0[%828] : tensor<64x!fhe.secret<i16>>
    %830 = fhe.add(%822, %829) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %831 = arith.muli %c8, %607 : index
    %832 = arith.addi %831, %759 : index
    %833 = arith.remui %832, %c64 : index
    %834 = tensor.insert %830 into %758[%833] : tensor<64x!fhe.secret<i16>>
    %835 = affine.apply #map2(%c0_0)
    %c0_i16_12 = fhe.constant 0 : i16
    %836 = arith.addi %607, %c-1_1 : index
    %837 = arith.muli %836, %c8 : index
    %838 = arith.addi %835, %c-1 : index
    %839 = arith.addi %837, %838 : index
    %840 = arith.remui %839, %c64 : index
    %841 = tensor.extract %arg0[%840] : tensor<64x!fhe.secret<i16>>
    %842 = fhe.add(%c0_i16_12, %841) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %843 = affine.apply #map0(%c-1_1)
    %844 = arith.addi %607, %843 : index
    %845 = arith.muli %844, %c8 : index
    %846 = arith.addi %835, %c-1 : index
    %847 = arith.addi %845, %846 : index
    %848 = arith.remui %847, %c64 : index
    %849 = tensor.extract %arg0[%848] : tensor<64x!fhe.secret<i16>>
    %850 = fhe.add(%842, %849) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %851 = affine.apply #map1(%c-1_1)
    %852 = arith.addi %607, %851 : index
    %853 = arith.muli %852, %c8 : index
    %854 = arith.addi %835, %c-1 : index
    %855 = arith.addi %853, %854 : index
    %856 = arith.remui %855, %c64 : index
    %857 = tensor.extract %arg0[%856] : tensor<64x!fhe.secret<i16>>
    %858 = fhe.add(%850, %857) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %859 = affine.apply #map0(%c-1)
    %860 = arith.addi %607, %c-1_1 : index
    %861 = arith.muli %860, %c8 : index
    %862 = arith.addi %835, %859 : index
    %863 = arith.addi %861, %862 : index
    %864 = arith.remui %863, %c64 : index
    %865 = tensor.extract %arg0[%864] : tensor<64x!fhe.secret<i16>>
    %866 = fhe.add(%858, %865) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %867 = affine.apply #map0(%c-1_1)
    %868 = arith.addi %607, %867 : index
    %869 = arith.muli %868, %c8 : index
    %870 = arith.addi %835, %859 : index
    %871 = arith.addi %869, %870 : index
    %872 = arith.remui %871, %c64 : index
    %873 = tensor.extract %arg0[%872] : tensor<64x!fhe.secret<i16>>
    %874 = fhe.add(%866, %873) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %875 = affine.apply #map1(%c-1_1)
    %876 = arith.addi %607, %875 : index
    %877 = arith.muli %876, %c8 : index
    %878 = arith.addi %835, %859 : index
    %879 = arith.addi %877, %878 : index
    %880 = arith.remui %879, %c64 : index
    %881 = tensor.extract %arg0[%880] : tensor<64x!fhe.secret<i16>>
    %882 = fhe.add(%874, %881) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %883 = affine.apply #map1(%c-1)
    %884 = arith.addi %607, %c-1_1 : index
    %885 = arith.muli %884, %c8 : index
    %886 = arith.addi %835, %883 : index
    %887 = arith.addi %885, %886 : index
    %888 = arith.remui %887, %c64 : index
    %889 = tensor.extract %arg0[%888] : tensor<64x!fhe.secret<i16>>
    %890 = fhe.add(%882, %889) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %891 = affine.apply #map0(%c-1_1)
    %892 = arith.addi %607, %891 : index
    %893 = arith.muli %892, %c8 : index
    %894 = arith.addi %835, %883 : index
    %895 = arith.addi %893, %894 : index
    %896 = arith.remui %895, %c64 : index
    %897 = tensor.extract %arg0[%896] : tensor<64x!fhe.secret<i16>>
    %898 = fhe.add(%890, %897) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %899 = affine.apply #map1(%c-1_1)
    %900 = arith.addi %607, %899 : index
    %901 = arith.muli %900, %c8 : index
    %902 = arith.addi %835, %883 : index
    %903 = arith.addi %901, %902 : index
    %904 = arith.remui %903, %c64 : index
    %905 = tensor.extract %arg0[%904] : tensor<64x!fhe.secret<i16>>
    %906 = fhe.add(%898, %905) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %907 = arith.muli %c8, %607 : index
    %908 = arith.addi %907, %835 : index
    %909 = arith.remui %908, %c64 : index
    %910 = tensor.insert %906 into %834[%909] : tensor<64x!fhe.secret<i16>>
    %911 = affine.apply #map3(%c0_0)
    %c0_i16_13 = fhe.constant 0 : i16
    %912 = arith.addi %607, %c-1_1 : index
    %913 = arith.muli %912, %c8 : index
    %914 = arith.addi %911, %c-1 : index
    %915 = arith.addi %913, %914 : index
    %916 = arith.remui %915, %c64 : index
    %917 = tensor.extract %arg0[%916] : tensor<64x!fhe.secret<i16>>
    %918 = fhe.add(%c0_i16_13, %917) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %919 = affine.apply #map0(%c-1_1)
    %920 = arith.addi %607, %919 : index
    %921 = arith.muli %920, %c8 : index
    %922 = arith.addi %911, %c-1 : index
    %923 = arith.addi %921, %922 : index
    %924 = arith.remui %923, %c64 : index
    %925 = tensor.extract %arg0[%924] : tensor<64x!fhe.secret<i16>>
    %926 = fhe.add(%918, %925) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %927 = affine.apply #map1(%c-1_1)
    %928 = arith.addi %607, %927 : index
    %929 = arith.muli %928, %c8 : index
    %930 = arith.addi %911, %c-1 : index
    %931 = arith.addi %929, %930 : index
    %932 = arith.remui %931, %c64 : index
    %933 = tensor.extract %arg0[%932] : tensor<64x!fhe.secret<i16>>
    %934 = fhe.add(%926, %933) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %935 = affine.apply #map0(%c-1)
    %936 = arith.addi %607, %c-1_1 : index
    %937 = arith.muli %936, %c8 : index
    %938 = arith.addi %911, %935 : index
    %939 = arith.addi %937, %938 : index
    %940 = arith.remui %939, %c64 : index
    %941 = tensor.extract %arg0[%940] : tensor<64x!fhe.secret<i16>>
    %942 = fhe.add(%934, %941) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %943 = affine.apply #map0(%c-1_1)
    %944 = arith.addi %607, %943 : index
    %945 = arith.muli %944, %c8 : index
    %946 = arith.addi %911, %935 : index
    %947 = arith.addi %945, %946 : index
    %948 = arith.remui %947, %c64 : index
    %949 = tensor.extract %arg0[%948] : tensor<64x!fhe.secret<i16>>
    %950 = fhe.add(%942, %949) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %951 = affine.apply #map1(%c-1_1)
    %952 = arith.addi %607, %951 : index
    %953 = arith.muli %952, %c8 : index
    %954 = arith.addi %911, %935 : index
    %955 = arith.addi %953, %954 : index
    %956 = arith.remui %955, %c64 : index
    %957 = tensor.extract %arg0[%956] : tensor<64x!fhe.secret<i16>>
    %958 = fhe.add(%950, %957) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %959 = affine.apply #map1(%c-1)
    %960 = arith.addi %607, %c-1_1 : index
    %961 = arith.muli %960, %c8 : index
    %962 = arith.addi %911, %959 : index
    %963 = arith.addi %961, %962 : index
    %964 = arith.remui %963, %c64 : index
    %965 = tensor.extract %arg0[%964] : tensor<64x!fhe.secret<i16>>
    %966 = fhe.add(%958, %965) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %967 = affine.apply #map0(%c-1_1)
    %968 = arith.addi %607, %967 : index
    %969 = arith.muli %968, %c8 : index
    %970 = arith.addi %911, %959 : index
    %971 = arith.addi %969, %970 : index
    %972 = arith.remui %971, %c64 : index
    %973 = tensor.extract %arg0[%972] : tensor<64x!fhe.secret<i16>>
    %974 = fhe.add(%966, %973) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %975 = affine.apply #map1(%c-1_1)
    %976 = arith.addi %607, %975 : index
    %977 = arith.muli %976, %c8 : index
    %978 = arith.addi %911, %959 : index
    %979 = arith.addi %977, %978 : index
    %980 = arith.remui %979, %c64 : index
    %981 = tensor.extract %arg0[%980] : tensor<64x!fhe.secret<i16>>
    %982 = fhe.add(%974, %981) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %983 = arith.muli %c8, %607 : index
    %984 = arith.addi %983, %911 : index
    %985 = arith.remui %984, %c64 : index
    %986 = tensor.insert %982 into %910[%985] : tensor<64x!fhe.secret<i16>>
    %987 = affine.apply #map4(%c0_0)
    %c0_i16_14 = fhe.constant 0 : i16
    %988 = arith.addi %607, %c-1_1 : index
    %989 = arith.muli %988, %c8 : index
    %990 = arith.addi %987, %c-1 : index
    %991 = arith.addi %989, %990 : index
    %992 = arith.remui %991, %c64 : index
    %993 = tensor.extract %arg0[%992] : tensor<64x!fhe.secret<i16>>
    %994 = fhe.add(%c0_i16_14, %993) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %995 = affine.apply #map0(%c-1_1)
    %996 = arith.addi %607, %995 : index
    %997 = arith.muli %996, %c8 : index
    %998 = arith.addi %987, %c-1 : index
    %999 = arith.addi %997, %998 : index
    %1000 = arith.remui %999, %c64 : index
    %1001 = tensor.extract %arg0[%1000] : tensor<64x!fhe.secret<i16>>
    %1002 = fhe.add(%994, %1001) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1003 = affine.apply #map1(%c-1_1)
    %1004 = arith.addi %607, %1003 : index
    %1005 = arith.muli %1004, %c8 : index
    %1006 = arith.addi %987, %c-1 : index
    %1007 = arith.addi %1005, %1006 : index
    %1008 = arith.remui %1007, %c64 : index
    %1009 = tensor.extract %arg0[%1008] : tensor<64x!fhe.secret<i16>>
    %1010 = fhe.add(%1002, %1009) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1011 = affine.apply #map0(%c-1)
    %1012 = arith.addi %607, %c-1_1 : index
    %1013 = arith.muli %1012, %c8 : index
    %1014 = arith.addi %987, %1011 : index
    %1015 = arith.addi %1013, %1014 : index
    %1016 = arith.remui %1015, %c64 : index
    %1017 = tensor.extract %arg0[%1016] : tensor<64x!fhe.secret<i16>>
    %1018 = fhe.add(%1010, %1017) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1019 = affine.apply #map0(%c-1_1)
    %1020 = arith.addi %607, %1019 : index
    %1021 = arith.muli %1020, %c8 : index
    %1022 = arith.addi %987, %1011 : index
    %1023 = arith.addi %1021, %1022 : index
    %1024 = arith.remui %1023, %c64 : index
    %1025 = tensor.extract %arg0[%1024] : tensor<64x!fhe.secret<i16>>
    %1026 = fhe.add(%1018, %1025) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1027 = affine.apply #map1(%c-1_1)
    %1028 = arith.addi %607, %1027 : index
    %1029 = arith.muli %1028, %c8 : index
    %1030 = arith.addi %987, %1011 : index
    %1031 = arith.addi %1029, %1030 : index
    %1032 = arith.remui %1031, %c64 : index
    %1033 = tensor.extract %arg0[%1032] : tensor<64x!fhe.secret<i16>>
    %1034 = fhe.add(%1026, %1033) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1035 = affine.apply #map1(%c-1)
    %1036 = arith.addi %607, %c-1_1 : index
    %1037 = arith.muli %1036, %c8 : index
    %1038 = arith.addi %987, %1035 : index
    %1039 = arith.addi %1037, %1038 : index
    %1040 = arith.remui %1039, %c64 : index
    %1041 = tensor.extract %arg0[%1040] : tensor<64x!fhe.secret<i16>>
    %1042 = fhe.add(%1034, %1041) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1043 = affine.apply #map0(%c-1_1)
    %1044 = arith.addi %607, %1043 : index
    %1045 = arith.muli %1044, %c8 : index
    %1046 = arith.addi %987, %1035 : index
    %1047 = arith.addi %1045, %1046 : index
    %1048 = arith.remui %1047, %c64 : index
    %1049 = tensor.extract %arg0[%1048] : tensor<64x!fhe.secret<i16>>
    %1050 = fhe.add(%1042, %1049) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1051 = affine.apply #map1(%c-1_1)
    %1052 = arith.addi %607, %1051 : index
    %1053 = arith.muli %1052, %c8 : index
    %1054 = arith.addi %987, %1035 : index
    %1055 = arith.addi %1053, %1054 : index
    %1056 = arith.remui %1055, %c64 : index
    %1057 = tensor.extract %arg0[%1056] : tensor<64x!fhe.secret<i16>>
    %1058 = fhe.add(%1050, %1057) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1059 = arith.muli %c8, %607 : index
    %1060 = arith.addi %1059, %987 : index
    %1061 = arith.remui %1060, %c64 : index
    %1062 = tensor.insert %1058 into %986[%1061] : tensor<64x!fhe.secret<i16>>
    %1063 = affine.apply #map5(%c0_0)
    %c0_i16_15 = fhe.constant 0 : i16
    %1064 = arith.addi %607, %c-1_1 : index
    %1065 = arith.muli %1064, %c8 : index
    %1066 = arith.addi %1063, %c-1 : index
    %1067 = arith.addi %1065, %1066 : index
    %1068 = arith.remui %1067, %c64 : index
    %1069 = tensor.extract %arg0[%1068] : tensor<64x!fhe.secret<i16>>
    %1070 = fhe.add(%c0_i16_15, %1069) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1071 = affine.apply #map0(%c-1_1)
    %1072 = arith.addi %607, %1071 : index
    %1073 = arith.muli %1072, %c8 : index
    %1074 = arith.addi %1063, %c-1 : index
    %1075 = arith.addi %1073, %1074 : index
    %1076 = arith.remui %1075, %c64 : index
    %1077 = tensor.extract %arg0[%1076] : tensor<64x!fhe.secret<i16>>
    %1078 = fhe.add(%1070, %1077) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1079 = affine.apply #map1(%c-1_1)
    %1080 = arith.addi %607, %1079 : index
    %1081 = arith.muli %1080, %c8 : index
    %1082 = arith.addi %1063, %c-1 : index
    %1083 = arith.addi %1081, %1082 : index
    %1084 = arith.remui %1083, %c64 : index
    %1085 = tensor.extract %arg0[%1084] : tensor<64x!fhe.secret<i16>>
    %1086 = fhe.add(%1078, %1085) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1087 = affine.apply #map0(%c-1)
    %1088 = arith.addi %607, %c-1_1 : index
    %1089 = arith.muli %1088, %c8 : index
    %1090 = arith.addi %1063, %1087 : index
    %1091 = arith.addi %1089, %1090 : index
    %1092 = arith.remui %1091, %c64 : index
    %1093 = tensor.extract %arg0[%1092] : tensor<64x!fhe.secret<i16>>
    %1094 = fhe.add(%1086, %1093) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1095 = affine.apply #map0(%c-1_1)
    %1096 = arith.addi %607, %1095 : index
    %1097 = arith.muli %1096, %c8 : index
    %1098 = arith.addi %1063, %1087 : index
    %1099 = arith.addi %1097, %1098 : index
    %1100 = arith.remui %1099, %c64 : index
    %1101 = tensor.extract %arg0[%1100] : tensor<64x!fhe.secret<i16>>
    %1102 = fhe.add(%1094, %1101) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1103 = affine.apply #map1(%c-1_1)
    %1104 = arith.addi %607, %1103 : index
    %1105 = arith.muli %1104, %c8 : index
    %1106 = arith.addi %1063, %1087 : index
    %1107 = arith.addi %1105, %1106 : index
    %1108 = arith.remui %1107, %c64 : index
    %1109 = tensor.extract %arg0[%1108] : tensor<64x!fhe.secret<i16>>
    %1110 = fhe.add(%1102, %1109) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1111 = affine.apply #map1(%c-1)
    %1112 = arith.addi %607, %c-1_1 : index
    %1113 = arith.muli %1112, %c8 : index
    %1114 = arith.addi %1063, %1111 : index
    %1115 = arith.addi %1113, %1114 : index
    %1116 = arith.remui %1115, %c64 : index
    %1117 = tensor.extract %arg0[%1116] : tensor<64x!fhe.secret<i16>>
    %1118 = fhe.add(%1110, %1117) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1119 = affine.apply #map0(%c-1_1)
    %1120 = arith.addi %607, %1119 : index
    %1121 = arith.muli %1120, %c8 : index
    %1122 = arith.addi %1063, %1111 : index
    %1123 = arith.addi %1121, %1122 : index
    %1124 = arith.remui %1123, %c64 : index
    %1125 = tensor.extract %arg0[%1124] : tensor<64x!fhe.secret<i16>>
    %1126 = fhe.add(%1118, %1125) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1127 = affine.apply #map1(%c-1_1)
    %1128 = arith.addi %607, %1127 : index
    %1129 = arith.muli %1128, %c8 : index
    %1130 = arith.addi %1063, %1111 : index
    %1131 = arith.addi %1129, %1130 : index
    %1132 = arith.remui %1131, %c64 : index
    %1133 = tensor.extract %arg0[%1132] : tensor<64x!fhe.secret<i16>>
    %1134 = fhe.add(%1126, %1133) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1135 = arith.muli %c8, %607 : index
    %1136 = arith.addi %1135, %1063 : index
    %1137 = arith.remui %1136, %c64 : index
    %1138 = tensor.insert %1134 into %1062[%1137] : tensor<64x!fhe.secret<i16>>
    %1139 = affine.apply #map6(%c0_0)
    %c0_i16_16 = fhe.constant 0 : i16
    %1140 = arith.addi %607, %c-1_1 : index
    %1141 = arith.muli %1140, %c8 : index
    %1142 = arith.addi %1139, %c-1 : index
    %1143 = arith.addi %1141, %1142 : index
    %1144 = arith.remui %1143, %c64 : index
    %1145 = tensor.extract %arg0[%1144] : tensor<64x!fhe.secret<i16>>
    %1146 = fhe.add(%c0_i16_16, %1145) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1147 = affine.apply #map0(%c-1_1)
    %1148 = arith.addi %607, %1147 : index
    %1149 = arith.muli %1148, %c8 : index
    %1150 = arith.addi %1139, %c-1 : index
    %1151 = arith.addi %1149, %1150 : index
    %1152 = arith.remui %1151, %c64 : index
    %1153 = tensor.extract %arg0[%1152] : tensor<64x!fhe.secret<i16>>
    %1154 = fhe.add(%1146, %1153) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1155 = affine.apply #map1(%c-1_1)
    %1156 = arith.addi %607, %1155 : index
    %1157 = arith.muli %1156, %c8 : index
    %1158 = arith.addi %1139, %c-1 : index
    %1159 = arith.addi %1157, %1158 : index
    %1160 = arith.remui %1159, %c64 : index
    %1161 = tensor.extract %arg0[%1160] : tensor<64x!fhe.secret<i16>>
    %1162 = fhe.add(%1154, %1161) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1163 = affine.apply #map0(%c-1)
    %1164 = arith.addi %607, %c-1_1 : index
    %1165 = arith.muli %1164, %c8 : index
    %1166 = arith.addi %1139, %1163 : index
    %1167 = arith.addi %1165, %1166 : index
    %1168 = arith.remui %1167, %c64 : index
    %1169 = tensor.extract %arg0[%1168] : tensor<64x!fhe.secret<i16>>
    %1170 = fhe.add(%1162, %1169) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1171 = affine.apply #map0(%c-1_1)
    %1172 = arith.addi %607, %1171 : index
    %1173 = arith.muli %1172, %c8 : index
    %1174 = arith.addi %1139, %1163 : index
    %1175 = arith.addi %1173, %1174 : index
    %1176 = arith.remui %1175, %c64 : index
    %1177 = tensor.extract %arg0[%1176] : tensor<64x!fhe.secret<i16>>
    %1178 = fhe.add(%1170, %1177) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1179 = affine.apply #map1(%c-1_1)
    %1180 = arith.addi %607, %1179 : index
    %1181 = arith.muli %1180, %c8 : index
    %1182 = arith.addi %1139, %1163 : index
    %1183 = arith.addi %1181, %1182 : index
    %1184 = arith.remui %1183, %c64 : index
    %1185 = tensor.extract %arg0[%1184] : tensor<64x!fhe.secret<i16>>
    %1186 = fhe.add(%1178, %1185) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1187 = affine.apply #map1(%c-1)
    %1188 = arith.addi %607, %c-1_1 : index
    %1189 = arith.muli %1188, %c8 : index
    %1190 = arith.addi %1139, %1187 : index
    %1191 = arith.addi %1189, %1190 : index
    %1192 = arith.remui %1191, %c64 : index
    %1193 = tensor.extract %arg0[%1192] : tensor<64x!fhe.secret<i16>>
    %1194 = fhe.add(%1186, %1193) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1195 = affine.apply #map0(%c-1_1)
    %1196 = arith.addi %607, %1195 : index
    %1197 = arith.muli %1196, %c8 : index
    %1198 = arith.addi %1139, %1187 : index
    %1199 = arith.addi %1197, %1198 : index
    %1200 = arith.remui %1199, %c64 : index
    %1201 = tensor.extract %arg0[%1200] : tensor<64x!fhe.secret<i16>>
    %1202 = fhe.add(%1194, %1201) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1203 = affine.apply #map1(%c-1_1)
    %1204 = arith.addi %607, %1203 : index
    %1205 = arith.muli %1204, %c8 : index
    %1206 = arith.addi %1139, %1187 : index
    %1207 = arith.addi %1205, %1206 : index
    %1208 = arith.remui %1207, %c64 : index
    %1209 = tensor.extract %arg0[%1208] : tensor<64x!fhe.secret<i16>>
    %1210 = fhe.add(%1202, %1209) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1211 = arith.muli %c8, %607 : index
    %1212 = arith.addi %1211, %1139 : index
    %1213 = arith.remui %1212, %c64 : index
    %1214 = tensor.insert %1210 into %1138[%1213] : tensor<64x!fhe.secret<i16>>
    %1215 = affine.apply #map1(%c0)
    %c0_i16_17 = fhe.constant 0 : i16
    %1216 = arith.addi %1215, %c-1_1 : index
    %1217 = arith.muli %1216, %c8 : index
    %1218 = arith.addi %c0_0, %c-1 : index
    %1219 = arith.addi %1217, %1218 : index
    %1220 = arith.remui %1219, %c64 : index
    %1221 = tensor.extract %arg0[%1220] : tensor<64x!fhe.secret<i16>>
    %1222 = fhe.add(%c0_i16_17, %1221) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1223 = affine.apply #map0(%c-1_1)
    %1224 = arith.addi %1215, %1223 : index
    %1225 = arith.muli %1224, %c8 : index
    %1226 = arith.addi %c0_0, %c-1 : index
    %1227 = arith.addi %1225, %1226 : index
    %1228 = arith.remui %1227, %c64 : index
    %1229 = tensor.extract %arg0[%1228] : tensor<64x!fhe.secret<i16>>
    %1230 = fhe.add(%1222, %1229) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1231 = affine.apply #map1(%c-1_1)
    %1232 = arith.addi %1215, %1231 : index
    %1233 = arith.muli %1232, %c8 : index
    %1234 = arith.addi %c0_0, %c-1 : index
    %1235 = arith.addi %1233, %1234 : index
    %1236 = arith.remui %1235, %c64 : index
    %1237 = tensor.extract %arg0[%1236] : tensor<64x!fhe.secret<i16>>
    %1238 = fhe.add(%1230, %1237) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1239 = affine.apply #map0(%c-1)
    %1240 = arith.addi %1215, %c-1_1 : index
    %1241 = arith.muli %1240, %c8 : index
    %1242 = arith.addi %c0_0, %1239 : index
    %1243 = arith.addi %1241, %1242 : index
    %1244 = arith.remui %1243, %c64 : index
    %1245 = tensor.extract %arg0[%1244] : tensor<64x!fhe.secret<i16>>
    %1246 = fhe.add(%1238, %1245) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1247 = affine.apply #map0(%c-1_1)
    %1248 = arith.addi %1215, %1247 : index
    %1249 = arith.muli %1248, %c8 : index
    %1250 = arith.addi %c0_0, %1239 : index
    %1251 = arith.addi %1249, %1250 : index
    %1252 = arith.remui %1251, %c64 : index
    %1253 = tensor.extract %arg0[%1252] : tensor<64x!fhe.secret<i16>>
    %1254 = fhe.add(%1246, %1253) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1255 = affine.apply #map1(%c-1_1)
    %1256 = arith.addi %1215, %1255 : index
    %1257 = arith.muli %1256, %c8 : index
    %1258 = arith.addi %c0_0, %1239 : index
    %1259 = arith.addi %1257, %1258 : index
    %1260 = arith.remui %1259, %c64 : index
    %1261 = tensor.extract %arg0[%1260] : tensor<64x!fhe.secret<i16>>
    %1262 = fhe.add(%1254, %1261) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1263 = affine.apply #map1(%c-1)
    %1264 = arith.addi %1215, %c-1_1 : index
    %1265 = arith.muli %1264, %c8 : index
    %1266 = arith.addi %c0_0, %1263 : index
    %1267 = arith.addi %1265, %1266 : index
    %1268 = arith.remui %1267, %c64 : index
    %1269 = tensor.extract %arg0[%1268] : tensor<64x!fhe.secret<i16>>
    %1270 = fhe.add(%1262, %1269) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1271 = affine.apply #map0(%c-1_1)
    %1272 = arith.addi %1215, %1271 : index
    %1273 = arith.muli %1272, %c8 : index
    %1274 = arith.addi %c0_0, %1263 : index
    %1275 = arith.addi %1273, %1274 : index
    %1276 = arith.remui %1275, %c64 : index
    %1277 = tensor.extract %arg0[%1276] : tensor<64x!fhe.secret<i16>>
    %1278 = fhe.add(%1270, %1277) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1279 = affine.apply #map1(%c-1_1)
    %1280 = arith.addi %1215, %1279 : index
    %1281 = arith.muli %1280, %c8 : index
    %1282 = arith.addi %c0_0, %1263 : index
    %1283 = arith.addi %1281, %1282 : index
    %1284 = arith.remui %1283, %c64 : index
    %1285 = tensor.extract %arg0[%1284] : tensor<64x!fhe.secret<i16>>
    %1286 = fhe.add(%1278, %1285) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1287 = arith.muli %c8, %1215 : index
    %1288 = arith.addi %1287, %c0_0 : index
    %1289 = arith.remui %1288, %c64 : index
    %1290 = tensor.insert %1286 into %1214[%1289] : tensor<64x!fhe.secret<i16>>
    %1291 = affine.apply #map0(%c0_0)
    %c0_i16_18 = fhe.constant 0 : i16
    %1292 = arith.addi %1215, %c-1_1 : index
    %1293 = arith.muli %1292, %c8 : index
    %1294 = arith.addi %1291, %c-1 : index
    %1295 = arith.addi %1293, %1294 : index
    %1296 = arith.remui %1295, %c64 : index
    %1297 = tensor.extract %arg0[%1296] : tensor<64x!fhe.secret<i16>>
    %1298 = fhe.add(%c0_i16_18, %1297) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1299 = affine.apply #map0(%c-1_1)
    %1300 = arith.addi %1215, %1299 : index
    %1301 = arith.muli %1300, %c8 : index
    %1302 = arith.addi %1291, %c-1 : index
    %1303 = arith.addi %1301, %1302 : index
    %1304 = arith.remui %1303, %c64 : index
    %1305 = tensor.extract %arg0[%1304] : tensor<64x!fhe.secret<i16>>
    %1306 = fhe.add(%1298, %1305) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1307 = affine.apply #map1(%c-1_1)
    %1308 = arith.addi %1215, %1307 : index
    %1309 = arith.muli %1308, %c8 : index
    %1310 = arith.addi %1291, %c-1 : index
    %1311 = arith.addi %1309, %1310 : index
    %1312 = arith.remui %1311, %c64 : index
    %1313 = tensor.extract %arg0[%1312] : tensor<64x!fhe.secret<i16>>
    %1314 = fhe.add(%1306, %1313) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1315 = affine.apply #map0(%c-1)
    %1316 = arith.addi %1215, %c-1_1 : index
    %1317 = arith.muli %1316, %c8 : index
    %1318 = arith.addi %1291, %1315 : index
    %1319 = arith.addi %1317, %1318 : index
    %1320 = arith.remui %1319, %c64 : index
    %1321 = tensor.extract %arg0[%1320] : tensor<64x!fhe.secret<i16>>
    %1322 = fhe.add(%1314, %1321) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1323 = affine.apply #map0(%c-1_1)
    %1324 = arith.addi %1215, %1323 : index
    %1325 = arith.muli %1324, %c8 : index
    %1326 = arith.addi %1291, %1315 : index
    %1327 = arith.addi %1325, %1326 : index
    %1328 = arith.remui %1327, %c64 : index
    %1329 = tensor.extract %arg0[%1328] : tensor<64x!fhe.secret<i16>>
    %1330 = fhe.add(%1322, %1329) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1331 = affine.apply #map1(%c-1_1)
    %1332 = arith.addi %1215, %1331 : index
    %1333 = arith.muli %1332, %c8 : index
    %1334 = arith.addi %1291, %1315 : index
    %1335 = arith.addi %1333, %1334 : index
    %1336 = arith.remui %1335, %c64 : index
    %1337 = tensor.extract %arg0[%1336] : tensor<64x!fhe.secret<i16>>
    %1338 = fhe.add(%1330, %1337) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1339 = affine.apply #map1(%c-1)
    %1340 = arith.addi %1215, %c-1_1 : index
    %1341 = arith.muli %1340, %c8 : index
    %1342 = arith.addi %1291, %1339 : index
    %1343 = arith.addi %1341, %1342 : index
    %1344 = arith.remui %1343, %c64 : index
    %1345 = tensor.extract %arg0[%1344] : tensor<64x!fhe.secret<i16>>
    %1346 = fhe.add(%1338, %1345) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1347 = affine.apply #map0(%c-1_1)
    %1348 = arith.addi %1215, %1347 : index
    %1349 = arith.muli %1348, %c8 : index
    %1350 = arith.addi %1291, %1339 : index
    %1351 = arith.addi %1349, %1350 : index
    %1352 = arith.remui %1351, %c64 : index
    %1353 = tensor.extract %arg0[%1352] : tensor<64x!fhe.secret<i16>>
    %1354 = fhe.add(%1346, %1353) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1355 = affine.apply #map1(%c-1_1)
    %1356 = arith.addi %1215, %1355 : index
    %1357 = arith.muli %1356, %c8 : index
    %1358 = arith.addi %1291, %1339 : index
    %1359 = arith.addi %1357, %1358 : index
    %1360 = arith.remui %1359, %c64 : index
    %1361 = tensor.extract %arg0[%1360] : tensor<64x!fhe.secret<i16>>
    %1362 = fhe.add(%1354, %1361) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1363 = arith.muli %c8, %1215 : index
    %1364 = arith.addi %1363, %1291 : index
    %1365 = arith.remui %1364, %c64 : index
    %1366 = tensor.insert %1362 into %1290[%1365] : tensor<64x!fhe.secret<i16>>
    %1367 = affine.apply #map1(%c0_0)
    %c0_i16_19 = fhe.constant 0 : i16
    %1368 = arith.addi %1215, %c-1_1 : index
    %1369 = arith.muli %1368, %c8 : index
    %1370 = arith.addi %1367, %c-1 : index
    %1371 = arith.addi %1369, %1370 : index
    %1372 = arith.remui %1371, %c64 : index
    %1373 = tensor.extract %arg0[%1372] : tensor<64x!fhe.secret<i16>>
    %1374 = fhe.add(%c0_i16_19, %1373) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1375 = affine.apply #map0(%c-1_1)
    %1376 = arith.addi %1215, %1375 : index
    %1377 = arith.muli %1376, %c8 : index
    %1378 = arith.addi %1367, %c-1 : index
    %1379 = arith.addi %1377, %1378 : index
    %1380 = arith.remui %1379, %c64 : index
    %1381 = tensor.extract %arg0[%1380] : tensor<64x!fhe.secret<i16>>
    %1382 = fhe.add(%1374, %1381) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1383 = affine.apply #map1(%c-1_1)
    %1384 = arith.addi %1215, %1383 : index
    %1385 = arith.muli %1384, %c8 : index
    %1386 = arith.addi %1367, %c-1 : index
    %1387 = arith.addi %1385, %1386 : index
    %1388 = arith.remui %1387, %c64 : index
    %1389 = tensor.extract %arg0[%1388] : tensor<64x!fhe.secret<i16>>
    %1390 = fhe.add(%1382, %1389) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1391 = affine.apply #map0(%c-1)
    %1392 = arith.addi %1215, %c-1_1 : index
    %1393 = arith.muli %1392, %c8 : index
    %1394 = arith.addi %1367, %1391 : index
    %1395 = arith.addi %1393, %1394 : index
    %1396 = arith.remui %1395, %c64 : index
    %1397 = tensor.extract %arg0[%1396] : tensor<64x!fhe.secret<i16>>
    %1398 = fhe.add(%1390, %1397) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1399 = affine.apply #map0(%c-1_1)
    %1400 = arith.addi %1215, %1399 : index
    %1401 = arith.muli %1400, %c8 : index
    %1402 = arith.addi %1367, %1391 : index
    %1403 = arith.addi %1401, %1402 : index
    %1404 = arith.remui %1403, %c64 : index
    %1405 = tensor.extract %arg0[%1404] : tensor<64x!fhe.secret<i16>>
    %1406 = fhe.add(%1398, %1405) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1407 = affine.apply #map1(%c-1_1)
    %1408 = arith.addi %1215, %1407 : index
    %1409 = arith.muli %1408, %c8 : index
    %1410 = arith.addi %1367, %1391 : index
    %1411 = arith.addi %1409, %1410 : index
    %1412 = arith.remui %1411, %c64 : index
    %1413 = tensor.extract %arg0[%1412] : tensor<64x!fhe.secret<i16>>
    %1414 = fhe.add(%1406, %1413) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1415 = affine.apply #map1(%c-1)
    %1416 = arith.addi %1215, %c-1_1 : index
    %1417 = arith.muli %1416, %c8 : index
    %1418 = arith.addi %1367, %1415 : index
    %1419 = arith.addi %1417, %1418 : index
    %1420 = arith.remui %1419, %c64 : index
    %1421 = tensor.extract %arg0[%1420] : tensor<64x!fhe.secret<i16>>
    %1422 = fhe.add(%1414, %1421) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1423 = affine.apply #map0(%c-1_1)
    %1424 = arith.addi %1215, %1423 : index
    %1425 = arith.muli %1424, %c8 : index
    %1426 = arith.addi %1367, %1415 : index
    %1427 = arith.addi %1425, %1426 : index
    %1428 = arith.remui %1427, %c64 : index
    %1429 = tensor.extract %arg0[%1428] : tensor<64x!fhe.secret<i16>>
    %1430 = fhe.add(%1422, %1429) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1431 = affine.apply #map1(%c-1_1)
    %1432 = arith.addi %1215, %1431 : index
    %1433 = arith.muli %1432, %c8 : index
    %1434 = arith.addi %1367, %1415 : index
    %1435 = arith.addi %1433, %1434 : index
    %1436 = arith.remui %1435, %c64 : index
    %1437 = tensor.extract %arg0[%1436] : tensor<64x!fhe.secret<i16>>
    %1438 = fhe.add(%1430, %1437) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1439 = arith.muli %c8, %1215 : index
    %1440 = arith.addi %1439, %1367 : index
    %1441 = arith.remui %1440, %c64 : index
    %1442 = tensor.insert %1438 into %1366[%1441] : tensor<64x!fhe.secret<i16>>
    %1443 = affine.apply #map2(%c0_0)
    %c0_i16_20 = fhe.constant 0 : i16
    %1444 = arith.addi %1215, %c-1_1 : index
    %1445 = arith.muli %1444, %c8 : index
    %1446 = arith.addi %1443, %c-1 : index
    %1447 = arith.addi %1445, %1446 : index
    %1448 = arith.remui %1447, %c64 : index
    %1449 = tensor.extract %arg0[%1448] : tensor<64x!fhe.secret<i16>>
    %1450 = fhe.add(%c0_i16_20, %1449) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1451 = affine.apply #map0(%c-1_1)
    %1452 = arith.addi %1215, %1451 : index
    %1453 = arith.muli %1452, %c8 : index
    %1454 = arith.addi %1443, %c-1 : index
    %1455 = arith.addi %1453, %1454 : index
    %1456 = arith.remui %1455, %c64 : index
    %1457 = tensor.extract %arg0[%1456] : tensor<64x!fhe.secret<i16>>
    %1458 = fhe.add(%1450, %1457) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1459 = affine.apply #map1(%c-1_1)
    %1460 = arith.addi %1215, %1459 : index
    %1461 = arith.muli %1460, %c8 : index
    %1462 = arith.addi %1443, %c-1 : index
    %1463 = arith.addi %1461, %1462 : index
    %1464 = arith.remui %1463, %c64 : index
    %1465 = tensor.extract %arg0[%1464] : tensor<64x!fhe.secret<i16>>
    %1466 = fhe.add(%1458, %1465) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1467 = affine.apply #map0(%c-1)
    %1468 = arith.addi %1215, %c-1_1 : index
    %1469 = arith.muli %1468, %c8 : index
    %1470 = arith.addi %1443, %1467 : index
    %1471 = arith.addi %1469, %1470 : index
    %1472 = arith.remui %1471, %c64 : index
    %1473 = tensor.extract %arg0[%1472] : tensor<64x!fhe.secret<i16>>
    %1474 = fhe.add(%1466, %1473) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1475 = affine.apply #map0(%c-1_1)
    %1476 = arith.addi %1215, %1475 : index
    %1477 = arith.muli %1476, %c8 : index
    %1478 = arith.addi %1443, %1467 : index
    %1479 = arith.addi %1477, %1478 : index
    %1480 = arith.remui %1479, %c64 : index
    %1481 = tensor.extract %arg0[%1480] : tensor<64x!fhe.secret<i16>>
    %1482 = fhe.add(%1474, %1481) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1483 = affine.apply #map1(%c-1_1)
    %1484 = arith.addi %1215, %1483 : index
    %1485 = arith.muli %1484, %c8 : index
    %1486 = arith.addi %1443, %1467 : index
    %1487 = arith.addi %1485, %1486 : index
    %1488 = arith.remui %1487, %c64 : index
    %1489 = tensor.extract %arg0[%1488] : tensor<64x!fhe.secret<i16>>
    %1490 = fhe.add(%1482, %1489) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1491 = affine.apply #map1(%c-1)
    %1492 = arith.addi %1215, %c-1_1 : index
    %1493 = arith.muli %1492, %c8 : index
    %1494 = arith.addi %1443, %1491 : index
    %1495 = arith.addi %1493, %1494 : index
    %1496 = arith.remui %1495, %c64 : index
    %1497 = tensor.extract %arg0[%1496] : tensor<64x!fhe.secret<i16>>
    %1498 = fhe.add(%1490, %1497) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1499 = affine.apply #map0(%c-1_1)
    %1500 = arith.addi %1215, %1499 : index
    %1501 = arith.muli %1500, %c8 : index
    %1502 = arith.addi %1443, %1491 : index
    %1503 = arith.addi %1501, %1502 : index
    %1504 = arith.remui %1503, %c64 : index
    %1505 = tensor.extract %arg0[%1504] : tensor<64x!fhe.secret<i16>>
    %1506 = fhe.add(%1498, %1505) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1507 = affine.apply #map1(%c-1_1)
    %1508 = arith.addi %1215, %1507 : index
    %1509 = arith.muli %1508, %c8 : index
    %1510 = arith.addi %1443, %1491 : index
    %1511 = arith.addi %1509, %1510 : index
    %1512 = arith.remui %1511, %c64 : index
    %1513 = tensor.extract %arg0[%1512] : tensor<64x!fhe.secret<i16>>
    %1514 = fhe.add(%1506, %1513) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1515 = arith.muli %c8, %1215 : index
    %1516 = arith.addi %1515, %1443 : index
    %1517 = arith.remui %1516, %c64 : index
    %1518 = tensor.insert %1514 into %1442[%1517] : tensor<64x!fhe.secret<i16>>
    %1519 = affine.apply #map3(%c0_0)
    %c0_i16_21 = fhe.constant 0 : i16
    %1520 = arith.addi %1215, %c-1_1 : index
    %1521 = arith.muli %1520, %c8 : index
    %1522 = arith.addi %1519, %c-1 : index
    %1523 = arith.addi %1521, %1522 : index
    %1524 = arith.remui %1523, %c64 : index
    %1525 = tensor.extract %arg0[%1524] : tensor<64x!fhe.secret<i16>>
    %1526 = fhe.add(%c0_i16_21, %1525) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1527 = affine.apply #map0(%c-1_1)
    %1528 = arith.addi %1215, %1527 : index
    %1529 = arith.muli %1528, %c8 : index
    %1530 = arith.addi %1519, %c-1 : index
    %1531 = arith.addi %1529, %1530 : index
    %1532 = arith.remui %1531, %c64 : index
    %1533 = tensor.extract %arg0[%1532] : tensor<64x!fhe.secret<i16>>
    %1534 = fhe.add(%1526, %1533) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1535 = affine.apply #map1(%c-1_1)
    %1536 = arith.addi %1215, %1535 : index
    %1537 = arith.muli %1536, %c8 : index
    %1538 = arith.addi %1519, %c-1 : index
    %1539 = arith.addi %1537, %1538 : index
    %1540 = arith.remui %1539, %c64 : index
    %1541 = tensor.extract %arg0[%1540] : tensor<64x!fhe.secret<i16>>
    %1542 = fhe.add(%1534, %1541) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1543 = affine.apply #map0(%c-1)
    %1544 = arith.addi %1215, %c-1_1 : index
    %1545 = arith.muli %1544, %c8 : index
    %1546 = arith.addi %1519, %1543 : index
    %1547 = arith.addi %1545, %1546 : index
    %1548 = arith.remui %1547, %c64 : index
    %1549 = tensor.extract %arg0[%1548] : tensor<64x!fhe.secret<i16>>
    %1550 = fhe.add(%1542, %1549) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1551 = affine.apply #map0(%c-1_1)
    %1552 = arith.addi %1215, %1551 : index
    %1553 = arith.muli %1552, %c8 : index
    %1554 = arith.addi %1519, %1543 : index
    %1555 = arith.addi %1553, %1554 : index
    %1556 = arith.remui %1555, %c64 : index
    %1557 = tensor.extract %arg0[%1556] : tensor<64x!fhe.secret<i16>>
    %1558 = fhe.add(%1550, %1557) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1559 = affine.apply #map1(%c-1_1)
    %1560 = arith.addi %1215, %1559 : index
    %1561 = arith.muli %1560, %c8 : index
    %1562 = arith.addi %1519, %1543 : index
    %1563 = arith.addi %1561, %1562 : index
    %1564 = arith.remui %1563, %c64 : index
    %1565 = tensor.extract %arg0[%1564] : tensor<64x!fhe.secret<i16>>
    %1566 = fhe.add(%1558, %1565) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1567 = affine.apply #map1(%c-1)
    %1568 = arith.addi %1215, %c-1_1 : index
    %1569 = arith.muli %1568, %c8 : index
    %1570 = arith.addi %1519, %1567 : index
    %1571 = arith.addi %1569, %1570 : index
    %1572 = arith.remui %1571, %c64 : index
    %1573 = tensor.extract %arg0[%1572] : tensor<64x!fhe.secret<i16>>
    %1574 = fhe.add(%1566, %1573) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1575 = affine.apply #map0(%c-1_1)
    %1576 = arith.addi %1215, %1575 : index
    %1577 = arith.muli %1576, %c8 : index
    %1578 = arith.addi %1519, %1567 : index
    %1579 = arith.addi %1577, %1578 : index
    %1580 = arith.remui %1579, %c64 : index
    %1581 = tensor.extract %arg0[%1580] : tensor<64x!fhe.secret<i16>>
    %1582 = fhe.add(%1574, %1581) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1583 = affine.apply #map1(%c-1_1)
    %1584 = arith.addi %1215, %1583 : index
    %1585 = arith.muli %1584, %c8 : index
    %1586 = arith.addi %1519, %1567 : index
    %1587 = arith.addi %1585, %1586 : index
    %1588 = arith.remui %1587, %c64 : index
    %1589 = tensor.extract %arg0[%1588] : tensor<64x!fhe.secret<i16>>
    %1590 = fhe.add(%1582, %1589) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1591 = arith.muli %c8, %1215 : index
    %1592 = arith.addi %1591, %1519 : index
    %1593 = arith.remui %1592, %c64 : index
    %1594 = tensor.insert %1590 into %1518[%1593] : tensor<64x!fhe.secret<i16>>
    %1595 = affine.apply #map4(%c0_0)
    %c0_i16_22 = fhe.constant 0 : i16
    %1596 = arith.addi %1215, %c-1_1 : index
    %1597 = arith.muli %1596, %c8 : index
    %1598 = arith.addi %1595, %c-1 : index
    %1599 = arith.addi %1597, %1598 : index
    %1600 = arith.remui %1599, %c64 : index
    %1601 = tensor.extract %arg0[%1600] : tensor<64x!fhe.secret<i16>>
    %1602 = fhe.add(%c0_i16_22, %1601) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1603 = affine.apply #map0(%c-1_1)
    %1604 = arith.addi %1215, %1603 : index
    %1605 = arith.muli %1604, %c8 : index
    %1606 = arith.addi %1595, %c-1 : index
    %1607 = arith.addi %1605, %1606 : index
    %1608 = arith.remui %1607, %c64 : index
    %1609 = tensor.extract %arg0[%1608] : tensor<64x!fhe.secret<i16>>
    %1610 = fhe.add(%1602, %1609) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1611 = affine.apply #map1(%c-1_1)
    %1612 = arith.addi %1215, %1611 : index
    %1613 = arith.muli %1612, %c8 : index
    %1614 = arith.addi %1595, %c-1 : index
    %1615 = arith.addi %1613, %1614 : index
    %1616 = arith.remui %1615, %c64 : index
    %1617 = tensor.extract %arg0[%1616] : tensor<64x!fhe.secret<i16>>
    %1618 = fhe.add(%1610, %1617) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1619 = affine.apply #map0(%c-1)
    %1620 = arith.addi %1215, %c-1_1 : index
    %1621 = arith.muli %1620, %c8 : index
    %1622 = arith.addi %1595, %1619 : index
    %1623 = arith.addi %1621, %1622 : index
    %1624 = arith.remui %1623, %c64 : index
    %1625 = tensor.extract %arg0[%1624] : tensor<64x!fhe.secret<i16>>
    %1626 = fhe.add(%1618, %1625) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1627 = affine.apply #map0(%c-1_1)
    %1628 = arith.addi %1215, %1627 : index
    %1629 = arith.muli %1628, %c8 : index
    %1630 = arith.addi %1595, %1619 : index
    %1631 = arith.addi %1629, %1630 : index
    %1632 = arith.remui %1631, %c64 : index
    %1633 = tensor.extract %arg0[%1632] : tensor<64x!fhe.secret<i16>>
    %1634 = fhe.add(%1626, %1633) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1635 = affine.apply #map1(%c-1_1)
    %1636 = arith.addi %1215, %1635 : index
    %1637 = arith.muli %1636, %c8 : index
    %1638 = arith.addi %1595, %1619 : index
    %1639 = arith.addi %1637, %1638 : index
    %1640 = arith.remui %1639, %c64 : index
    %1641 = tensor.extract %arg0[%1640] : tensor<64x!fhe.secret<i16>>
    %1642 = fhe.add(%1634, %1641) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1643 = affine.apply #map1(%c-1)
    %1644 = arith.addi %1215, %c-1_1 : index
    %1645 = arith.muli %1644, %c8 : index
    %1646 = arith.addi %1595, %1643 : index
    %1647 = arith.addi %1645, %1646 : index
    %1648 = arith.remui %1647, %c64 : index
    %1649 = tensor.extract %arg0[%1648] : tensor<64x!fhe.secret<i16>>
    %1650 = fhe.add(%1642, %1649) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1651 = affine.apply #map0(%c-1_1)
    %1652 = arith.addi %1215, %1651 : index
    %1653 = arith.muli %1652, %c8 : index
    %1654 = arith.addi %1595, %1643 : index
    %1655 = arith.addi %1653, %1654 : index
    %1656 = arith.remui %1655, %c64 : index
    %1657 = tensor.extract %arg0[%1656] : tensor<64x!fhe.secret<i16>>
    %1658 = fhe.add(%1650, %1657) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1659 = affine.apply #map1(%c-1_1)
    %1660 = arith.addi %1215, %1659 : index
    %1661 = arith.muli %1660, %c8 : index
    %1662 = arith.addi %1595, %1643 : index
    %1663 = arith.addi %1661, %1662 : index
    %1664 = arith.remui %1663, %c64 : index
    %1665 = tensor.extract %arg0[%1664] : tensor<64x!fhe.secret<i16>>
    %1666 = fhe.add(%1658, %1665) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1667 = arith.muli %c8, %1215 : index
    %1668 = arith.addi %1667, %1595 : index
    %1669 = arith.remui %1668, %c64 : index
    %1670 = tensor.insert %1666 into %1594[%1669] : tensor<64x!fhe.secret<i16>>
    %1671 = affine.apply #map5(%c0_0)
    %c0_i16_23 = fhe.constant 0 : i16
    %1672 = arith.addi %1215, %c-1_1 : index
    %1673 = arith.muli %1672, %c8 : index
    %1674 = arith.addi %1671, %c-1 : index
    %1675 = arith.addi %1673, %1674 : index
    %1676 = arith.remui %1675, %c64 : index
    %1677 = tensor.extract %arg0[%1676] : tensor<64x!fhe.secret<i16>>
    %1678 = fhe.add(%c0_i16_23, %1677) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1679 = affine.apply #map0(%c-1_1)
    %1680 = arith.addi %1215, %1679 : index
    %1681 = arith.muli %1680, %c8 : index
    %1682 = arith.addi %1671, %c-1 : index
    %1683 = arith.addi %1681, %1682 : index
    %1684 = arith.remui %1683, %c64 : index
    %1685 = tensor.extract %arg0[%1684] : tensor<64x!fhe.secret<i16>>
    %1686 = fhe.add(%1678, %1685) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1687 = affine.apply #map1(%c-1_1)
    %1688 = arith.addi %1215, %1687 : index
    %1689 = arith.muli %1688, %c8 : index
    %1690 = arith.addi %1671, %c-1 : index
    %1691 = arith.addi %1689, %1690 : index
    %1692 = arith.remui %1691, %c64 : index
    %1693 = tensor.extract %arg0[%1692] : tensor<64x!fhe.secret<i16>>
    %1694 = fhe.add(%1686, %1693) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1695 = affine.apply #map0(%c-1)
    %1696 = arith.addi %1215, %c-1_1 : index
    %1697 = arith.muli %1696, %c8 : index
    %1698 = arith.addi %1671, %1695 : index
    %1699 = arith.addi %1697, %1698 : index
    %1700 = arith.remui %1699, %c64 : index
    %1701 = tensor.extract %arg0[%1700] : tensor<64x!fhe.secret<i16>>
    %1702 = fhe.add(%1694, %1701) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1703 = affine.apply #map0(%c-1_1)
    %1704 = arith.addi %1215, %1703 : index
    %1705 = arith.muli %1704, %c8 : index
    %1706 = arith.addi %1671, %1695 : index
    %1707 = arith.addi %1705, %1706 : index
    %1708 = arith.remui %1707, %c64 : index
    %1709 = tensor.extract %arg0[%1708] : tensor<64x!fhe.secret<i16>>
    %1710 = fhe.add(%1702, %1709) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1711 = affine.apply #map1(%c-1_1)
    %1712 = arith.addi %1215, %1711 : index
    %1713 = arith.muli %1712, %c8 : index
    %1714 = arith.addi %1671, %1695 : index
    %1715 = arith.addi %1713, %1714 : index
    %1716 = arith.remui %1715, %c64 : index
    %1717 = tensor.extract %arg0[%1716] : tensor<64x!fhe.secret<i16>>
    %1718 = fhe.add(%1710, %1717) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1719 = affine.apply #map1(%c-1)
    %1720 = arith.addi %1215, %c-1_1 : index
    %1721 = arith.muli %1720, %c8 : index
    %1722 = arith.addi %1671, %1719 : index
    %1723 = arith.addi %1721, %1722 : index
    %1724 = arith.remui %1723, %c64 : index
    %1725 = tensor.extract %arg0[%1724] : tensor<64x!fhe.secret<i16>>
    %1726 = fhe.add(%1718, %1725) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1727 = affine.apply #map0(%c-1_1)
    %1728 = arith.addi %1215, %1727 : index
    %1729 = arith.muli %1728, %c8 : index
    %1730 = arith.addi %1671, %1719 : index
    %1731 = arith.addi %1729, %1730 : index
    %1732 = arith.remui %1731, %c64 : index
    %1733 = tensor.extract %arg0[%1732] : tensor<64x!fhe.secret<i16>>
    %1734 = fhe.add(%1726, %1733) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1735 = affine.apply #map1(%c-1_1)
    %1736 = arith.addi %1215, %1735 : index
    %1737 = arith.muli %1736, %c8 : index
    %1738 = arith.addi %1671, %1719 : index
    %1739 = arith.addi %1737, %1738 : index
    %1740 = arith.remui %1739, %c64 : index
    %1741 = tensor.extract %arg0[%1740] : tensor<64x!fhe.secret<i16>>
    %1742 = fhe.add(%1734, %1741) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1743 = arith.muli %c8, %1215 : index
    %1744 = arith.addi %1743, %1671 : index
    %1745 = arith.remui %1744, %c64 : index
    %1746 = tensor.insert %1742 into %1670[%1745] : tensor<64x!fhe.secret<i16>>
    %1747 = affine.apply #map6(%c0_0)
    %c0_i16_24 = fhe.constant 0 : i16
    %1748 = arith.addi %1215, %c-1_1 : index
    %1749 = arith.muli %1748, %c8 : index
    %1750 = arith.addi %1747, %c-1 : index
    %1751 = arith.addi %1749, %1750 : index
    %1752 = arith.remui %1751, %c64 : index
    %1753 = tensor.extract %arg0[%1752] : tensor<64x!fhe.secret<i16>>
    %1754 = fhe.add(%c0_i16_24, %1753) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1755 = affine.apply #map0(%c-1_1)
    %1756 = arith.addi %1215, %1755 : index
    %1757 = arith.muli %1756, %c8 : index
    %1758 = arith.addi %1747, %c-1 : index
    %1759 = arith.addi %1757, %1758 : index
    %1760 = arith.remui %1759, %c64 : index
    %1761 = tensor.extract %arg0[%1760] : tensor<64x!fhe.secret<i16>>
    %1762 = fhe.add(%1754, %1761) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1763 = affine.apply #map1(%c-1_1)
    %1764 = arith.addi %1215, %1763 : index
    %1765 = arith.muli %1764, %c8 : index
    %1766 = arith.addi %1747, %c-1 : index
    %1767 = arith.addi %1765, %1766 : index
    %1768 = arith.remui %1767, %c64 : index
    %1769 = tensor.extract %arg0[%1768] : tensor<64x!fhe.secret<i16>>
    %1770 = fhe.add(%1762, %1769) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1771 = affine.apply #map0(%c-1)
    %1772 = arith.addi %1215, %c-1_1 : index
    %1773 = arith.muli %1772, %c8 : index
    %1774 = arith.addi %1747, %1771 : index
    %1775 = arith.addi %1773, %1774 : index
    %1776 = arith.remui %1775, %c64 : index
    %1777 = tensor.extract %arg0[%1776] : tensor<64x!fhe.secret<i16>>
    %1778 = fhe.add(%1770, %1777) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1779 = affine.apply #map0(%c-1_1)
    %1780 = arith.addi %1215, %1779 : index
    %1781 = arith.muli %1780, %c8 : index
    %1782 = arith.addi %1747, %1771 : index
    %1783 = arith.addi %1781, %1782 : index
    %1784 = arith.remui %1783, %c64 : index
    %1785 = tensor.extract %arg0[%1784] : tensor<64x!fhe.secret<i16>>
    %1786 = fhe.add(%1778, %1785) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1787 = affine.apply #map1(%c-1_1)
    %1788 = arith.addi %1215, %1787 : index
    %1789 = arith.muli %1788, %c8 : index
    %1790 = arith.addi %1747, %1771 : index
    %1791 = arith.addi %1789, %1790 : index
    %1792 = arith.remui %1791, %c64 : index
    %1793 = tensor.extract %arg0[%1792] : tensor<64x!fhe.secret<i16>>
    %1794 = fhe.add(%1786, %1793) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1795 = affine.apply #map1(%c-1)
    %1796 = arith.addi %1215, %c-1_1 : index
    %1797 = arith.muli %1796, %c8 : index
    %1798 = arith.addi %1747, %1795 : index
    %1799 = arith.addi %1797, %1798 : index
    %1800 = arith.remui %1799, %c64 : index
    %1801 = tensor.extract %arg0[%1800] : tensor<64x!fhe.secret<i16>>
    %1802 = fhe.add(%1794, %1801) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1803 = affine.apply #map0(%c-1_1)
    %1804 = arith.addi %1215, %1803 : index
    %1805 = arith.muli %1804, %c8 : index
    %1806 = arith.addi %1747, %1795 : index
    %1807 = arith.addi %1805, %1806 : index
    %1808 = arith.remui %1807, %c64 : index
    %1809 = tensor.extract %arg0[%1808] : tensor<64x!fhe.secret<i16>>
    %1810 = fhe.add(%1802, %1809) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1811 = affine.apply #map1(%c-1_1)
    %1812 = arith.addi %1215, %1811 : index
    %1813 = arith.muli %1812, %c8 : index
    %1814 = arith.addi %1747, %1795 : index
    %1815 = arith.addi %1813, %1814 : index
    %1816 = arith.remui %1815, %c64 : index
    %1817 = tensor.extract %arg0[%1816] : tensor<64x!fhe.secret<i16>>
    %1818 = fhe.add(%1810, %1817) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1819 = arith.muli %c8, %1215 : index
    %1820 = arith.addi %1819, %1747 : index
    %1821 = arith.remui %1820, %c64 : index
    %1822 = tensor.insert %1818 into %1746[%1821] : tensor<64x!fhe.secret<i16>>
    %1823 = affine.apply #map2(%c0)
    %c0_i16_25 = fhe.constant 0 : i16
    %1824 = arith.addi %1823, %c-1_1 : index
    %1825 = arith.muli %1824, %c8 : index
    %1826 = arith.addi %c0_0, %c-1 : index
    %1827 = arith.addi %1825, %1826 : index
    %1828 = arith.remui %1827, %c64 : index
    %1829 = tensor.extract %arg0[%1828] : tensor<64x!fhe.secret<i16>>
    %1830 = fhe.add(%c0_i16_25, %1829) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1831 = affine.apply #map0(%c-1_1)
    %1832 = arith.addi %1823, %1831 : index
    %1833 = arith.muli %1832, %c8 : index
    %1834 = arith.addi %c0_0, %c-1 : index
    %1835 = arith.addi %1833, %1834 : index
    %1836 = arith.remui %1835, %c64 : index
    %1837 = tensor.extract %arg0[%1836] : tensor<64x!fhe.secret<i16>>
    %1838 = fhe.add(%1830, %1837) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1839 = affine.apply #map1(%c-1_1)
    %1840 = arith.addi %1823, %1839 : index
    %1841 = arith.muli %1840, %c8 : index
    %1842 = arith.addi %c0_0, %c-1 : index
    %1843 = arith.addi %1841, %1842 : index
    %1844 = arith.remui %1843, %c64 : index
    %1845 = tensor.extract %arg0[%1844] : tensor<64x!fhe.secret<i16>>
    %1846 = fhe.add(%1838, %1845) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1847 = affine.apply #map0(%c-1)
    %1848 = arith.addi %1823, %c-1_1 : index
    %1849 = arith.muli %1848, %c8 : index
    %1850 = arith.addi %c0_0, %1847 : index
    %1851 = arith.addi %1849, %1850 : index
    %1852 = arith.remui %1851, %c64 : index
    %1853 = tensor.extract %arg0[%1852] : tensor<64x!fhe.secret<i16>>
    %1854 = fhe.add(%1846, %1853) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1855 = affine.apply #map0(%c-1_1)
    %1856 = arith.addi %1823, %1855 : index
    %1857 = arith.muli %1856, %c8 : index
    %1858 = arith.addi %c0_0, %1847 : index
    %1859 = arith.addi %1857, %1858 : index
    %1860 = arith.remui %1859, %c64 : index
    %1861 = tensor.extract %arg0[%1860] : tensor<64x!fhe.secret<i16>>
    %1862 = fhe.add(%1854, %1861) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1863 = affine.apply #map1(%c-1_1)
    %1864 = arith.addi %1823, %1863 : index
    %1865 = arith.muli %1864, %c8 : index
    %1866 = arith.addi %c0_0, %1847 : index
    %1867 = arith.addi %1865, %1866 : index
    %1868 = arith.remui %1867, %c64 : index
    %1869 = tensor.extract %arg0[%1868] : tensor<64x!fhe.secret<i16>>
    %1870 = fhe.add(%1862, %1869) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1871 = affine.apply #map1(%c-1)
    %1872 = arith.addi %1823, %c-1_1 : index
    %1873 = arith.muli %1872, %c8 : index
    %1874 = arith.addi %c0_0, %1871 : index
    %1875 = arith.addi %1873, %1874 : index
    %1876 = arith.remui %1875, %c64 : index
    %1877 = tensor.extract %arg0[%1876] : tensor<64x!fhe.secret<i16>>
    %1878 = fhe.add(%1870, %1877) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1879 = affine.apply #map0(%c-1_1)
    %1880 = arith.addi %1823, %1879 : index
    %1881 = arith.muli %1880, %c8 : index
    %1882 = arith.addi %c0_0, %1871 : index
    %1883 = arith.addi %1881, %1882 : index
    %1884 = arith.remui %1883, %c64 : index
    %1885 = tensor.extract %arg0[%1884] : tensor<64x!fhe.secret<i16>>
    %1886 = fhe.add(%1878, %1885) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1887 = affine.apply #map1(%c-1_1)
    %1888 = arith.addi %1823, %1887 : index
    %1889 = arith.muli %1888, %c8 : index
    %1890 = arith.addi %c0_0, %1871 : index
    %1891 = arith.addi %1889, %1890 : index
    %1892 = arith.remui %1891, %c64 : index
    %1893 = tensor.extract %arg0[%1892] : tensor<64x!fhe.secret<i16>>
    %1894 = fhe.add(%1886, %1893) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1895 = arith.muli %c8, %1823 : index
    %1896 = arith.addi %1895, %c0_0 : index
    %1897 = arith.remui %1896, %c64 : index
    %1898 = tensor.insert %1894 into %1822[%1897] : tensor<64x!fhe.secret<i16>>
    %1899 = affine.apply #map0(%c0_0)
    %c0_i16_26 = fhe.constant 0 : i16
    %1900 = arith.addi %1823, %c-1_1 : index
    %1901 = arith.muli %1900, %c8 : index
    %1902 = arith.addi %1899, %c-1 : index
    %1903 = arith.addi %1901, %1902 : index
    %1904 = arith.remui %1903, %c64 : index
    %1905 = tensor.extract %arg0[%1904] : tensor<64x!fhe.secret<i16>>
    %1906 = fhe.add(%c0_i16_26, %1905) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1907 = affine.apply #map0(%c-1_1)
    %1908 = arith.addi %1823, %1907 : index
    %1909 = arith.muli %1908, %c8 : index
    %1910 = arith.addi %1899, %c-1 : index
    %1911 = arith.addi %1909, %1910 : index
    %1912 = arith.remui %1911, %c64 : index
    %1913 = tensor.extract %arg0[%1912] : tensor<64x!fhe.secret<i16>>
    %1914 = fhe.add(%1906, %1913) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1915 = affine.apply #map1(%c-1_1)
    %1916 = arith.addi %1823, %1915 : index
    %1917 = arith.muli %1916, %c8 : index
    %1918 = arith.addi %1899, %c-1 : index
    %1919 = arith.addi %1917, %1918 : index
    %1920 = arith.remui %1919, %c64 : index
    %1921 = tensor.extract %arg0[%1920] : tensor<64x!fhe.secret<i16>>
    %1922 = fhe.add(%1914, %1921) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1923 = affine.apply #map0(%c-1)
    %1924 = arith.addi %1823, %c-1_1 : index
    %1925 = arith.muli %1924, %c8 : index
    %1926 = arith.addi %1899, %1923 : index
    %1927 = arith.addi %1925, %1926 : index
    %1928 = arith.remui %1927, %c64 : index
    %1929 = tensor.extract %arg0[%1928] : tensor<64x!fhe.secret<i16>>
    %1930 = fhe.add(%1922, %1929) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1931 = affine.apply #map0(%c-1_1)
    %1932 = arith.addi %1823, %1931 : index
    %1933 = arith.muli %1932, %c8 : index
    %1934 = arith.addi %1899, %1923 : index
    %1935 = arith.addi %1933, %1934 : index
    %1936 = arith.remui %1935, %c64 : index
    %1937 = tensor.extract %arg0[%1936] : tensor<64x!fhe.secret<i16>>
    %1938 = fhe.add(%1930, %1937) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1939 = affine.apply #map1(%c-1_1)
    %1940 = arith.addi %1823, %1939 : index
    %1941 = arith.muli %1940, %c8 : index
    %1942 = arith.addi %1899, %1923 : index
    %1943 = arith.addi %1941, %1942 : index
    %1944 = arith.remui %1943, %c64 : index
    %1945 = tensor.extract %arg0[%1944] : tensor<64x!fhe.secret<i16>>
    %1946 = fhe.add(%1938, %1945) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1947 = affine.apply #map1(%c-1)
    %1948 = arith.addi %1823, %c-1_1 : index
    %1949 = arith.muli %1948, %c8 : index
    %1950 = arith.addi %1899, %1947 : index
    %1951 = arith.addi %1949, %1950 : index
    %1952 = arith.remui %1951, %c64 : index
    %1953 = tensor.extract %arg0[%1952] : tensor<64x!fhe.secret<i16>>
    %1954 = fhe.add(%1946, %1953) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1955 = affine.apply #map0(%c-1_1)
    %1956 = arith.addi %1823, %1955 : index
    %1957 = arith.muli %1956, %c8 : index
    %1958 = arith.addi %1899, %1947 : index
    %1959 = arith.addi %1957, %1958 : index
    %1960 = arith.remui %1959, %c64 : index
    %1961 = tensor.extract %arg0[%1960] : tensor<64x!fhe.secret<i16>>
    %1962 = fhe.add(%1954, %1961) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1963 = affine.apply #map1(%c-1_1)
    %1964 = arith.addi %1823, %1963 : index
    %1965 = arith.muli %1964, %c8 : index
    %1966 = arith.addi %1899, %1947 : index
    %1967 = arith.addi %1965, %1966 : index
    %1968 = arith.remui %1967, %c64 : index
    %1969 = tensor.extract %arg0[%1968] : tensor<64x!fhe.secret<i16>>
    %1970 = fhe.add(%1962, %1969) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1971 = arith.muli %c8, %1823 : index
    %1972 = arith.addi %1971, %1899 : index
    %1973 = arith.remui %1972, %c64 : index
    %1974 = tensor.insert %1970 into %1898[%1973] : tensor<64x!fhe.secret<i16>>
    %1975 = affine.apply #map1(%c0_0)
    %c0_i16_27 = fhe.constant 0 : i16
    %1976 = arith.addi %1823, %c-1_1 : index
    %1977 = arith.muli %1976, %c8 : index
    %1978 = arith.addi %1975, %c-1 : index
    %1979 = arith.addi %1977, %1978 : index
    %1980 = arith.remui %1979, %c64 : index
    %1981 = tensor.extract %arg0[%1980] : tensor<64x!fhe.secret<i16>>
    %1982 = fhe.add(%c0_i16_27, %1981) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1983 = affine.apply #map0(%c-1_1)
    %1984 = arith.addi %1823, %1983 : index
    %1985 = arith.muli %1984, %c8 : index
    %1986 = arith.addi %1975, %c-1 : index
    %1987 = arith.addi %1985, %1986 : index
    %1988 = arith.remui %1987, %c64 : index
    %1989 = tensor.extract %arg0[%1988] : tensor<64x!fhe.secret<i16>>
    %1990 = fhe.add(%1982, %1989) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1991 = affine.apply #map1(%c-1_1)
    %1992 = arith.addi %1823, %1991 : index
    %1993 = arith.muli %1992, %c8 : index
    %1994 = arith.addi %1975, %c-1 : index
    %1995 = arith.addi %1993, %1994 : index
    %1996 = arith.remui %1995, %c64 : index
    %1997 = tensor.extract %arg0[%1996] : tensor<64x!fhe.secret<i16>>
    %1998 = fhe.add(%1990, %1997) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %1999 = affine.apply #map0(%c-1)
    %2000 = arith.addi %1823, %c-1_1 : index
    %2001 = arith.muli %2000, %c8 : index
    %2002 = arith.addi %1975, %1999 : index
    %2003 = arith.addi %2001, %2002 : index
    %2004 = arith.remui %2003, %c64 : index
    %2005 = tensor.extract %arg0[%2004] : tensor<64x!fhe.secret<i16>>
    %2006 = fhe.add(%1998, %2005) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2007 = affine.apply #map0(%c-1_1)
    %2008 = arith.addi %1823, %2007 : index
    %2009 = arith.muli %2008, %c8 : index
    %2010 = arith.addi %1975, %1999 : index
    %2011 = arith.addi %2009, %2010 : index
    %2012 = arith.remui %2011, %c64 : index
    %2013 = tensor.extract %arg0[%2012] : tensor<64x!fhe.secret<i16>>
    %2014 = fhe.add(%2006, %2013) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2015 = affine.apply #map1(%c-1_1)
    %2016 = arith.addi %1823, %2015 : index
    %2017 = arith.muli %2016, %c8 : index
    %2018 = arith.addi %1975, %1999 : index
    %2019 = arith.addi %2017, %2018 : index
    %2020 = arith.remui %2019, %c64 : index
    %2021 = tensor.extract %arg0[%2020] : tensor<64x!fhe.secret<i16>>
    %2022 = fhe.add(%2014, %2021) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2023 = affine.apply #map1(%c-1)
    %2024 = arith.addi %1823, %c-1_1 : index
    %2025 = arith.muli %2024, %c8 : index
    %2026 = arith.addi %1975, %2023 : index
    %2027 = arith.addi %2025, %2026 : index
    %2028 = arith.remui %2027, %c64 : index
    %2029 = tensor.extract %arg0[%2028] : tensor<64x!fhe.secret<i16>>
    %2030 = fhe.add(%2022, %2029) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2031 = affine.apply #map0(%c-1_1)
    %2032 = arith.addi %1823, %2031 : index
    %2033 = arith.muli %2032, %c8 : index
    %2034 = arith.addi %1975, %2023 : index
    %2035 = arith.addi %2033, %2034 : index
    %2036 = arith.remui %2035, %c64 : index
    %2037 = tensor.extract %arg0[%2036] : tensor<64x!fhe.secret<i16>>
    %2038 = fhe.add(%2030, %2037) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2039 = affine.apply #map1(%c-1_1)
    %2040 = arith.addi %1823, %2039 : index
    %2041 = arith.muli %2040, %c8 : index
    %2042 = arith.addi %1975, %2023 : index
    %2043 = arith.addi %2041, %2042 : index
    %2044 = arith.remui %2043, %c64 : index
    %2045 = tensor.extract %arg0[%2044] : tensor<64x!fhe.secret<i16>>
    %2046 = fhe.add(%2038, %2045) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2047 = arith.muli %c8, %1823 : index
    %2048 = arith.addi %2047, %1975 : index
    %2049 = arith.remui %2048, %c64 : index
    %2050 = tensor.insert %2046 into %1974[%2049] : tensor<64x!fhe.secret<i16>>
    %2051 = affine.apply #map2(%c0_0)
    %c0_i16_28 = fhe.constant 0 : i16
    %2052 = arith.addi %1823, %c-1_1 : index
    %2053 = arith.muli %2052, %c8 : index
    %2054 = arith.addi %2051, %c-1 : index
    %2055 = arith.addi %2053, %2054 : index
    %2056 = arith.remui %2055, %c64 : index
    %2057 = tensor.extract %arg0[%2056] : tensor<64x!fhe.secret<i16>>
    %2058 = fhe.add(%c0_i16_28, %2057) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2059 = affine.apply #map0(%c-1_1)
    %2060 = arith.addi %1823, %2059 : index
    %2061 = arith.muli %2060, %c8 : index
    %2062 = arith.addi %2051, %c-1 : index
    %2063 = arith.addi %2061, %2062 : index
    %2064 = arith.remui %2063, %c64 : index
    %2065 = tensor.extract %arg0[%2064] : tensor<64x!fhe.secret<i16>>
    %2066 = fhe.add(%2058, %2065) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2067 = affine.apply #map1(%c-1_1)
    %2068 = arith.addi %1823, %2067 : index
    %2069 = arith.muli %2068, %c8 : index
    %2070 = arith.addi %2051, %c-1 : index
    %2071 = arith.addi %2069, %2070 : index
    %2072 = arith.remui %2071, %c64 : index
    %2073 = tensor.extract %arg0[%2072] : tensor<64x!fhe.secret<i16>>
    %2074 = fhe.add(%2066, %2073) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2075 = affine.apply #map0(%c-1)
    %2076 = arith.addi %1823, %c-1_1 : index
    %2077 = arith.muli %2076, %c8 : index
    %2078 = arith.addi %2051, %2075 : index
    %2079 = arith.addi %2077, %2078 : index
    %2080 = arith.remui %2079, %c64 : index
    %2081 = tensor.extract %arg0[%2080] : tensor<64x!fhe.secret<i16>>
    %2082 = fhe.add(%2074, %2081) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2083 = affine.apply #map0(%c-1_1)
    %2084 = arith.addi %1823, %2083 : index
    %2085 = arith.muli %2084, %c8 : index
    %2086 = arith.addi %2051, %2075 : index
    %2087 = arith.addi %2085, %2086 : index
    %2088 = arith.remui %2087, %c64 : index
    %2089 = tensor.extract %arg0[%2088] : tensor<64x!fhe.secret<i16>>
    %2090 = fhe.add(%2082, %2089) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2091 = affine.apply #map1(%c-1_1)
    %2092 = arith.addi %1823, %2091 : index
    %2093 = arith.muli %2092, %c8 : index
    %2094 = arith.addi %2051, %2075 : index
    %2095 = arith.addi %2093, %2094 : index
    %2096 = arith.remui %2095, %c64 : index
    %2097 = tensor.extract %arg0[%2096] : tensor<64x!fhe.secret<i16>>
    %2098 = fhe.add(%2090, %2097) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2099 = affine.apply #map1(%c-1)
    %2100 = arith.addi %1823, %c-1_1 : index
    %2101 = arith.muli %2100, %c8 : index
    %2102 = arith.addi %2051, %2099 : index
    %2103 = arith.addi %2101, %2102 : index
    %2104 = arith.remui %2103, %c64 : index
    %2105 = tensor.extract %arg0[%2104] : tensor<64x!fhe.secret<i16>>
    %2106 = fhe.add(%2098, %2105) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2107 = affine.apply #map0(%c-1_1)
    %2108 = arith.addi %1823, %2107 : index
    %2109 = arith.muli %2108, %c8 : index
    %2110 = arith.addi %2051, %2099 : index
    %2111 = arith.addi %2109, %2110 : index
    %2112 = arith.remui %2111, %c64 : index
    %2113 = tensor.extract %arg0[%2112] : tensor<64x!fhe.secret<i16>>
    %2114 = fhe.add(%2106, %2113) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2115 = affine.apply #map1(%c-1_1)
    %2116 = arith.addi %1823, %2115 : index
    %2117 = arith.muli %2116, %c8 : index
    %2118 = arith.addi %2051, %2099 : index
    %2119 = arith.addi %2117, %2118 : index
    %2120 = arith.remui %2119, %c64 : index
    %2121 = tensor.extract %arg0[%2120] : tensor<64x!fhe.secret<i16>>
    %2122 = fhe.add(%2114, %2121) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2123 = arith.muli %c8, %1823 : index
    %2124 = arith.addi %2123, %2051 : index
    %2125 = arith.remui %2124, %c64 : index
    %2126 = tensor.insert %2122 into %2050[%2125] : tensor<64x!fhe.secret<i16>>
    %2127 = affine.apply #map3(%c0_0)
    %c0_i16_29 = fhe.constant 0 : i16
    %2128 = arith.addi %1823, %c-1_1 : index
    %2129 = arith.muli %2128, %c8 : index
    %2130 = arith.addi %2127, %c-1 : index
    %2131 = arith.addi %2129, %2130 : index
    %2132 = arith.remui %2131, %c64 : index
    %2133 = tensor.extract %arg0[%2132] : tensor<64x!fhe.secret<i16>>
    %2134 = fhe.add(%c0_i16_29, %2133) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2135 = affine.apply #map0(%c-1_1)
    %2136 = arith.addi %1823, %2135 : index
    %2137 = arith.muli %2136, %c8 : index
    %2138 = arith.addi %2127, %c-1 : index
    %2139 = arith.addi %2137, %2138 : index
    %2140 = arith.remui %2139, %c64 : index
    %2141 = tensor.extract %arg0[%2140] : tensor<64x!fhe.secret<i16>>
    %2142 = fhe.add(%2134, %2141) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2143 = affine.apply #map1(%c-1_1)
    %2144 = arith.addi %1823, %2143 : index
    %2145 = arith.muli %2144, %c8 : index
    %2146 = arith.addi %2127, %c-1 : index
    %2147 = arith.addi %2145, %2146 : index
    %2148 = arith.remui %2147, %c64 : index
    %2149 = tensor.extract %arg0[%2148] : tensor<64x!fhe.secret<i16>>
    %2150 = fhe.add(%2142, %2149) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2151 = affine.apply #map0(%c-1)
    %2152 = arith.addi %1823, %c-1_1 : index
    %2153 = arith.muli %2152, %c8 : index
    %2154 = arith.addi %2127, %2151 : index
    %2155 = arith.addi %2153, %2154 : index
    %2156 = arith.remui %2155, %c64 : index
    %2157 = tensor.extract %arg0[%2156] : tensor<64x!fhe.secret<i16>>
    %2158 = fhe.add(%2150, %2157) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2159 = affine.apply #map0(%c-1_1)
    %2160 = arith.addi %1823, %2159 : index
    %2161 = arith.muli %2160, %c8 : index
    %2162 = arith.addi %2127, %2151 : index
    %2163 = arith.addi %2161, %2162 : index
    %2164 = arith.remui %2163, %c64 : index
    %2165 = tensor.extract %arg0[%2164] : tensor<64x!fhe.secret<i16>>
    %2166 = fhe.add(%2158, %2165) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2167 = affine.apply #map1(%c-1_1)
    %2168 = arith.addi %1823, %2167 : index
    %2169 = arith.muli %2168, %c8 : index
    %2170 = arith.addi %2127, %2151 : index
    %2171 = arith.addi %2169, %2170 : index
    %2172 = arith.remui %2171, %c64 : index
    %2173 = tensor.extract %arg0[%2172] : tensor<64x!fhe.secret<i16>>
    %2174 = fhe.add(%2166, %2173) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2175 = affine.apply #map1(%c-1)
    %2176 = arith.addi %1823, %c-1_1 : index
    %2177 = arith.muli %2176, %c8 : index
    %2178 = arith.addi %2127, %2175 : index
    %2179 = arith.addi %2177, %2178 : index
    %2180 = arith.remui %2179, %c64 : index
    %2181 = tensor.extract %arg0[%2180] : tensor<64x!fhe.secret<i16>>
    %2182 = fhe.add(%2174, %2181) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2183 = affine.apply #map0(%c-1_1)
    %2184 = arith.addi %1823, %2183 : index
    %2185 = arith.muli %2184, %c8 : index
    %2186 = arith.addi %2127, %2175 : index
    %2187 = arith.addi %2185, %2186 : index
    %2188 = arith.remui %2187, %c64 : index
    %2189 = tensor.extract %arg0[%2188] : tensor<64x!fhe.secret<i16>>
    %2190 = fhe.add(%2182, %2189) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2191 = affine.apply #map1(%c-1_1)
    %2192 = arith.addi %1823, %2191 : index
    %2193 = arith.muli %2192, %c8 : index
    %2194 = arith.addi %2127, %2175 : index
    %2195 = arith.addi %2193, %2194 : index
    %2196 = arith.remui %2195, %c64 : index
    %2197 = tensor.extract %arg0[%2196] : tensor<64x!fhe.secret<i16>>
    %2198 = fhe.add(%2190, %2197) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2199 = arith.muli %c8, %1823 : index
    %2200 = arith.addi %2199, %2127 : index
    %2201 = arith.remui %2200, %c64 : index
    %2202 = tensor.insert %2198 into %2126[%2201] : tensor<64x!fhe.secret<i16>>
    %2203 = affine.apply #map4(%c0_0)
    %c0_i16_30 = fhe.constant 0 : i16
    %2204 = arith.addi %1823, %c-1_1 : index
    %2205 = arith.muli %2204, %c8 : index
    %2206 = arith.addi %2203, %c-1 : index
    %2207 = arith.addi %2205, %2206 : index
    %2208 = arith.remui %2207, %c64 : index
    %2209 = tensor.extract %arg0[%2208] : tensor<64x!fhe.secret<i16>>
    %2210 = fhe.add(%c0_i16_30, %2209) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2211 = affine.apply #map0(%c-1_1)
    %2212 = arith.addi %1823, %2211 : index
    %2213 = arith.muli %2212, %c8 : index
    %2214 = arith.addi %2203, %c-1 : index
    %2215 = arith.addi %2213, %2214 : index
    %2216 = arith.remui %2215, %c64 : index
    %2217 = tensor.extract %arg0[%2216] : tensor<64x!fhe.secret<i16>>
    %2218 = fhe.add(%2210, %2217) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2219 = affine.apply #map1(%c-1_1)
    %2220 = arith.addi %1823, %2219 : index
    %2221 = arith.muli %2220, %c8 : index
    %2222 = arith.addi %2203, %c-1 : index
    %2223 = arith.addi %2221, %2222 : index
    %2224 = arith.remui %2223, %c64 : index
    %2225 = tensor.extract %arg0[%2224] : tensor<64x!fhe.secret<i16>>
    %2226 = fhe.add(%2218, %2225) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2227 = affine.apply #map0(%c-1)
    %2228 = arith.addi %1823, %c-1_1 : index
    %2229 = arith.muli %2228, %c8 : index
    %2230 = arith.addi %2203, %2227 : index
    %2231 = arith.addi %2229, %2230 : index
    %2232 = arith.remui %2231, %c64 : index
    %2233 = tensor.extract %arg0[%2232] : tensor<64x!fhe.secret<i16>>
    %2234 = fhe.add(%2226, %2233) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2235 = affine.apply #map0(%c-1_1)
    %2236 = arith.addi %1823, %2235 : index
    %2237 = arith.muli %2236, %c8 : index
    %2238 = arith.addi %2203, %2227 : index
    %2239 = arith.addi %2237, %2238 : index
    %2240 = arith.remui %2239, %c64 : index
    %2241 = tensor.extract %arg0[%2240] : tensor<64x!fhe.secret<i16>>
    %2242 = fhe.add(%2234, %2241) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2243 = affine.apply #map1(%c-1_1)
    %2244 = arith.addi %1823, %2243 : index
    %2245 = arith.muli %2244, %c8 : index
    %2246 = arith.addi %2203, %2227 : index
    %2247 = arith.addi %2245, %2246 : index
    %2248 = arith.remui %2247, %c64 : index
    %2249 = tensor.extract %arg0[%2248] : tensor<64x!fhe.secret<i16>>
    %2250 = fhe.add(%2242, %2249) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2251 = affine.apply #map1(%c-1)
    %2252 = arith.addi %1823, %c-1_1 : index
    %2253 = arith.muli %2252, %c8 : index
    %2254 = arith.addi %2203, %2251 : index
    %2255 = arith.addi %2253, %2254 : index
    %2256 = arith.remui %2255, %c64 : index
    %2257 = tensor.extract %arg0[%2256] : tensor<64x!fhe.secret<i16>>
    %2258 = fhe.add(%2250, %2257) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2259 = affine.apply #map0(%c-1_1)
    %2260 = arith.addi %1823, %2259 : index
    %2261 = arith.muli %2260, %c8 : index
    %2262 = arith.addi %2203, %2251 : index
    %2263 = arith.addi %2261, %2262 : index
    %2264 = arith.remui %2263, %c64 : index
    %2265 = tensor.extract %arg0[%2264] : tensor<64x!fhe.secret<i16>>
    %2266 = fhe.add(%2258, %2265) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2267 = affine.apply #map1(%c-1_1)
    %2268 = arith.addi %1823, %2267 : index
    %2269 = arith.muli %2268, %c8 : index
    %2270 = arith.addi %2203, %2251 : index
    %2271 = arith.addi %2269, %2270 : index
    %2272 = arith.remui %2271, %c64 : index
    %2273 = tensor.extract %arg0[%2272] : tensor<64x!fhe.secret<i16>>
    %2274 = fhe.add(%2266, %2273) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2275 = arith.muli %c8, %1823 : index
    %2276 = arith.addi %2275, %2203 : index
    %2277 = arith.remui %2276, %c64 : index
    %2278 = tensor.insert %2274 into %2202[%2277] : tensor<64x!fhe.secret<i16>>
    %2279 = affine.apply #map5(%c0_0)
    %c0_i16_31 = fhe.constant 0 : i16
    %2280 = arith.addi %1823, %c-1_1 : index
    %2281 = arith.muli %2280, %c8 : index
    %2282 = arith.addi %2279, %c-1 : index
    %2283 = arith.addi %2281, %2282 : index
    %2284 = arith.remui %2283, %c64 : index
    %2285 = tensor.extract %arg0[%2284] : tensor<64x!fhe.secret<i16>>
    %2286 = fhe.add(%c0_i16_31, %2285) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2287 = affine.apply #map0(%c-1_1)
    %2288 = arith.addi %1823, %2287 : index
    %2289 = arith.muli %2288, %c8 : index
    %2290 = arith.addi %2279, %c-1 : index
    %2291 = arith.addi %2289, %2290 : index
    %2292 = arith.remui %2291, %c64 : index
    %2293 = tensor.extract %arg0[%2292] : tensor<64x!fhe.secret<i16>>
    %2294 = fhe.add(%2286, %2293) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2295 = affine.apply #map1(%c-1_1)
    %2296 = arith.addi %1823, %2295 : index
    %2297 = arith.muli %2296, %c8 : index
    %2298 = arith.addi %2279, %c-1 : index
    %2299 = arith.addi %2297, %2298 : index
    %2300 = arith.remui %2299, %c64 : index
    %2301 = tensor.extract %arg0[%2300] : tensor<64x!fhe.secret<i16>>
    %2302 = fhe.add(%2294, %2301) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2303 = affine.apply #map0(%c-1)
    %2304 = arith.addi %1823, %c-1_1 : index
    %2305 = arith.muli %2304, %c8 : index
    %2306 = arith.addi %2279, %2303 : index
    %2307 = arith.addi %2305, %2306 : index
    %2308 = arith.remui %2307, %c64 : index
    %2309 = tensor.extract %arg0[%2308] : tensor<64x!fhe.secret<i16>>
    %2310 = fhe.add(%2302, %2309) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2311 = affine.apply #map0(%c-1_1)
    %2312 = arith.addi %1823, %2311 : index
    %2313 = arith.muli %2312, %c8 : index
    %2314 = arith.addi %2279, %2303 : index
    %2315 = arith.addi %2313, %2314 : index
    %2316 = arith.remui %2315, %c64 : index
    %2317 = tensor.extract %arg0[%2316] : tensor<64x!fhe.secret<i16>>
    %2318 = fhe.add(%2310, %2317) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2319 = affine.apply #map1(%c-1_1)
    %2320 = arith.addi %1823, %2319 : index
    %2321 = arith.muli %2320, %c8 : index
    %2322 = arith.addi %2279, %2303 : index
    %2323 = arith.addi %2321, %2322 : index
    %2324 = arith.remui %2323, %c64 : index
    %2325 = tensor.extract %arg0[%2324] : tensor<64x!fhe.secret<i16>>
    %2326 = fhe.add(%2318, %2325) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2327 = affine.apply #map1(%c-1)
    %2328 = arith.addi %1823, %c-1_1 : index
    %2329 = arith.muli %2328, %c8 : index
    %2330 = arith.addi %2279, %2327 : index
    %2331 = arith.addi %2329, %2330 : index
    %2332 = arith.remui %2331, %c64 : index
    %2333 = tensor.extract %arg0[%2332] : tensor<64x!fhe.secret<i16>>
    %2334 = fhe.add(%2326, %2333) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2335 = affine.apply #map0(%c-1_1)
    %2336 = arith.addi %1823, %2335 : index
    %2337 = arith.muli %2336, %c8 : index
    %2338 = arith.addi %2279, %2327 : index
    %2339 = arith.addi %2337, %2338 : index
    %2340 = arith.remui %2339, %c64 : index
    %2341 = tensor.extract %arg0[%2340] : tensor<64x!fhe.secret<i16>>
    %2342 = fhe.add(%2334, %2341) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2343 = affine.apply #map1(%c-1_1)
    %2344 = arith.addi %1823, %2343 : index
    %2345 = arith.muli %2344, %c8 : index
    %2346 = arith.addi %2279, %2327 : index
    %2347 = arith.addi %2345, %2346 : index
    %2348 = arith.remui %2347, %c64 : index
    %2349 = tensor.extract %arg0[%2348] : tensor<64x!fhe.secret<i16>>
    %2350 = fhe.add(%2342, %2349) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2351 = arith.muli %c8, %1823 : index
    %2352 = arith.addi %2351, %2279 : index
    %2353 = arith.remui %2352, %c64 : index
    %2354 = tensor.insert %2350 into %2278[%2353] : tensor<64x!fhe.secret<i16>>
    %2355 = affine.apply #map6(%c0_0)
    %c0_i16_32 = fhe.constant 0 : i16
    %2356 = arith.addi %1823, %c-1_1 : index
    %2357 = arith.muli %2356, %c8 : index
    %2358 = arith.addi %2355, %c-1 : index
    %2359 = arith.addi %2357, %2358 : index
    %2360 = arith.remui %2359, %c64 : index
    %2361 = tensor.extract %arg0[%2360] : tensor<64x!fhe.secret<i16>>
    %2362 = fhe.add(%c0_i16_32, %2361) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2363 = affine.apply #map0(%c-1_1)
    %2364 = arith.addi %1823, %2363 : index
    %2365 = arith.muli %2364, %c8 : index
    %2366 = arith.addi %2355, %c-1 : index
    %2367 = arith.addi %2365, %2366 : index
    %2368 = arith.remui %2367, %c64 : index
    %2369 = tensor.extract %arg0[%2368] : tensor<64x!fhe.secret<i16>>
    %2370 = fhe.add(%2362, %2369) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2371 = affine.apply #map1(%c-1_1)
    %2372 = arith.addi %1823, %2371 : index
    %2373 = arith.muli %2372, %c8 : index
    %2374 = arith.addi %2355, %c-1 : index
    %2375 = arith.addi %2373, %2374 : index
    %2376 = arith.remui %2375, %c64 : index
    %2377 = tensor.extract %arg0[%2376] : tensor<64x!fhe.secret<i16>>
    %2378 = fhe.add(%2370, %2377) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2379 = affine.apply #map0(%c-1)
    %2380 = arith.addi %1823, %c-1_1 : index
    %2381 = arith.muli %2380, %c8 : index
    %2382 = arith.addi %2355, %2379 : index
    %2383 = arith.addi %2381, %2382 : index
    %2384 = arith.remui %2383, %c64 : index
    %2385 = tensor.extract %arg0[%2384] : tensor<64x!fhe.secret<i16>>
    %2386 = fhe.add(%2378, %2385) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2387 = affine.apply #map0(%c-1_1)
    %2388 = arith.addi %1823, %2387 : index
    %2389 = arith.muli %2388, %c8 : index
    %2390 = arith.addi %2355, %2379 : index
    %2391 = arith.addi %2389, %2390 : index
    %2392 = arith.remui %2391, %c64 : index
    %2393 = tensor.extract %arg0[%2392] : tensor<64x!fhe.secret<i16>>
    %2394 = fhe.add(%2386, %2393) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2395 = affine.apply #map1(%c-1_1)
    %2396 = arith.addi %1823, %2395 : index
    %2397 = arith.muli %2396, %c8 : index
    %2398 = arith.addi %2355, %2379 : index
    %2399 = arith.addi %2397, %2398 : index
    %2400 = arith.remui %2399, %c64 : index
    %2401 = tensor.extract %arg0[%2400] : tensor<64x!fhe.secret<i16>>
    %2402 = fhe.add(%2394, %2401) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2403 = affine.apply #map1(%c-1)
    %2404 = arith.addi %1823, %c-1_1 : index
    %2405 = arith.muli %2404, %c8 : index
    %2406 = arith.addi %2355, %2403 : index
    %2407 = arith.addi %2405, %2406 : index
    %2408 = arith.remui %2407, %c64 : index
    %2409 = tensor.extract %arg0[%2408] : tensor<64x!fhe.secret<i16>>
    %2410 = fhe.add(%2402, %2409) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2411 = affine.apply #map0(%c-1_1)
    %2412 = arith.addi %1823, %2411 : index
    %2413 = arith.muli %2412, %c8 : index
    %2414 = arith.addi %2355, %2403 : index
    %2415 = arith.addi %2413, %2414 : index
    %2416 = arith.remui %2415, %c64 : index
    %2417 = tensor.extract %arg0[%2416] : tensor<64x!fhe.secret<i16>>
    %2418 = fhe.add(%2410, %2417) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2419 = affine.apply #map1(%c-1_1)
    %2420 = arith.addi %1823, %2419 : index
    %2421 = arith.muli %2420, %c8 : index
    %2422 = arith.addi %2355, %2403 : index
    %2423 = arith.addi %2421, %2422 : index
    %2424 = arith.remui %2423, %c64 : index
    %2425 = tensor.extract %arg0[%2424] : tensor<64x!fhe.secret<i16>>
    %2426 = fhe.add(%2418, %2425) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2427 = arith.muli %c8, %1823 : index
    %2428 = arith.addi %2427, %2355 : index
    %2429 = arith.remui %2428, %c64 : index
    %2430 = tensor.insert %2426 into %2354[%2429] : tensor<64x!fhe.secret<i16>>
    %2431 = affine.apply #map3(%c0)
    %c0_i16_33 = fhe.constant 0 : i16
    %2432 = arith.addi %2431, %c-1_1 : index
    %2433 = arith.muli %2432, %c8 : index
    %2434 = arith.addi %c0_0, %c-1 : index
    %2435 = arith.addi %2433, %2434 : index
    %2436 = arith.remui %2435, %c64 : index
    %2437 = tensor.extract %arg0[%2436] : tensor<64x!fhe.secret<i16>>
    %2438 = fhe.add(%c0_i16_33, %2437) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2439 = affine.apply #map0(%c-1_1)
    %2440 = arith.addi %2431, %2439 : index
    %2441 = arith.muli %2440, %c8 : index
    %2442 = arith.addi %c0_0, %c-1 : index
    %2443 = arith.addi %2441, %2442 : index
    %2444 = arith.remui %2443, %c64 : index
    %2445 = tensor.extract %arg0[%2444] : tensor<64x!fhe.secret<i16>>
    %2446 = fhe.add(%2438, %2445) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2447 = affine.apply #map1(%c-1_1)
    %2448 = arith.addi %2431, %2447 : index
    %2449 = arith.muli %2448, %c8 : index
    %2450 = arith.addi %c0_0, %c-1 : index
    %2451 = arith.addi %2449, %2450 : index
    %2452 = arith.remui %2451, %c64 : index
    %2453 = tensor.extract %arg0[%2452] : tensor<64x!fhe.secret<i16>>
    %2454 = fhe.add(%2446, %2453) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2455 = affine.apply #map0(%c-1)
    %2456 = arith.addi %2431, %c-1_1 : index
    %2457 = arith.muli %2456, %c8 : index
    %2458 = arith.addi %c0_0, %2455 : index
    %2459 = arith.addi %2457, %2458 : index
    %2460 = arith.remui %2459, %c64 : index
    %2461 = tensor.extract %arg0[%2460] : tensor<64x!fhe.secret<i16>>
    %2462 = fhe.add(%2454, %2461) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2463 = affine.apply #map0(%c-1_1)
    %2464 = arith.addi %2431, %2463 : index
    %2465 = arith.muli %2464, %c8 : index
    %2466 = arith.addi %c0_0, %2455 : index
    %2467 = arith.addi %2465, %2466 : index
    %2468 = arith.remui %2467, %c64 : index
    %2469 = tensor.extract %arg0[%2468] : tensor<64x!fhe.secret<i16>>
    %2470 = fhe.add(%2462, %2469) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2471 = affine.apply #map1(%c-1_1)
    %2472 = arith.addi %2431, %2471 : index
    %2473 = arith.muli %2472, %c8 : index
    %2474 = arith.addi %c0_0, %2455 : index
    %2475 = arith.addi %2473, %2474 : index
    %2476 = arith.remui %2475, %c64 : index
    %2477 = tensor.extract %arg0[%2476] : tensor<64x!fhe.secret<i16>>
    %2478 = fhe.add(%2470, %2477) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2479 = affine.apply #map1(%c-1)
    %2480 = arith.addi %2431, %c-1_1 : index
    %2481 = arith.muli %2480, %c8 : index
    %2482 = arith.addi %c0_0, %2479 : index
    %2483 = arith.addi %2481, %2482 : index
    %2484 = arith.remui %2483, %c64 : index
    %2485 = tensor.extract %arg0[%2484] : tensor<64x!fhe.secret<i16>>
    %2486 = fhe.add(%2478, %2485) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2487 = affine.apply #map0(%c-1_1)
    %2488 = arith.addi %2431, %2487 : index
    %2489 = arith.muli %2488, %c8 : index
    %2490 = arith.addi %c0_0, %2479 : index
    %2491 = arith.addi %2489, %2490 : index
    %2492 = arith.remui %2491, %c64 : index
    %2493 = tensor.extract %arg0[%2492] : tensor<64x!fhe.secret<i16>>
    %2494 = fhe.add(%2486, %2493) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2495 = affine.apply #map1(%c-1_1)
    %2496 = arith.addi %2431, %2495 : index
    %2497 = arith.muli %2496, %c8 : index
    %2498 = arith.addi %c0_0, %2479 : index
    %2499 = arith.addi %2497, %2498 : index
    %2500 = arith.remui %2499, %c64 : index
    %2501 = tensor.extract %arg0[%2500] : tensor<64x!fhe.secret<i16>>
    %2502 = fhe.add(%2494, %2501) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2503 = arith.muli %c8, %2431 : index
    %2504 = arith.addi %2503, %c0_0 : index
    %2505 = arith.remui %2504, %c64 : index
    %2506 = tensor.insert %2502 into %2430[%2505] : tensor<64x!fhe.secret<i16>>
    %2507 = affine.apply #map0(%c0_0)
    %c0_i16_34 = fhe.constant 0 : i16
    %2508 = arith.addi %2431, %c-1_1 : index
    %2509 = arith.muli %2508, %c8 : index
    %2510 = arith.addi %2507, %c-1 : index
    %2511 = arith.addi %2509, %2510 : index
    %2512 = arith.remui %2511, %c64 : index
    %2513 = tensor.extract %arg0[%2512] : tensor<64x!fhe.secret<i16>>
    %2514 = fhe.add(%c0_i16_34, %2513) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2515 = affine.apply #map0(%c-1_1)
    %2516 = arith.addi %2431, %2515 : index
    %2517 = arith.muli %2516, %c8 : index
    %2518 = arith.addi %2507, %c-1 : index
    %2519 = arith.addi %2517, %2518 : index
    %2520 = arith.remui %2519, %c64 : index
    %2521 = tensor.extract %arg0[%2520] : tensor<64x!fhe.secret<i16>>
    %2522 = fhe.add(%2514, %2521) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2523 = affine.apply #map1(%c-1_1)
    %2524 = arith.addi %2431, %2523 : index
    %2525 = arith.muli %2524, %c8 : index
    %2526 = arith.addi %2507, %c-1 : index
    %2527 = arith.addi %2525, %2526 : index
    %2528 = arith.remui %2527, %c64 : index
    %2529 = tensor.extract %arg0[%2528] : tensor<64x!fhe.secret<i16>>
    %2530 = fhe.add(%2522, %2529) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2531 = affine.apply #map0(%c-1)
    %2532 = arith.addi %2431, %c-1_1 : index
    %2533 = arith.muli %2532, %c8 : index
    %2534 = arith.addi %2507, %2531 : index
    %2535 = arith.addi %2533, %2534 : index
    %2536 = arith.remui %2535, %c64 : index
    %2537 = tensor.extract %arg0[%2536] : tensor<64x!fhe.secret<i16>>
    %2538 = fhe.add(%2530, %2537) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2539 = affine.apply #map0(%c-1_1)
    %2540 = arith.addi %2431, %2539 : index
    %2541 = arith.muli %2540, %c8 : index
    %2542 = arith.addi %2507, %2531 : index
    %2543 = arith.addi %2541, %2542 : index
    %2544 = arith.remui %2543, %c64 : index
    %2545 = tensor.extract %arg0[%2544] : tensor<64x!fhe.secret<i16>>
    %2546 = fhe.add(%2538, %2545) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2547 = affine.apply #map1(%c-1_1)
    %2548 = arith.addi %2431, %2547 : index
    %2549 = arith.muli %2548, %c8 : index
    %2550 = arith.addi %2507, %2531 : index
    %2551 = arith.addi %2549, %2550 : index
    %2552 = arith.remui %2551, %c64 : index
    %2553 = tensor.extract %arg0[%2552] : tensor<64x!fhe.secret<i16>>
    %2554 = fhe.add(%2546, %2553) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2555 = affine.apply #map1(%c-1)
    %2556 = arith.addi %2431, %c-1_1 : index
    %2557 = arith.muli %2556, %c8 : index
    %2558 = arith.addi %2507, %2555 : index
    %2559 = arith.addi %2557, %2558 : index
    %2560 = arith.remui %2559, %c64 : index
    %2561 = tensor.extract %arg0[%2560] : tensor<64x!fhe.secret<i16>>
    %2562 = fhe.add(%2554, %2561) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2563 = affine.apply #map0(%c-1_1)
    %2564 = arith.addi %2431, %2563 : index
    %2565 = arith.muli %2564, %c8 : index
    %2566 = arith.addi %2507, %2555 : index
    %2567 = arith.addi %2565, %2566 : index
    %2568 = arith.remui %2567, %c64 : index
    %2569 = tensor.extract %arg0[%2568] : tensor<64x!fhe.secret<i16>>
    %2570 = fhe.add(%2562, %2569) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2571 = affine.apply #map1(%c-1_1)
    %2572 = arith.addi %2431, %2571 : index
    %2573 = arith.muli %2572, %c8 : index
    %2574 = arith.addi %2507, %2555 : index
    %2575 = arith.addi %2573, %2574 : index
    %2576 = arith.remui %2575, %c64 : index
    %2577 = tensor.extract %arg0[%2576] : tensor<64x!fhe.secret<i16>>
    %2578 = fhe.add(%2570, %2577) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2579 = arith.muli %c8, %2431 : index
    %2580 = arith.addi %2579, %2507 : index
    %2581 = arith.remui %2580, %c64 : index
    %2582 = tensor.insert %2578 into %2506[%2581] : tensor<64x!fhe.secret<i16>>
    %2583 = affine.apply #map1(%c0_0)
    %c0_i16_35 = fhe.constant 0 : i16
    %2584 = arith.addi %2431, %c-1_1 : index
    %2585 = arith.muli %2584, %c8 : index
    %2586 = arith.addi %2583, %c-1 : index
    %2587 = arith.addi %2585, %2586 : index
    %2588 = arith.remui %2587, %c64 : index
    %2589 = tensor.extract %arg0[%2588] : tensor<64x!fhe.secret<i16>>
    %2590 = fhe.add(%c0_i16_35, %2589) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2591 = affine.apply #map0(%c-1_1)
    %2592 = arith.addi %2431, %2591 : index
    %2593 = arith.muli %2592, %c8 : index
    %2594 = arith.addi %2583, %c-1 : index
    %2595 = arith.addi %2593, %2594 : index
    %2596 = arith.remui %2595, %c64 : index
    %2597 = tensor.extract %arg0[%2596] : tensor<64x!fhe.secret<i16>>
    %2598 = fhe.add(%2590, %2597) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2599 = affine.apply #map1(%c-1_1)
    %2600 = arith.addi %2431, %2599 : index
    %2601 = arith.muli %2600, %c8 : index
    %2602 = arith.addi %2583, %c-1 : index
    %2603 = arith.addi %2601, %2602 : index
    %2604 = arith.remui %2603, %c64 : index
    %2605 = tensor.extract %arg0[%2604] : tensor<64x!fhe.secret<i16>>
    %2606 = fhe.add(%2598, %2605) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2607 = affine.apply #map0(%c-1)
    %2608 = arith.addi %2431, %c-1_1 : index
    %2609 = arith.muli %2608, %c8 : index
    %2610 = arith.addi %2583, %2607 : index
    %2611 = arith.addi %2609, %2610 : index
    %2612 = arith.remui %2611, %c64 : index
    %2613 = tensor.extract %arg0[%2612] : tensor<64x!fhe.secret<i16>>
    %2614 = fhe.add(%2606, %2613) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2615 = affine.apply #map0(%c-1_1)
    %2616 = arith.addi %2431, %2615 : index
    %2617 = arith.muli %2616, %c8 : index
    %2618 = arith.addi %2583, %2607 : index
    %2619 = arith.addi %2617, %2618 : index
    %2620 = arith.remui %2619, %c64 : index
    %2621 = tensor.extract %arg0[%2620] : tensor<64x!fhe.secret<i16>>
    %2622 = fhe.add(%2614, %2621) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2623 = affine.apply #map1(%c-1_1)
    %2624 = arith.addi %2431, %2623 : index
    %2625 = arith.muli %2624, %c8 : index
    %2626 = arith.addi %2583, %2607 : index
    %2627 = arith.addi %2625, %2626 : index
    %2628 = arith.remui %2627, %c64 : index
    %2629 = tensor.extract %arg0[%2628] : tensor<64x!fhe.secret<i16>>
    %2630 = fhe.add(%2622, %2629) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2631 = affine.apply #map1(%c-1)
    %2632 = arith.addi %2431, %c-1_1 : index
    %2633 = arith.muli %2632, %c8 : index
    %2634 = arith.addi %2583, %2631 : index
    %2635 = arith.addi %2633, %2634 : index
    %2636 = arith.remui %2635, %c64 : index
    %2637 = tensor.extract %arg0[%2636] : tensor<64x!fhe.secret<i16>>
    %2638 = fhe.add(%2630, %2637) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2639 = affine.apply #map0(%c-1_1)
    %2640 = arith.addi %2431, %2639 : index
    %2641 = arith.muli %2640, %c8 : index
    %2642 = arith.addi %2583, %2631 : index
    %2643 = arith.addi %2641, %2642 : index
    %2644 = arith.remui %2643, %c64 : index
    %2645 = tensor.extract %arg0[%2644] : tensor<64x!fhe.secret<i16>>
    %2646 = fhe.add(%2638, %2645) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2647 = affine.apply #map1(%c-1_1)
    %2648 = arith.addi %2431, %2647 : index
    %2649 = arith.muli %2648, %c8 : index
    %2650 = arith.addi %2583, %2631 : index
    %2651 = arith.addi %2649, %2650 : index
    %2652 = arith.remui %2651, %c64 : index
    %2653 = tensor.extract %arg0[%2652] : tensor<64x!fhe.secret<i16>>
    %2654 = fhe.add(%2646, %2653) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2655 = arith.muli %c8, %2431 : index
    %2656 = arith.addi %2655, %2583 : index
    %2657 = arith.remui %2656, %c64 : index
    %2658 = tensor.insert %2654 into %2582[%2657] : tensor<64x!fhe.secret<i16>>
    %2659 = affine.apply #map2(%c0_0)
    %c0_i16_36 = fhe.constant 0 : i16
    %2660 = arith.addi %2431, %c-1_1 : index
    %2661 = arith.muli %2660, %c8 : index
    %2662 = arith.addi %2659, %c-1 : index
    %2663 = arith.addi %2661, %2662 : index
    %2664 = arith.remui %2663, %c64 : index
    %2665 = tensor.extract %arg0[%2664] : tensor<64x!fhe.secret<i16>>
    %2666 = fhe.add(%c0_i16_36, %2665) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2667 = affine.apply #map0(%c-1_1)
    %2668 = arith.addi %2431, %2667 : index
    %2669 = arith.muli %2668, %c8 : index
    %2670 = arith.addi %2659, %c-1 : index
    %2671 = arith.addi %2669, %2670 : index
    %2672 = arith.remui %2671, %c64 : index
    %2673 = tensor.extract %arg0[%2672] : tensor<64x!fhe.secret<i16>>
    %2674 = fhe.add(%2666, %2673) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2675 = affine.apply #map1(%c-1_1)
    %2676 = arith.addi %2431, %2675 : index
    %2677 = arith.muli %2676, %c8 : index
    %2678 = arith.addi %2659, %c-1 : index
    %2679 = arith.addi %2677, %2678 : index
    %2680 = arith.remui %2679, %c64 : index
    %2681 = tensor.extract %arg0[%2680] : tensor<64x!fhe.secret<i16>>
    %2682 = fhe.add(%2674, %2681) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2683 = affine.apply #map0(%c-1)
    %2684 = arith.addi %2431, %c-1_1 : index
    %2685 = arith.muli %2684, %c8 : index
    %2686 = arith.addi %2659, %2683 : index
    %2687 = arith.addi %2685, %2686 : index
    %2688 = arith.remui %2687, %c64 : index
    %2689 = tensor.extract %arg0[%2688] : tensor<64x!fhe.secret<i16>>
    %2690 = fhe.add(%2682, %2689) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2691 = affine.apply #map0(%c-1_1)
    %2692 = arith.addi %2431, %2691 : index
    %2693 = arith.muli %2692, %c8 : index
    %2694 = arith.addi %2659, %2683 : index
    %2695 = arith.addi %2693, %2694 : index
    %2696 = arith.remui %2695, %c64 : index
    %2697 = tensor.extract %arg0[%2696] : tensor<64x!fhe.secret<i16>>
    %2698 = fhe.add(%2690, %2697) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2699 = affine.apply #map1(%c-1_1)
    %2700 = arith.addi %2431, %2699 : index
    %2701 = arith.muli %2700, %c8 : index
    %2702 = arith.addi %2659, %2683 : index
    %2703 = arith.addi %2701, %2702 : index
    %2704 = arith.remui %2703, %c64 : index
    %2705 = tensor.extract %arg0[%2704] : tensor<64x!fhe.secret<i16>>
    %2706 = fhe.add(%2698, %2705) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2707 = affine.apply #map1(%c-1)
    %2708 = arith.addi %2431, %c-1_1 : index
    %2709 = arith.muli %2708, %c8 : index
    %2710 = arith.addi %2659, %2707 : index
    %2711 = arith.addi %2709, %2710 : index
    %2712 = arith.remui %2711, %c64 : index
    %2713 = tensor.extract %arg0[%2712] : tensor<64x!fhe.secret<i16>>
    %2714 = fhe.add(%2706, %2713) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2715 = affine.apply #map0(%c-1_1)
    %2716 = arith.addi %2431, %2715 : index
    %2717 = arith.muli %2716, %c8 : index
    %2718 = arith.addi %2659, %2707 : index
    %2719 = arith.addi %2717, %2718 : index
    %2720 = arith.remui %2719, %c64 : index
    %2721 = tensor.extract %arg0[%2720] : tensor<64x!fhe.secret<i16>>
    %2722 = fhe.add(%2714, %2721) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2723 = affine.apply #map1(%c-1_1)
    %2724 = arith.addi %2431, %2723 : index
    %2725 = arith.muli %2724, %c8 : index
    %2726 = arith.addi %2659, %2707 : index
    %2727 = arith.addi %2725, %2726 : index
    %2728 = arith.remui %2727, %c64 : index
    %2729 = tensor.extract %arg0[%2728] : tensor<64x!fhe.secret<i16>>
    %2730 = fhe.add(%2722, %2729) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2731 = arith.muli %c8, %2431 : index
    %2732 = arith.addi %2731, %2659 : index
    %2733 = arith.remui %2732, %c64 : index
    %2734 = tensor.insert %2730 into %2658[%2733] : tensor<64x!fhe.secret<i16>>
    %2735 = affine.apply #map3(%c0_0)
    %c0_i16_37 = fhe.constant 0 : i16
    %2736 = arith.addi %2431, %c-1_1 : index
    %2737 = arith.muli %2736, %c8 : index
    %2738 = arith.addi %2735, %c-1 : index
    %2739 = arith.addi %2737, %2738 : index
    %2740 = arith.remui %2739, %c64 : index
    %2741 = tensor.extract %arg0[%2740] : tensor<64x!fhe.secret<i16>>
    %2742 = fhe.add(%c0_i16_37, %2741) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2743 = affine.apply #map0(%c-1_1)
    %2744 = arith.addi %2431, %2743 : index
    %2745 = arith.muli %2744, %c8 : index
    %2746 = arith.addi %2735, %c-1 : index
    %2747 = arith.addi %2745, %2746 : index
    %2748 = arith.remui %2747, %c64 : index
    %2749 = tensor.extract %arg0[%2748] : tensor<64x!fhe.secret<i16>>
    %2750 = fhe.add(%2742, %2749) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2751 = affine.apply #map1(%c-1_1)
    %2752 = arith.addi %2431, %2751 : index
    %2753 = arith.muli %2752, %c8 : index
    %2754 = arith.addi %2735, %c-1 : index
    %2755 = arith.addi %2753, %2754 : index
    %2756 = arith.remui %2755, %c64 : index
    %2757 = tensor.extract %arg0[%2756] : tensor<64x!fhe.secret<i16>>
    %2758 = fhe.add(%2750, %2757) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2759 = affine.apply #map0(%c-1)
    %2760 = arith.addi %2431, %c-1_1 : index
    %2761 = arith.muli %2760, %c8 : index
    %2762 = arith.addi %2735, %2759 : index
    %2763 = arith.addi %2761, %2762 : index
    %2764 = arith.remui %2763, %c64 : index
    %2765 = tensor.extract %arg0[%2764] : tensor<64x!fhe.secret<i16>>
    %2766 = fhe.add(%2758, %2765) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2767 = affine.apply #map0(%c-1_1)
    %2768 = arith.addi %2431, %2767 : index
    %2769 = arith.muli %2768, %c8 : index
    %2770 = arith.addi %2735, %2759 : index
    %2771 = arith.addi %2769, %2770 : index
    %2772 = arith.remui %2771, %c64 : index
    %2773 = tensor.extract %arg0[%2772] : tensor<64x!fhe.secret<i16>>
    %2774 = fhe.add(%2766, %2773) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2775 = affine.apply #map1(%c-1_1)
    %2776 = arith.addi %2431, %2775 : index
    %2777 = arith.muli %2776, %c8 : index
    %2778 = arith.addi %2735, %2759 : index
    %2779 = arith.addi %2777, %2778 : index
    %2780 = arith.remui %2779, %c64 : index
    %2781 = tensor.extract %arg0[%2780] : tensor<64x!fhe.secret<i16>>
    %2782 = fhe.add(%2774, %2781) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2783 = affine.apply #map1(%c-1)
    %2784 = arith.addi %2431, %c-1_1 : index
    %2785 = arith.muli %2784, %c8 : index
    %2786 = arith.addi %2735, %2783 : index
    %2787 = arith.addi %2785, %2786 : index
    %2788 = arith.remui %2787, %c64 : index
    %2789 = tensor.extract %arg0[%2788] : tensor<64x!fhe.secret<i16>>
    %2790 = fhe.add(%2782, %2789) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2791 = affine.apply #map0(%c-1_1)
    %2792 = arith.addi %2431, %2791 : index
    %2793 = arith.muli %2792, %c8 : index
    %2794 = arith.addi %2735, %2783 : index
    %2795 = arith.addi %2793, %2794 : index
    %2796 = arith.remui %2795, %c64 : index
    %2797 = tensor.extract %arg0[%2796] : tensor<64x!fhe.secret<i16>>
    %2798 = fhe.add(%2790, %2797) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2799 = affine.apply #map1(%c-1_1)
    %2800 = arith.addi %2431, %2799 : index
    %2801 = arith.muli %2800, %c8 : index
    %2802 = arith.addi %2735, %2783 : index
    %2803 = arith.addi %2801, %2802 : index
    %2804 = arith.remui %2803, %c64 : index
    %2805 = tensor.extract %arg0[%2804] : tensor<64x!fhe.secret<i16>>
    %2806 = fhe.add(%2798, %2805) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2807 = arith.muli %c8, %2431 : index
    %2808 = arith.addi %2807, %2735 : index
    %2809 = arith.remui %2808, %c64 : index
    %2810 = tensor.insert %2806 into %2734[%2809] : tensor<64x!fhe.secret<i16>>
    %2811 = affine.apply #map4(%c0_0)
    %c0_i16_38 = fhe.constant 0 : i16
    %2812 = arith.addi %2431, %c-1_1 : index
    %2813 = arith.muli %2812, %c8 : index
    %2814 = arith.addi %2811, %c-1 : index
    %2815 = arith.addi %2813, %2814 : index
    %2816 = arith.remui %2815, %c64 : index
    %2817 = tensor.extract %arg0[%2816] : tensor<64x!fhe.secret<i16>>
    %2818 = fhe.add(%c0_i16_38, %2817) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2819 = affine.apply #map0(%c-1_1)
    %2820 = arith.addi %2431, %2819 : index
    %2821 = arith.muli %2820, %c8 : index
    %2822 = arith.addi %2811, %c-1 : index
    %2823 = arith.addi %2821, %2822 : index
    %2824 = arith.remui %2823, %c64 : index
    %2825 = tensor.extract %arg0[%2824] : tensor<64x!fhe.secret<i16>>
    %2826 = fhe.add(%2818, %2825) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2827 = affine.apply #map1(%c-1_1)
    %2828 = arith.addi %2431, %2827 : index
    %2829 = arith.muli %2828, %c8 : index
    %2830 = arith.addi %2811, %c-1 : index
    %2831 = arith.addi %2829, %2830 : index
    %2832 = arith.remui %2831, %c64 : index
    %2833 = tensor.extract %arg0[%2832] : tensor<64x!fhe.secret<i16>>
    %2834 = fhe.add(%2826, %2833) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2835 = affine.apply #map0(%c-1)
    %2836 = arith.addi %2431, %c-1_1 : index
    %2837 = arith.muli %2836, %c8 : index
    %2838 = arith.addi %2811, %2835 : index
    %2839 = arith.addi %2837, %2838 : index
    %2840 = arith.remui %2839, %c64 : index
    %2841 = tensor.extract %arg0[%2840] : tensor<64x!fhe.secret<i16>>
    %2842 = fhe.add(%2834, %2841) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2843 = affine.apply #map0(%c-1_1)
    %2844 = arith.addi %2431, %2843 : index
    %2845 = arith.muli %2844, %c8 : index
    %2846 = arith.addi %2811, %2835 : index
    %2847 = arith.addi %2845, %2846 : index
    %2848 = arith.remui %2847, %c64 : index
    %2849 = tensor.extract %arg0[%2848] : tensor<64x!fhe.secret<i16>>
    %2850 = fhe.add(%2842, %2849) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2851 = affine.apply #map1(%c-1_1)
    %2852 = arith.addi %2431, %2851 : index
    %2853 = arith.muli %2852, %c8 : index
    %2854 = arith.addi %2811, %2835 : index
    %2855 = arith.addi %2853, %2854 : index
    %2856 = arith.remui %2855, %c64 : index
    %2857 = tensor.extract %arg0[%2856] : tensor<64x!fhe.secret<i16>>
    %2858 = fhe.add(%2850, %2857) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2859 = affine.apply #map1(%c-1)
    %2860 = arith.addi %2431, %c-1_1 : index
    %2861 = arith.muli %2860, %c8 : index
    %2862 = arith.addi %2811, %2859 : index
    %2863 = arith.addi %2861, %2862 : index
    %2864 = arith.remui %2863, %c64 : index
    %2865 = tensor.extract %arg0[%2864] : tensor<64x!fhe.secret<i16>>
    %2866 = fhe.add(%2858, %2865) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2867 = affine.apply #map0(%c-1_1)
    %2868 = arith.addi %2431, %2867 : index
    %2869 = arith.muli %2868, %c8 : index
    %2870 = arith.addi %2811, %2859 : index
    %2871 = arith.addi %2869, %2870 : index
    %2872 = arith.remui %2871, %c64 : index
    %2873 = tensor.extract %arg0[%2872] : tensor<64x!fhe.secret<i16>>
    %2874 = fhe.add(%2866, %2873) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2875 = affine.apply #map1(%c-1_1)
    %2876 = arith.addi %2431, %2875 : index
    %2877 = arith.muli %2876, %c8 : index
    %2878 = arith.addi %2811, %2859 : index
    %2879 = arith.addi %2877, %2878 : index
    %2880 = arith.remui %2879, %c64 : index
    %2881 = tensor.extract %arg0[%2880] : tensor<64x!fhe.secret<i16>>
    %2882 = fhe.add(%2874, %2881) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2883 = arith.muli %c8, %2431 : index
    %2884 = arith.addi %2883, %2811 : index
    %2885 = arith.remui %2884, %c64 : index
    %2886 = tensor.insert %2882 into %2810[%2885] : tensor<64x!fhe.secret<i16>>
    %2887 = affine.apply #map5(%c0_0)
    %c0_i16_39 = fhe.constant 0 : i16
    %2888 = arith.addi %2431, %c-1_1 : index
    %2889 = arith.muli %2888, %c8 : index
    %2890 = arith.addi %2887, %c-1 : index
    %2891 = arith.addi %2889, %2890 : index
    %2892 = arith.remui %2891, %c64 : index
    %2893 = tensor.extract %arg0[%2892] : tensor<64x!fhe.secret<i16>>
    %2894 = fhe.add(%c0_i16_39, %2893) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2895 = affine.apply #map0(%c-1_1)
    %2896 = arith.addi %2431, %2895 : index
    %2897 = arith.muli %2896, %c8 : index
    %2898 = arith.addi %2887, %c-1 : index
    %2899 = arith.addi %2897, %2898 : index
    %2900 = arith.remui %2899, %c64 : index
    %2901 = tensor.extract %arg0[%2900] : tensor<64x!fhe.secret<i16>>
    %2902 = fhe.add(%2894, %2901) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2903 = affine.apply #map1(%c-1_1)
    %2904 = arith.addi %2431, %2903 : index
    %2905 = arith.muli %2904, %c8 : index
    %2906 = arith.addi %2887, %c-1 : index
    %2907 = arith.addi %2905, %2906 : index
    %2908 = arith.remui %2907, %c64 : index
    %2909 = tensor.extract %arg0[%2908] : tensor<64x!fhe.secret<i16>>
    %2910 = fhe.add(%2902, %2909) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2911 = affine.apply #map0(%c-1)
    %2912 = arith.addi %2431, %c-1_1 : index
    %2913 = arith.muli %2912, %c8 : index
    %2914 = arith.addi %2887, %2911 : index
    %2915 = arith.addi %2913, %2914 : index
    %2916 = arith.remui %2915, %c64 : index
    %2917 = tensor.extract %arg0[%2916] : tensor<64x!fhe.secret<i16>>
    %2918 = fhe.add(%2910, %2917) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2919 = affine.apply #map0(%c-1_1)
    %2920 = arith.addi %2431, %2919 : index
    %2921 = arith.muli %2920, %c8 : index
    %2922 = arith.addi %2887, %2911 : index
    %2923 = arith.addi %2921, %2922 : index
    %2924 = arith.remui %2923, %c64 : index
    %2925 = tensor.extract %arg0[%2924] : tensor<64x!fhe.secret<i16>>
    %2926 = fhe.add(%2918, %2925) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2927 = affine.apply #map1(%c-1_1)
    %2928 = arith.addi %2431, %2927 : index
    %2929 = arith.muli %2928, %c8 : index
    %2930 = arith.addi %2887, %2911 : index
    %2931 = arith.addi %2929, %2930 : index
    %2932 = arith.remui %2931, %c64 : index
    %2933 = tensor.extract %arg0[%2932] : tensor<64x!fhe.secret<i16>>
    %2934 = fhe.add(%2926, %2933) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2935 = affine.apply #map1(%c-1)
    %2936 = arith.addi %2431, %c-1_1 : index
    %2937 = arith.muli %2936, %c8 : index
    %2938 = arith.addi %2887, %2935 : index
    %2939 = arith.addi %2937, %2938 : index
    %2940 = arith.remui %2939, %c64 : index
    %2941 = tensor.extract %arg0[%2940] : tensor<64x!fhe.secret<i16>>
    %2942 = fhe.add(%2934, %2941) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2943 = affine.apply #map0(%c-1_1)
    %2944 = arith.addi %2431, %2943 : index
    %2945 = arith.muli %2944, %c8 : index
    %2946 = arith.addi %2887, %2935 : index
    %2947 = arith.addi %2945, %2946 : index
    %2948 = arith.remui %2947, %c64 : index
    %2949 = tensor.extract %arg0[%2948] : tensor<64x!fhe.secret<i16>>
    %2950 = fhe.add(%2942, %2949) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2951 = affine.apply #map1(%c-1_1)
    %2952 = arith.addi %2431, %2951 : index
    %2953 = arith.muli %2952, %c8 : index
    %2954 = arith.addi %2887, %2935 : index
    %2955 = arith.addi %2953, %2954 : index
    %2956 = arith.remui %2955, %c64 : index
    %2957 = tensor.extract %arg0[%2956] : tensor<64x!fhe.secret<i16>>
    %2958 = fhe.add(%2950, %2957) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2959 = arith.muli %c8, %2431 : index
    %2960 = arith.addi %2959, %2887 : index
    %2961 = arith.remui %2960, %c64 : index
    %2962 = tensor.insert %2958 into %2886[%2961] : tensor<64x!fhe.secret<i16>>
    %2963 = affine.apply #map6(%c0_0)
    %c0_i16_40 = fhe.constant 0 : i16
    %2964 = arith.addi %2431, %c-1_1 : index
    %2965 = arith.muli %2964, %c8 : index
    %2966 = arith.addi %2963, %c-1 : index
    %2967 = arith.addi %2965, %2966 : index
    %2968 = arith.remui %2967, %c64 : index
    %2969 = tensor.extract %arg0[%2968] : tensor<64x!fhe.secret<i16>>
    %2970 = fhe.add(%c0_i16_40, %2969) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2971 = affine.apply #map0(%c-1_1)
    %2972 = arith.addi %2431, %2971 : index
    %2973 = arith.muli %2972, %c8 : index
    %2974 = arith.addi %2963, %c-1 : index
    %2975 = arith.addi %2973, %2974 : index
    %2976 = arith.remui %2975, %c64 : index
    %2977 = tensor.extract %arg0[%2976] : tensor<64x!fhe.secret<i16>>
    %2978 = fhe.add(%2970, %2977) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2979 = affine.apply #map1(%c-1_1)
    %2980 = arith.addi %2431, %2979 : index
    %2981 = arith.muli %2980, %c8 : index
    %2982 = arith.addi %2963, %c-1 : index
    %2983 = arith.addi %2981, %2982 : index
    %2984 = arith.remui %2983, %c64 : index
    %2985 = tensor.extract %arg0[%2984] : tensor<64x!fhe.secret<i16>>
    %2986 = fhe.add(%2978, %2985) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2987 = affine.apply #map0(%c-1)
    %2988 = arith.addi %2431, %c-1_1 : index
    %2989 = arith.muli %2988, %c8 : index
    %2990 = arith.addi %2963, %2987 : index
    %2991 = arith.addi %2989, %2990 : index
    %2992 = arith.remui %2991, %c64 : index
    %2993 = tensor.extract %arg0[%2992] : tensor<64x!fhe.secret<i16>>
    %2994 = fhe.add(%2986, %2993) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %2995 = affine.apply #map0(%c-1_1)
    %2996 = arith.addi %2431, %2995 : index
    %2997 = arith.muli %2996, %c8 : index
    %2998 = arith.addi %2963, %2987 : index
    %2999 = arith.addi %2997, %2998 : index
    %3000 = arith.remui %2999, %c64 : index
    %3001 = tensor.extract %arg0[%3000] : tensor<64x!fhe.secret<i16>>
    %3002 = fhe.add(%2994, %3001) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3003 = affine.apply #map1(%c-1_1)
    %3004 = arith.addi %2431, %3003 : index
    %3005 = arith.muli %3004, %c8 : index
    %3006 = arith.addi %2963, %2987 : index
    %3007 = arith.addi %3005, %3006 : index
    %3008 = arith.remui %3007, %c64 : index
    %3009 = tensor.extract %arg0[%3008] : tensor<64x!fhe.secret<i16>>
    %3010 = fhe.add(%3002, %3009) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3011 = affine.apply #map1(%c-1)
    %3012 = arith.addi %2431, %c-1_1 : index
    %3013 = arith.muli %3012, %c8 : index
    %3014 = arith.addi %2963, %3011 : index
    %3015 = arith.addi %3013, %3014 : index
    %3016 = arith.remui %3015, %c64 : index
    %3017 = tensor.extract %arg0[%3016] : tensor<64x!fhe.secret<i16>>
    %3018 = fhe.add(%3010, %3017) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3019 = affine.apply #map0(%c-1_1)
    %3020 = arith.addi %2431, %3019 : index
    %3021 = arith.muli %3020, %c8 : index
    %3022 = arith.addi %2963, %3011 : index
    %3023 = arith.addi %3021, %3022 : index
    %3024 = arith.remui %3023, %c64 : index
    %3025 = tensor.extract %arg0[%3024] : tensor<64x!fhe.secret<i16>>
    %3026 = fhe.add(%3018, %3025) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3027 = affine.apply #map1(%c-1_1)
    %3028 = arith.addi %2431, %3027 : index
    %3029 = arith.muli %3028, %c8 : index
    %3030 = arith.addi %2963, %3011 : index
    %3031 = arith.addi %3029, %3030 : index
    %3032 = arith.remui %3031, %c64 : index
    %3033 = tensor.extract %arg0[%3032] : tensor<64x!fhe.secret<i16>>
    %3034 = fhe.add(%3026, %3033) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3035 = arith.muli %c8, %2431 : index
    %3036 = arith.addi %3035, %2963 : index
    %3037 = arith.remui %3036, %c64 : index
    %3038 = tensor.insert %3034 into %2962[%3037] : tensor<64x!fhe.secret<i16>>
    %3039 = affine.apply #map4(%c0)
    %c0_i16_41 = fhe.constant 0 : i16
    %3040 = arith.addi %3039, %c-1_1 : index
    %3041 = arith.muli %3040, %c8 : index
    %3042 = arith.addi %c0_0, %c-1 : index
    %3043 = arith.addi %3041, %3042 : index
    %3044 = arith.remui %3043, %c64 : index
    %3045 = tensor.extract %arg0[%3044] : tensor<64x!fhe.secret<i16>>
    %3046 = fhe.add(%c0_i16_41, %3045) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3047 = affine.apply #map0(%c-1_1)
    %3048 = arith.addi %3039, %3047 : index
    %3049 = arith.muli %3048, %c8 : index
    %3050 = arith.addi %c0_0, %c-1 : index
    %3051 = arith.addi %3049, %3050 : index
    %3052 = arith.remui %3051, %c64 : index
    %3053 = tensor.extract %arg0[%3052] : tensor<64x!fhe.secret<i16>>
    %3054 = fhe.add(%3046, %3053) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3055 = affine.apply #map1(%c-1_1)
    %3056 = arith.addi %3039, %3055 : index
    %3057 = arith.muli %3056, %c8 : index
    %3058 = arith.addi %c0_0, %c-1 : index
    %3059 = arith.addi %3057, %3058 : index
    %3060 = arith.remui %3059, %c64 : index
    %3061 = tensor.extract %arg0[%3060] : tensor<64x!fhe.secret<i16>>
    %3062 = fhe.add(%3054, %3061) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3063 = affine.apply #map0(%c-1)
    %3064 = arith.addi %3039, %c-1_1 : index
    %3065 = arith.muli %3064, %c8 : index
    %3066 = arith.addi %c0_0, %3063 : index
    %3067 = arith.addi %3065, %3066 : index
    %3068 = arith.remui %3067, %c64 : index
    %3069 = tensor.extract %arg0[%3068] : tensor<64x!fhe.secret<i16>>
    %3070 = fhe.add(%3062, %3069) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3071 = affine.apply #map0(%c-1_1)
    %3072 = arith.addi %3039, %3071 : index
    %3073 = arith.muli %3072, %c8 : index
    %3074 = arith.addi %c0_0, %3063 : index
    %3075 = arith.addi %3073, %3074 : index
    %3076 = arith.remui %3075, %c64 : index
    %3077 = tensor.extract %arg0[%3076] : tensor<64x!fhe.secret<i16>>
    %3078 = fhe.add(%3070, %3077) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3079 = affine.apply #map1(%c-1_1)
    %3080 = arith.addi %3039, %3079 : index
    %3081 = arith.muli %3080, %c8 : index
    %3082 = arith.addi %c0_0, %3063 : index
    %3083 = arith.addi %3081, %3082 : index
    %3084 = arith.remui %3083, %c64 : index
    %3085 = tensor.extract %arg0[%3084] : tensor<64x!fhe.secret<i16>>
    %3086 = fhe.add(%3078, %3085) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3087 = affine.apply #map1(%c-1)
    %3088 = arith.addi %3039, %c-1_1 : index
    %3089 = arith.muli %3088, %c8 : index
    %3090 = arith.addi %c0_0, %3087 : index
    %3091 = arith.addi %3089, %3090 : index
    %3092 = arith.remui %3091, %c64 : index
    %3093 = tensor.extract %arg0[%3092] : tensor<64x!fhe.secret<i16>>
    %3094 = fhe.add(%3086, %3093) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3095 = affine.apply #map0(%c-1_1)
    %3096 = arith.addi %3039, %3095 : index
    %3097 = arith.muli %3096, %c8 : index
    %3098 = arith.addi %c0_0, %3087 : index
    %3099 = arith.addi %3097, %3098 : index
    %3100 = arith.remui %3099, %c64 : index
    %3101 = tensor.extract %arg0[%3100] : tensor<64x!fhe.secret<i16>>
    %3102 = fhe.add(%3094, %3101) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3103 = affine.apply #map1(%c-1_1)
    %3104 = arith.addi %3039, %3103 : index
    %3105 = arith.muli %3104, %c8 : index
    %3106 = arith.addi %c0_0, %3087 : index
    %3107 = arith.addi %3105, %3106 : index
    %3108 = arith.remui %3107, %c64 : index
    %3109 = tensor.extract %arg0[%3108] : tensor<64x!fhe.secret<i16>>
    %3110 = fhe.add(%3102, %3109) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3111 = arith.muli %c8, %3039 : index
    %3112 = arith.addi %3111, %c0_0 : index
    %3113 = arith.remui %3112, %c64 : index
    %3114 = tensor.insert %3110 into %3038[%3113] : tensor<64x!fhe.secret<i16>>
    %3115 = affine.apply #map0(%c0_0)
    %c0_i16_42 = fhe.constant 0 : i16
    %3116 = arith.addi %3039, %c-1_1 : index
    %3117 = arith.muli %3116, %c8 : index
    %3118 = arith.addi %3115, %c-1 : index
    %3119 = arith.addi %3117, %3118 : index
    %3120 = arith.remui %3119, %c64 : index
    %3121 = tensor.extract %arg0[%3120] : tensor<64x!fhe.secret<i16>>
    %3122 = fhe.add(%c0_i16_42, %3121) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3123 = affine.apply #map0(%c-1_1)
    %3124 = arith.addi %3039, %3123 : index
    %3125 = arith.muli %3124, %c8 : index
    %3126 = arith.addi %3115, %c-1 : index
    %3127 = arith.addi %3125, %3126 : index
    %3128 = arith.remui %3127, %c64 : index
    %3129 = tensor.extract %arg0[%3128] : tensor<64x!fhe.secret<i16>>
    %3130 = fhe.add(%3122, %3129) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3131 = affine.apply #map1(%c-1_1)
    %3132 = arith.addi %3039, %3131 : index
    %3133 = arith.muli %3132, %c8 : index
    %3134 = arith.addi %3115, %c-1 : index
    %3135 = arith.addi %3133, %3134 : index
    %3136 = arith.remui %3135, %c64 : index
    %3137 = tensor.extract %arg0[%3136] : tensor<64x!fhe.secret<i16>>
    %3138 = fhe.add(%3130, %3137) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3139 = affine.apply #map0(%c-1)
    %3140 = arith.addi %3039, %c-1_1 : index
    %3141 = arith.muli %3140, %c8 : index
    %3142 = arith.addi %3115, %3139 : index
    %3143 = arith.addi %3141, %3142 : index
    %3144 = arith.remui %3143, %c64 : index
    %3145 = tensor.extract %arg0[%3144] : tensor<64x!fhe.secret<i16>>
    %3146 = fhe.add(%3138, %3145) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3147 = affine.apply #map0(%c-1_1)
    %3148 = arith.addi %3039, %3147 : index
    %3149 = arith.muli %3148, %c8 : index
    %3150 = arith.addi %3115, %3139 : index
    %3151 = arith.addi %3149, %3150 : index
    %3152 = arith.remui %3151, %c64 : index
    %3153 = tensor.extract %arg0[%3152] : tensor<64x!fhe.secret<i16>>
    %3154 = fhe.add(%3146, %3153) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3155 = affine.apply #map1(%c-1_1)
    %3156 = arith.addi %3039, %3155 : index
    %3157 = arith.muli %3156, %c8 : index
    %3158 = arith.addi %3115, %3139 : index
    %3159 = arith.addi %3157, %3158 : index
    %3160 = arith.remui %3159, %c64 : index
    %3161 = tensor.extract %arg0[%3160] : tensor<64x!fhe.secret<i16>>
    %3162 = fhe.add(%3154, %3161) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3163 = affine.apply #map1(%c-1)
    %3164 = arith.addi %3039, %c-1_1 : index
    %3165 = arith.muli %3164, %c8 : index
    %3166 = arith.addi %3115, %3163 : index
    %3167 = arith.addi %3165, %3166 : index
    %3168 = arith.remui %3167, %c64 : index
    %3169 = tensor.extract %arg0[%3168] : tensor<64x!fhe.secret<i16>>
    %3170 = fhe.add(%3162, %3169) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3171 = affine.apply #map0(%c-1_1)
    %3172 = arith.addi %3039, %3171 : index
    %3173 = arith.muli %3172, %c8 : index
    %3174 = arith.addi %3115, %3163 : index
    %3175 = arith.addi %3173, %3174 : index
    %3176 = arith.remui %3175, %c64 : index
    %3177 = tensor.extract %arg0[%3176] : tensor<64x!fhe.secret<i16>>
    %3178 = fhe.add(%3170, %3177) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3179 = affine.apply #map1(%c-1_1)
    %3180 = arith.addi %3039, %3179 : index
    %3181 = arith.muli %3180, %c8 : index
    %3182 = arith.addi %3115, %3163 : index
    %3183 = arith.addi %3181, %3182 : index
    %3184 = arith.remui %3183, %c64 : index
    %3185 = tensor.extract %arg0[%3184] : tensor<64x!fhe.secret<i16>>
    %3186 = fhe.add(%3178, %3185) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3187 = arith.muli %c8, %3039 : index
    %3188 = arith.addi %3187, %3115 : index
    %3189 = arith.remui %3188, %c64 : index
    %3190 = tensor.insert %3186 into %3114[%3189] : tensor<64x!fhe.secret<i16>>
    %3191 = affine.apply #map1(%c0_0)
    %c0_i16_43 = fhe.constant 0 : i16
    %3192 = arith.addi %3039, %c-1_1 : index
    %3193 = arith.muli %3192, %c8 : index
    %3194 = arith.addi %3191, %c-1 : index
    %3195 = arith.addi %3193, %3194 : index
    %3196 = arith.remui %3195, %c64 : index
    %3197 = tensor.extract %arg0[%3196] : tensor<64x!fhe.secret<i16>>
    %3198 = fhe.add(%c0_i16_43, %3197) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3199 = affine.apply #map0(%c-1_1)
    %3200 = arith.addi %3039, %3199 : index
    %3201 = arith.muli %3200, %c8 : index
    %3202 = arith.addi %3191, %c-1 : index
    %3203 = arith.addi %3201, %3202 : index
    %3204 = arith.remui %3203, %c64 : index
    %3205 = tensor.extract %arg0[%3204] : tensor<64x!fhe.secret<i16>>
    %3206 = fhe.add(%3198, %3205) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3207 = affine.apply #map1(%c-1_1)
    %3208 = arith.addi %3039, %3207 : index
    %3209 = arith.muli %3208, %c8 : index
    %3210 = arith.addi %3191, %c-1 : index
    %3211 = arith.addi %3209, %3210 : index
    %3212 = arith.remui %3211, %c64 : index
    %3213 = tensor.extract %arg0[%3212] : tensor<64x!fhe.secret<i16>>
    %3214 = fhe.add(%3206, %3213) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3215 = affine.apply #map0(%c-1)
    %3216 = arith.addi %3039, %c-1_1 : index
    %3217 = arith.muli %3216, %c8 : index
    %3218 = arith.addi %3191, %3215 : index
    %3219 = arith.addi %3217, %3218 : index
    %3220 = arith.remui %3219, %c64 : index
    %3221 = tensor.extract %arg0[%3220] : tensor<64x!fhe.secret<i16>>
    %3222 = fhe.add(%3214, %3221) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3223 = affine.apply #map0(%c-1_1)
    %3224 = arith.addi %3039, %3223 : index
    %3225 = arith.muli %3224, %c8 : index
    %3226 = arith.addi %3191, %3215 : index
    %3227 = arith.addi %3225, %3226 : index
    %3228 = arith.remui %3227, %c64 : index
    %3229 = tensor.extract %arg0[%3228] : tensor<64x!fhe.secret<i16>>
    %3230 = fhe.add(%3222, %3229) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3231 = affine.apply #map1(%c-1_1)
    %3232 = arith.addi %3039, %3231 : index
    %3233 = arith.muli %3232, %c8 : index
    %3234 = arith.addi %3191, %3215 : index
    %3235 = arith.addi %3233, %3234 : index
    %3236 = arith.remui %3235, %c64 : index
    %3237 = tensor.extract %arg0[%3236] : tensor<64x!fhe.secret<i16>>
    %3238 = fhe.add(%3230, %3237) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3239 = affine.apply #map1(%c-1)
    %3240 = arith.addi %3039, %c-1_1 : index
    %3241 = arith.muli %3240, %c8 : index
    %3242 = arith.addi %3191, %3239 : index
    %3243 = arith.addi %3241, %3242 : index
    %3244 = arith.remui %3243, %c64 : index
    %3245 = tensor.extract %arg0[%3244] : tensor<64x!fhe.secret<i16>>
    %3246 = fhe.add(%3238, %3245) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3247 = affine.apply #map0(%c-1_1)
    %3248 = arith.addi %3039, %3247 : index
    %3249 = arith.muli %3248, %c8 : index
    %3250 = arith.addi %3191, %3239 : index
    %3251 = arith.addi %3249, %3250 : index
    %3252 = arith.remui %3251, %c64 : index
    %3253 = tensor.extract %arg0[%3252] : tensor<64x!fhe.secret<i16>>
    %3254 = fhe.add(%3246, %3253) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3255 = affine.apply #map1(%c-1_1)
    %3256 = arith.addi %3039, %3255 : index
    %3257 = arith.muli %3256, %c8 : index
    %3258 = arith.addi %3191, %3239 : index
    %3259 = arith.addi %3257, %3258 : index
    %3260 = arith.remui %3259, %c64 : index
    %3261 = tensor.extract %arg0[%3260] : tensor<64x!fhe.secret<i16>>
    %3262 = fhe.add(%3254, %3261) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3263 = arith.muli %c8, %3039 : index
    %3264 = arith.addi %3263, %3191 : index
    %3265 = arith.remui %3264, %c64 : index
    %3266 = tensor.insert %3262 into %3190[%3265] : tensor<64x!fhe.secret<i16>>
    %3267 = affine.apply #map2(%c0_0)
    %c0_i16_44 = fhe.constant 0 : i16
    %3268 = arith.addi %3039, %c-1_1 : index
    %3269 = arith.muli %3268, %c8 : index
    %3270 = arith.addi %3267, %c-1 : index
    %3271 = arith.addi %3269, %3270 : index
    %3272 = arith.remui %3271, %c64 : index
    %3273 = tensor.extract %arg0[%3272] : tensor<64x!fhe.secret<i16>>
    %3274 = fhe.add(%c0_i16_44, %3273) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3275 = affine.apply #map0(%c-1_1)
    %3276 = arith.addi %3039, %3275 : index
    %3277 = arith.muli %3276, %c8 : index
    %3278 = arith.addi %3267, %c-1 : index
    %3279 = arith.addi %3277, %3278 : index
    %3280 = arith.remui %3279, %c64 : index
    %3281 = tensor.extract %arg0[%3280] : tensor<64x!fhe.secret<i16>>
    %3282 = fhe.add(%3274, %3281) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3283 = affine.apply #map1(%c-1_1)
    %3284 = arith.addi %3039, %3283 : index
    %3285 = arith.muli %3284, %c8 : index
    %3286 = arith.addi %3267, %c-1 : index
    %3287 = arith.addi %3285, %3286 : index
    %3288 = arith.remui %3287, %c64 : index
    %3289 = tensor.extract %arg0[%3288] : tensor<64x!fhe.secret<i16>>
    %3290 = fhe.add(%3282, %3289) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3291 = affine.apply #map0(%c-1)
    %3292 = arith.addi %3039, %c-1_1 : index
    %3293 = arith.muli %3292, %c8 : index
    %3294 = arith.addi %3267, %3291 : index
    %3295 = arith.addi %3293, %3294 : index
    %3296 = arith.remui %3295, %c64 : index
    %3297 = tensor.extract %arg0[%3296] : tensor<64x!fhe.secret<i16>>
    %3298 = fhe.add(%3290, %3297) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3299 = affine.apply #map0(%c-1_1)
    %3300 = arith.addi %3039, %3299 : index
    %3301 = arith.muli %3300, %c8 : index
    %3302 = arith.addi %3267, %3291 : index
    %3303 = arith.addi %3301, %3302 : index
    %3304 = arith.remui %3303, %c64 : index
    %3305 = tensor.extract %arg0[%3304] : tensor<64x!fhe.secret<i16>>
    %3306 = fhe.add(%3298, %3305) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3307 = affine.apply #map1(%c-1_1)
    %3308 = arith.addi %3039, %3307 : index
    %3309 = arith.muli %3308, %c8 : index
    %3310 = arith.addi %3267, %3291 : index
    %3311 = arith.addi %3309, %3310 : index
    %3312 = arith.remui %3311, %c64 : index
    %3313 = tensor.extract %arg0[%3312] : tensor<64x!fhe.secret<i16>>
    %3314 = fhe.add(%3306, %3313) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3315 = affine.apply #map1(%c-1)
    %3316 = arith.addi %3039, %c-1_1 : index
    %3317 = arith.muli %3316, %c8 : index
    %3318 = arith.addi %3267, %3315 : index
    %3319 = arith.addi %3317, %3318 : index
    %3320 = arith.remui %3319, %c64 : index
    %3321 = tensor.extract %arg0[%3320] : tensor<64x!fhe.secret<i16>>
    %3322 = fhe.add(%3314, %3321) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3323 = affine.apply #map0(%c-1_1)
    %3324 = arith.addi %3039, %3323 : index
    %3325 = arith.muli %3324, %c8 : index
    %3326 = arith.addi %3267, %3315 : index
    %3327 = arith.addi %3325, %3326 : index
    %3328 = arith.remui %3327, %c64 : index
    %3329 = tensor.extract %arg0[%3328] : tensor<64x!fhe.secret<i16>>
    %3330 = fhe.add(%3322, %3329) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3331 = affine.apply #map1(%c-1_1)
    %3332 = arith.addi %3039, %3331 : index
    %3333 = arith.muli %3332, %c8 : index
    %3334 = arith.addi %3267, %3315 : index
    %3335 = arith.addi %3333, %3334 : index
    %3336 = arith.remui %3335, %c64 : index
    %3337 = tensor.extract %arg0[%3336] : tensor<64x!fhe.secret<i16>>
    %3338 = fhe.add(%3330, %3337) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3339 = arith.muli %c8, %3039 : index
    %3340 = arith.addi %3339, %3267 : index
    %3341 = arith.remui %3340, %c64 : index
    %3342 = tensor.insert %3338 into %3266[%3341] : tensor<64x!fhe.secret<i16>>
    %3343 = affine.apply #map3(%c0_0)
    %c0_i16_45 = fhe.constant 0 : i16
    %3344 = arith.addi %3039, %c-1_1 : index
    %3345 = arith.muli %3344, %c8 : index
    %3346 = arith.addi %3343, %c-1 : index
    %3347 = arith.addi %3345, %3346 : index
    %3348 = arith.remui %3347, %c64 : index
    %3349 = tensor.extract %arg0[%3348] : tensor<64x!fhe.secret<i16>>
    %3350 = fhe.add(%c0_i16_45, %3349) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3351 = affine.apply #map0(%c-1_1)
    %3352 = arith.addi %3039, %3351 : index
    %3353 = arith.muli %3352, %c8 : index
    %3354 = arith.addi %3343, %c-1 : index
    %3355 = arith.addi %3353, %3354 : index
    %3356 = arith.remui %3355, %c64 : index
    %3357 = tensor.extract %arg0[%3356] : tensor<64x!fhe.secret<i16>>
    %3358 = fhe.add(%3350, %3357) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3359 = affine.apply #map1(%c-1_1)
    %3360 = arith.addi %3039, %3359 : index
    %3361 = arith.muli %3360, %c8 : index
    %3362 = arith.addi %3343, %c-1 : index
    %3363 = arith.addi %3361, %3362 : index
    %3364 = arith.remui %3363, %c64 : index
    %3365 = tensor.extract %arg0[%3364] : tensor<64x!fhe.secret<i16>>
    %3366 = fhe.add(%3358, %3365) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3367 = affine.apply #map0(%c-1)
    %3368 = arith.addi %3039, %c-1_1 : index
    %3369 = arith.muli %3368, %c8 : index
    %3370 = arith.addi %3343, %3367 : index
    %3371 = arith.addi %3369, %3370 : index
    %3372 = arith.remui %3371, %c64 : index
    %3373 = tensor.extract %arg0[%3372] : tensor<64x!fhe.secret<i16>>
    %3374 = fhe.add(%3366, %3373) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3375 = affine.apply #map0(%c-1_1)
    %3376 = arith.addi %3039, %3375 : index
    %3377 = arith.muli %3376, %c8 : index
    %3378 = arith.addi %3343, %3367 : index
    %3379 = arith.addi %3377, %3378 : index
    %3380 = arith.remui %3379, %c64 : index
    %3381 = tensor.extract %arg0[%3380] : tensor<64x!fhe.secret<i16>>
    %3382 = fhe.add(%3374, %3381) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3383 = affine.apply #map1(%c-1_1)
    %3384 = arith.addi %3039, %3383 : index
    %3385 = arith.muli %3384, %c8 : index
    %3386 = arith.addi %3343, %3367 : index
    %3387 = arith.addi %3385, %3386 : index
    %3388 = arith.remui %3387, %c64 : index
    %3389 = tensor.extract %arg0[%3388] : tensor<64x!fhe.secret<i16>>
    %3390 = fhe.add(%3382, %3389) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3391 = affine.apply #map1(%c-1)
    %3392 = arith.addi %3039, %c-1_1 : index
    %3393 = arith.muli %3392, %c8 : index
    %3394 = arith.addi %3343, %3391 : index
    %3395 = arith.addi %3393, %3394 : index
    %3396 = arith.remui %3395, %c64 : index
    %3397 = tensor.extract %arg0[%3396] : tensor<64x!fhe.secret<i16>>
    %3398 = fhe.add(%3390, %3397) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3399 = affine.apply #map0(%c-1_1)
    %3400 = arith.addi %3039, %3399 : index
    %3401 = arith.muli %3400, %c8 : index
    %3402 = arith.addi %3343, %3391 : index
    %3403 = arith.addi %3401, %3402 : index
    %3404 = arith.remui %3403, %c64 : index
    %3405 = tensor.extract %arg0[%3404] : tensor<64x!fhe.secret<i16>>
    %3406 = fhe.add(%3398, %3405) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3407 = affine.apply #map1(%c-1_1)
    %3408 = arith.addi %3039, %3407 : index
    %3409 = arith.muli %3408, %c8 : index
    %3410 = arith.addi %3343, %3391 : index
    %3411 = arith.addi %3409, %3410 : index
    %3412 = arith.remui %3411, %c64 : index
    %3413 = tensor.extract %arg0[%3412] : tensor<64x!fhe.secret<i16>>
    %3414 = fhe.add(%3406, %3413) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3415 = arith.muli %c8, %3039 : index
    %3416 = arith.addi %3415, %3343 : index
    %3417 = arith.remui %3416, %c64 : index
    %3418 = tensor.insert %3414 into %3342[%3417] : tensor<64x!fhe.secret<i16>>
    %3419 = affine.apply #map4(%c0_0)
    %c0_i16_46 = fhe.constant 0 : i16
    %3420 = arith.addi %3039, %c-1_1 : index
    %3421 = arith.muli %3420, %c8 : index
    %3422 = arith.addi %3419, %c-1 : index
    %3423 = arith.addi %3421, %3422 : index
    %3424 = arith.remui %3423, %c64 : index
    %3425 = tensor.extract %arg0[%3424] : tensor<64x!fhe.secret<i16>>
    %3426 = fhe.add(%c0_i16_46, %3425) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3427 = affine.apply #map0(%c-1_1)
    %3428 = arith.addi %3039, %3427 : index
    %3429 = arith.muli %3428, %c8 : index
    %3430 = arith.addi %3419, %c-1 : index
    %3431 = arith.addi %3429, %3430 : index
    %3432 = arith.remui %3431, %c64 : index
    %3433 = tensor.extract %arg0[%3432] : tensor<64x!fhe.secret<i16>>
    %3434 = fhe.add(%3426, %3433) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3435 = affine.apply #map1(%c-1_1)
    %3436 = arith.addi %3039, %3435 : index
    %3437 = arith.muli %3436, %c8 : index
    %3438 = arith.addi %3419, %c-1 : index
    %3439 = arith.addi %3437, %3438 : index
    %3440 = arith.remui %3439, %c64 : index
    %3441 = tensor.extract %arg0[%3440] : tensor<64x!fhe.secret<i16>>
    %3442 = fhe.add(%3434, %3441) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3443 = affine.apply #map0(%c-1)
    %3444 = arith.addi %3039, %c-1_1 : index
    %3445 = arith.muli %3444, %c8 : index
    %3446 = arith.addi %3419, %3443 : index
    %3447 = arith.addi %3445, %3446 : index
    %3448 = arith.remui %3447, %c64 : index
    %3449 = tensor.extract %arg0[%3448] : tensor<64x!fhe.secret<i16>>
    %3450 = fhe.add(%3442, %3449) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3451 = affine.apply #map0(%c-1_1)
    %3452 = arith.addi %3039, %3451 : index
    %3453 = arith.muli %3452, %c8 : index
    %3454 = arith.addi %3419, %3443 : index
    %3455 = arith.addi %3453, %3454 : index
    %3456 = arith.remui %3455, %c64 : index
    %3457 = tensor.extract %arg0[%3456] : tensor<64x!fhe.secret<i16>>
    %3458 = fhe.add(%3450, %3457) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3459 = affine.apply #map1(%c-1_1)
    %3460 = arith.addi %3039, %3459 : index
    %3461 = arith.muli %3460, %c8 : index
    %3462 = arith.addi %3419, %3443 : index
    %3463 = arith.addi %3461, %3462 : index
    %3464 = arith.remui %3463, %c64 : index
    %3465 = tensor.extract %arg0[%3464] : tensor<64x!fhe.secret<i16>>
    %3466 = fhe.add(%3458, %3465) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3467 = affine.apply #map1(%c-1)
    %3468 = arith.addi %3039, %c-1_1 : index
    %3469 = arith.muli %3468, %c8 : index
    %3470 = arith.addi %3419, %3467 : index
    %3471 = arith.addi %3469, %3470 : index
    %3472 = arith.remui %3471, %c64 : index
    %3473 = tensor.extract %arg0[%3472] : tensor<64x!fhe.secret<i16>>
    %3474 = fhe.add(%3466, %3473) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3475 = affine.apply #map0(%c-1_1)
    %3476 = arith.addi %3039, %3475 : index
    %3477 = arith.muli %3476, %c8 : index
    %3478 = arith.addi %3419, %3467 : index
    %3479 = arith.addi %3477, %3478 : index
    %3480 = arith.remui %3479, %c64 : index
    %3481 = tensor.extract %arg0[%3480] : tensor<64x!fhe.secret<i16>>
    %3482 = fhe.add(%3474, %3481) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3483 = affine.apply #map1(%c-1_1)
    %3484 = arith.addi %3039, %3483 : index
    %3485 = arith.muli %3484, %c8 : index
    %3486 = arith.addi %3419, %3467 : index
    %3487 = arith.addi %3485, %3486 : index
    %3488 = arith.remui %3487, %c64 : index
    %3489 = tensor.extract %arg0[%3488] : tensor<64x!fhe.secret<i16>>
    %3490 = fhe.add(%3482, %3489) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3491 = arith.muli %c8, %3039 : index
    %3492 = arith.addi %3491, %3419 : index
    %3493 = arith.remui %3492, %c64 : index
    %3494 = tensor.insert %3490 into %3418[%3493] : tensor<64x!fhe.secret<i16>>
    %3495 = affine.apply #map5(%c0_0)
    %c0_i16_47 = fhe.constant 0 : i16
    %3496 = arith.addi %3039, %c-1_1 : index
    %3497 = arith.muli %3496, %c8 : index
    %3498 = arith.addi %3495, %c-1 : index
    %3499 = arith.addi %3497, %3498 : index
    %3500 = arith.remui %3499, %c64 : index
    %3501 = tensor.extract %arg0[%3500] : tensor<64x!fhe.secret<i16>>
    %3502 = fhe.add(%c0_i16_47, %3501) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3503 = affine.apply #map0(%c-1_1)
    %3504 = arith.addi %3039, %3503 : index
    %3505 = arith.muli %3504, %c8 : index
    %3506 = arith.addi %3495, %c-1 : index
    %3507 = arith.addi %3505, %3506 : index
    %3508 = arith.remui %3507, %c64 : index
    %3509 = tensor.extract %arg0[%3508] : tensor<64x!fhe.secret<i16>>
    %3510 = fhe.add(%3502, %3509) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3511 = affine.apply #map1(%c-1_1)
    %3512 = arith.addi %3039, %3511 : index
    %3513 = arith.muli %3512, %c8 : index
    %3514 = arith.addi %3495, %c-1 : index
    %3515 = arith.addi %3513, %3514 : index
    %3516 = arith.remui %3515, %c64 : index
    %3517 = tensor.extract %arg0[%3516] : tensor<64x!fhe.secret<i16>>
    %3518 = fhe.add(%3510, %3517) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3519 = affine.apply #map0(%c-1)
    %3520 = arith.addi %3039, %c-1_1 : index
    %3521 = arith.muli %3520, %c8 : index
    %3522 = arith.addi %3495, %3519 : index
    %3523 = arith.addi %3521, %3522 : index
    %3524 = arith.remui %3523, %c64 : index
    %3525 = tensor.extract %arg0[%3524] : tensor<64x!fhe.secret<i16>>
    %3526 = fhe.add(%3518, %3525) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3527 = affine.apply #map0(%c-1_1)
    %3528 = arith.addi %3039, %3527 : index
    %3529 = arith.muli %3528, %c8 : index
    %3530 = arith.addi %3495, %3519 : index
    %3531 = arith.addi %3529, %3530 : index
    %3532 = arith.remui %3531, %c64 : index
    %3533 = tensor.extract %arg0[%3532] : tensor<64x!fhe.secret<i16>>
    %3534 = fhe.add(%3526, %3533) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3535 = affine.apply #map1(%c-1_1)
    %3536 = arith.addi %3039, %3535 : index
    %3537 = arith.muli %3536, %c8 : index
    %3538 = arith.addi %3495, %3519 : index
    %3539 = arith.addi %3537, %3538 : index
    %3540 = arith.remui %3539, %c64 : index
    %3541 = tensor.extract %arg0[%3540] : tensor<64x!fhe.secret<i16>>
    %3542 = fhe.add(%3534, %3541) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3543 = affine.apply #map1(%c-1)
    %3544 = arith.addi %3039, %c-1_1 : index
    %3545 = arith.muli %3544, %c8 : index
    %3546 = arith.addi %3495, %3543 : index
    %3547 = arith.addi %3545, %3546 : index
    %3548 = arith.remui %3547, %c64 : index
    %3549 = tensor.extract %arg0[%3548] : tensor<64x!fhe.secret<i16>>
    %3550 = fhe.add(%3542, %3549) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3551 = affine.apply #map0(%c-1_1)
    %3552 = arith.addi %3039, %3551 : index
    %3553 = arith.muli %3552, %c8 : index
    %3554 = arith.addi %3495, %3543 : index
    %3555 = arith.addi %3553, %3554 : index
    %3556 = arith.remui %3555, %c64 : index
    %3557 = tensor.extract %arg0[%3556] : tensor<64x!fhe.secret<i16>>
    %3558 = fhe.add(%3550, %3557) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3559 = affine.apply #map1(%c-1_1)
    %3560 = arith.addi %3039, %3559 : index
    %3561 = arith.muli %3560, %c8 : index
    %3562 = arith.addi %3495, %3543 : index
    %3563 = arith.addi %3561, %3562 : index
    %3564 = arith.remui %3563, %c64 : index
    %3565 = tensor.extract %arg0[%3564] : tensor<64x!fhe.secret<i16>>
    %3566 = fhe.add(%3558, %3565) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3567 = arith.muli %c8, %3039 : index
    %3568 = arith.addi %3567, %3495 : index
    %3569 = arith.remui %3568, %c64 : index
    %3570 = tensor.insert %3566 into %3494[%3569] : tensor<64x!fhe.secret<i16>>
    %3571 = affine.apply #map6(%c0_0)
    %c0_i16_48 = fhe.constant 0 : i16
    %3572 = arith.addi %3039, %c-1_1 : index
    %3573 = arith.muli %3572, %c8 : index
    %3574 = arith.addi %3571, %c-1 : index
    %3575 = arith.addi %3573, %3574 : index
    %3576 = arith.remui %3575, %c64 : index
    %3577 = tensor.extract %arg0[%3576] : tensor<64x!fhe.secret<i16>>
    %3578 = fhe.add(%c0_i16_48, %3577) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3579 = affine.apply #map0(%c-1_1)
    %3580 = arith.addi %3039, %3579 : index
    %3581 = arith.muli %3580, %c8 : index
    %3582 = arith.addi %3571, %c-1 : index
    %3583 = arith.addi %3581, %3582 : index
    %3584 = arith.remui %3583, %c64 : index
    %3585 = tensor.extract %arg0[%3584] : tensor<64x!fhe.secret<i16>>
    %3586 = fhe.add(%3578, %3585) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3587 = affine.apply #map1(%c-1_1)
    %3588 = arith.addi %3039, %3587 : index
    %3589 = arith.muli %3588, %c8 : index
    %3590 = arith.addi %3571, %c-1 : index
    %3591 = arith.addi %3589, %3590 : index
    %3592 = arith.remui %3591, %c64 : index
    %3593 = tensor.extract %arg0[%3592] : tensor<64x!fhe.secret<i16>>
    %3594 = fhe.add(%3586, %3593) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3595 = affine.apply #map0(%c-1)
    %3596 = arith.addi %3039, %c-1_1 : index
    %3597 = arith.muli %3596, %c8 : index
    %3598 = arith.addi %3571, %3595 : index
    %3599 = arith.addi %3597, %3598 : index
    %3600 = arith.remui %3599, %c64 : index
    %3601 = tensor.extract %arg0[%3600] : tensor<64x!fhe.secret<i16>>
    %3602 = fhe.add(%3594, %3601) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3603 = affine.apply #map0(%c-1_1)
    %3604 = arith.addi %3039, %3603 : index
    %3605 = arith.muli %3604, %c8 : index
    %3606 = arith.addi %3571, %3595 : index
    %3607 = arith.addi %3605, %3606 : index
    %3608 = arith.remui %3607, %c64 : index
    %3609 = tensor.extract %arg0[%3608] : tensor<64x!fhe.secret<i16>>
    %3610 = fhe.add(%3602, %3609) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3611 = affine.apply #map1(%c-1_1)
    %3612 = arith.addi %3039, %3611 : index
    %3613 = arith.muli %3612, %c8 : index
    %3614 = arith.addi %3571, %3595 : index
    %3615 = arith.addi %3613, %3614 : index
    %3616 = arith.remui %3615, %c64 : index
    %3617 = tensor.extract %arg0[%3616] : tensor<64x!fhe.secret<i16>>
    %3618 = fhe.add(%3610, %3617) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3619 = affine.apply #map1(%c-1)
    %3620 = arith.addi %3039, %c-1_1 : index
    %3621 = arith.muli %3620, %c8 : index
    %3622 = arith.addi %3571, %3619 : index
    %3623 = arith.addi %3621, %3622 : index
    %3624 = arith.remui %3623, %c64 : index
    %3625 = tensor.extract %arg0[%3624] : tensor<64x!fhe.secret<i16>>
    %3626 = fhe.add(%3618, %3625) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3627 = affine.apply #map0(%c-1_1)
    %3628 = arith.addi %3039, %3627 : index
    %3629 = arith.muli %3628, %c8 : index
    %3630 = arith.addi %3571, %3619 : index
    %3631 = arith.addi %3629, %3630 : index
    %3632 = arith.remui %3631, %c64 : index
    %3633 = tensor.extract %arg0[%3632] : tensor<64x!fhe.secret<i16>>
    %3634 = fhe.add(%3626, %3633) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3635 = affine.apply #map1(%c-1_1)
    %3636 = arith.addi %3039, %3635 : index
    %3637 = arith.muli %3636, %c8 : index
    %3638 = arith.addi %3571, %3619 : index
    %3639 = arith.addi %3637, %3638 : index
    %3640 = arith.remui %3639, %c64 : index
    %3641 = tensor.extract %arg0[%3640] : tensor<64x!fhe.secret<i16>>
    %3642 = fhe.add(%3634, %3641) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3643 = arith.muli %c8, %3039 : index
    %3644 = arith.addi %3643, %3571 : index
    %3645 = arith.remui %3644, %c64 : index
    %3646 = tensor.insert %3642 into %3570[%3645] : tensor<64x!fhe.secret<i16>>
    %3647 = affine.apply #map5(%c0)
    %c0_i16_49 = fhe.constant 0 : i16
    %3648 = arith.addi %3647, %c-1_1 : index
    %3649 = arith.muli %3648, %c8 : index
    %3650 = arith.addi %c0_0, %c-1 : index
    %3651 = arith.addi %3649, %3650 : index
    %3652 = arith.remui %3651, %c64 : index
    %3653 = tensor.extract %arg0[%3652] : tensor<64x!fhe.secret<i16>>
    %3654 = fhe.add(%c0_i16_49, %3653) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3655 = affine.apply #map0(%c-1_1)
    %3656 = arith.addi %3647, %3655 : index
    %3657 = arith.muli %3656, %c8 : index
    %3658 = arith.addi %c0_0, %c-1 : index
    %3659 = arith.addi %3657, %3658 : index
    %3660 = arith.remui %3659, %c64 : index
    %3661 = tensor.extract %arg0[%3660] : tensor<64x!fhe.secret<i16>>
    %3662 = fhe.add(%3654, %3661) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3663 = affine.apply #map1(%c-1_1)
    %3664 = arith.addi %3647, %3663 : index
    %3665 = arith.muli %3664, %c8 : index
    %3666 = arith.addi %c0_0, %c-1 : index
    %3667 = arith.addi %3665, %3666 : index
    %3668 = arith.remui %3667, %c64 : index
    %3669 = tensor.extract %arg0[%3668] : tensor<64x!fhe.secret<i16>>
    %3670 = fhe.add(%3662, %3669) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3671 = affine.apply #map0(%c-1)
    %3672 = arith.addi %3647, %c-1_1 : index
    %3673 = arith.muli %3672, %c8 : index
    %3674 = arith.addi %c0_0, %3671 : index
    %3675 = arith.addi %3673, %3674 : index
    %3676 = arith.remui %3675, %c64 : index
    %3677 = tensor.extract %arg0[%3676] : tensor<64x!fhe.secret<i16>>
    %3678 = fhe.add(%3670, %3677) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3679 = affine.apply #map0(%c-1_1)
    %3680 = arith.addi %3647, %3679 : index
    %3681 = arith.muli %3680, %c8 : index
    %3682 = arith.addi %c0_0, %3671 : index
    %3683 = arith.addi %3681, %3682 : index
    %3684 = arith.remui %3683, %c64 : index
    %3685 = tensor.extract %arg0[%3684] : tensor<64x!fhe.secret<i16>>
    %3686 = fhe.add(%3678, %3685) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3687 = affine.apply #map1(%c-1_1)
    %3688 = arith.addi %3647, %3687 : index
    %3689 = arith.muli %3688, %c8 : index
    %3690 = arith.addi %c0_0, %3671 : index
    %3691 = arith.addi %3689, %3690 : index
    %3692 = arith.remui %3691, %c64 : index
    %3693 = tensor.extract %arg0[%3692] : tensor<64x!fhe.secret<i16>>
    %3694 = fhe.add(%3686, %3693) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3695 = affine.apply #map1(%c-1)
    %3696 = arith.addi %3647, %c-1_1 : index
    %3697 = arith.muli %3696, %c8 : index
    %3698 = arith.addi %c0_0, %3695 : index
    %3699 = arith.addi %3697, %3698 : index
    %3700 = arith.remui %3699, %c64 : index
    %3701 = tensor.extract %arg0[%3700] : tensor<64x!fhe.secret<i16>>
    %3702 = fhe.add(%3694, %3701) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3703 = affine.apply #map0(%c-1_1)
    %3704 = arith.addi %3647, %3703 : index
    %3705 = arith.muli %3704, %c8 : index
    %3706 = arith.addi %c0_0, %3695 : index
    %3707 = arith.addi %3705, %3706 : index
    %3708 = arith.remui %3707, %c64 : index
    %3709 = tensor.extract %arg0[%3708] : tensor<64x!fhe.secret<i16>>
    %3710 = fhe.add(%3702, %3709) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3711 = affine.apply #map1(%c-1_1)
    %3712 = arith.addi %3647, %3711 : index
    %3713 = arith.muli %3712, %c8 : index
    %3714 = arith.addi %c0_0, %3695 : index
    %3715 = arith.addi %3713, %3714 : index
    %3716 = arith.remui %3715, %c64 : index
    %3717 = tensor.extract %arg0[%3716] : tensor<64x!fhe.secret<i16>>
    %3718 = fhe.add(%3710, %3717) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3719 = arith.muli %c8, %3647 : index
    %3720 = arith.addi %3719, %c0_0 : index
    %3721 = arith.remui %3720, %c64 : index
    %3722 = tensor.insert %3718 into %3646[%3721] : tensor<64x!fhe.secret<i16>>
    %3723 = affine.apply #map0(%c0_0)
    %c0_i16_50 = fhe.constant 0 : i16
    %3724 = arith.addi %3647, %c-1_1 : index
    %3725 = arith.muli %3724, %c8 : index
    %3726 = arith.addi %3723, %c-1 : index
    %3727 = arith.addi %3725, %3726 : index
    %3728 = arith.remui %3727, %c64 : index
    %3729 = tensor.extract %arg0[%3728] : tensor<64x!fhe.secret<i16>>
    %3730 = fhe.add(%c0_i16_50, %3729) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3731 = affine.apply #map0(%c-1_1)
    %3732 = arith.addi %3647, %3731 : index
    %3733 = arith.muli %3732, %c8 : index
    %3734 = arith.addi %3723, %c-1 : index
    %3735 = arith.addi %3733, %3734 : index
    %3736 = arith.remui %3735, %c64 : index
    %3737 = tensor.extract %arg0[%3736] : tensor<64x!fhe.secret<i16>>
    %3738 = fhe.add(%3730, %3737) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3739 = affine.apply #map1(%c-1_1)
    %3740 = arith.addi %3647, %3739 : index
    %3741 = arith.muli %3740, %c8 : index
    %3742 = arith.addi %3723, %c-1 : index
    %3743 = arith.addi %3741, %3742 : index
    %3744 = arith.remui %3743, %c64 : index
    %3745 = tensor.extract %arg0[%3744] : tensor<64x!fhe.secret<i16>>
    %3746 = fhe.add(%3738, %3745) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3747 = affine.apply #map0(%c-1)
    %3748 = arith.addi %3647, %c-1_1 : index
    %3749 = arith.muli %3748, %c8 : index
    %3750 = arith.addi %3723, %3747 : index
    %3751 = arith.addi %3749, %3750 : index
    %3752 = arith.remui %3751, %c64 : index
    %3753 = tensor.extract %arg0[%3752] : tensor<64x!fhe.secret<i16>>
    %3754 = fhe.add(%3746, %3753) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3755 = affine.apply #map0(%c-1_1)
    %3756 = arith.addi %3647, %3755 : index
    %3757 = arith.muli %3756, %c8 : index
    %3758 = arith.addi %3723, %3747 : index
    %3759 = arith.addi %3757, %3758 : index
    %3760 = arith.remui %3759, %c64 : index
    %3761 = tensor.extract %arg0[%3760] : tensor<64x!fhe.secret<i16>>
    %3762 = fhe.add(%3754, %3761) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3763 = affine.apply #map1(%c-1_1)
    %3764 = arith.addi %3647, %3763 : index
    %3765 = arith.muli %3764, %c8 : index
    %3766 = arith.addi %3723, %3747 : index
    %3767 = arith.addi %3765, %3766 : index
    %3768 = arith.remui %3767, %c64 : index
    %3769 = tensor.extract %arg0[%3768] : tensor<64x!fhe.secret<i16>>
    %3770 = fhe.add(%3762, %3769) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3771 = affine.apply #map1(%c-1)
    %3772 = arith.addi %3647, %c-1_1 : index
    %3773 = arith.muli %3772, %c8 : index
    %3774 = arith.addi %3723, %3771 : index
    %3775 = arith.addi %3773, %3774 : index
    %3776 = arith.remui %3775, %c64 : index
    %3777 = tensor.extract %arg0[%3776] : tensor<64x!fhe.secret<i16>>
    %3778 = fhe.add(%3770, %3777) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3779 = affine.apply #map0(%c-1_1)
    %3780 = arith.addi %3647, %3779 : index
    %3781 = arith.muli %3780, %c8 : index
    %3782 = arith.addi %3723, %3771 : index
    %3783 = arith.addi %3781, %3782 : index
    %3784 = arith.remui %3783, %c64 : index
    %3785 = tensor.extract %arg0[%3784] : tensor<64x!fhe.secret<i16>>
    %3786 = fhe.add(%3778, %3785) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3787 = affine.apply #map1(%c-1_1)
    %3788 = arith.addi %3647, %3787 : index
    %3789 = arith.muli %3788, %c8 : index
    %3790 = arith.addi %3723, %3771 : index
    %3791 = arith.addi %3789, %3790 : index
    %3792 = arith.remui %3791, %c64 : index
    %3793 = tensor.extract %arg0[%3792] : tensor<64x!fhe.secret<i16>>
    %3794 = fhe.add(%3786, %3793) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3795 = arith.muli %c8, %3647 : index
    %3796 = arith.addi %3795, %3723 : index
    %3797 = arith.remui %3796, %c64 : index
    %3798 = tensor.insert %3794 into %3722[%3797] : tensor<64x!fhe.secret<i16>>
    %3799 = affine.apply #map1(%c0_0)
    %c0_i16_51 = fhe.constant 0 : i16
    %3800 = arith.addi %3647, %c-1_1 : index
    %3801 = arith.muli %3800, %c8 : index
    %3802 = arith.addi %3799, %c-1 : index
    %3803 = arith.addi %3801, %3802 : index
    %3804 = arith.remui %3803, %c64 : index
    %3805 = tensor.extract %arg0[%3804] : tensor<64x!fhe.secret<i16>>
    %3806 = fhe.add(%c0_i16_51, %3805) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3807 = affine.apply #map0(%c-1_1)
    %3808 = arith.addi %3647, %3807 : index
    %3809 = arith.muli %3808, %c8 : index
    %3810 = arith.addi %3799, %c-1 : index
    %3811 = arith.addi %3809, %3810 : index
    %3812 = arith.remui %3811, %c64 : index
    %3813 = tensor.extract %arg0[%3812] : tensor<64x!fhe.secret<i16>>
    %3814 = fhe.add(%3806, %3813) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3815 = affine.apply #map1(%c-1_1)
    %3816 = arith.addi %3647, %3815 : index
    %3817 = arith.muli %3816, %c8 : index
    %3818 = arith.addi %3799, %c-1 : index
    %3819 = arith.addi %3817, %3818 : index
    %3820 = arith.remui %3819, %c64 : index
    %3821 = tensor.extract %arg0[%3820] : tensor<64x!fhe.secret<i16>>
    %3822 = fhe.add(%3814, %3821) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3823 = affine.apply #map0(%c-1)
    %3824 = arith.addi %3647, %c-1_1 : index
    %3825 = arith.muli %3824, %c8 : index
    %3826 = arith.addi %3799, %3823 : index
    %3827 = arith.addi %3825, %3826 : index
    %3828 = arith.remui %3827, %c64 : index
    %3829 = tensor.extract %arg0[%3828] : tensor<64x!fhe.secret<i16>>
    %3830 = fhe.add(%3822, %3829) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3831 = affine.apply #map0(%c-1_1)
    %3832 = arith.addi %3647, %3831 : index
    %3833 = arith.muli %3832, %c8 : index
    %3834 = arith.addi %3799, %3823 : index
    %3835 = arith.addi %3833, %3834 : index
    %3836 = arith.remui %3835, %c64 : index
    %3837 = tensor.extract %arg0[%3836] : tensor<64x!fhe.secret<i16>>
    %3838 = fhe.add(%3830, %3837) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3839 = affine.apply #map1(%c-1_1)
    %3840 = arith.addi %3647, %3839 : index
    %3841 = arith.muli %3840, %c8 : index
    %3842 = arith.addi %3799, %3823 : index
    %3843 = arith.addi %3841, %3842 : index
    %3844 = arith.remui %3843, %c64 : index
    %3845 = tensor.extract %arg0[%3844] : tensor<64x!fhe.secret<i16>>
    %3846 = fhe.add(%3838, %3845) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3847 = affine.apply #map1(%c-1)
    %3848 = arith.addi %3647, %c-1_1 : index
    %3849 = arith.muli %3848, %c8 : index
    %3850 = arith.addi %3799, %3847 : index
    %3851 = arith.addi %3849, %3850 : index
    %3852 = arith.remui %3851, %c64 : index
    %3853 = tensor.extract %arg0[%3852] : tensor<64x!fhe.secret<i16>>
    %3854 = fhe.add(%3846, %3853) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3855 = affine.apply #map0(%c-1_1)
    %3856 = arith.addi %3647, %3855 : index
    %3857 = arith.muli %3856, %c8 : index
    %3858 = arith.addi %3799, %3847 : index
    %3859 = arith.addi %3857, %3858 : index
    %3860 = arith.remui %3859, %c64 : index
    %3861 = tensor.extract %arg0[%3860] : tensor<64x!fhe.secret<i16>>
    %3862 = fhe.add(%3854, %3861) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3863 = affine.apply #map1(%c-1_1)
    %3864 = arith.addi %3647, %3863 : index
    %3865 = arith.muli %3864, %c8 : index
    %3866 = arith.addi %3799, %3847 : index
    %3867 = arith.addi %3865, %3866 : index
    %3868 = arith.remui %3867, %c64 : index
    %3869 = tensor.extract %arg0[%3868] : tensor<64x!fhe.secret<i16>>
    %3870 = fhe.add(%3862, %3869) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3871 = arith.muli %c8, %3647 : index
    %3872 = arith.addi %3871, %3799 : index
    %3873 = arith.remui %3872, %c64 : index
    %3874 = tensor.insert %3870 into %3798[%3873] : tensor<64x!fhe.secret<i16>>
    %3875 = affine.apply #map2(%c0_0)
    %c0_i16_52 = fhe.constant 0 : i16
    %3876 = arith.addi %3647, %c-1_1 : index
    %3877 = arith.muli %3876, %c8 : index
    %3878 = arith.addi %3875, %c-1 : index
    %3879 = arith.addi %3877, %3878 : index
    %3880 = arith.remui %3879, %c64 : index
    %3881 = tensor.extract %arg0[%3880] : tensor<64x!fhe.secret<i16>>
    %3882 = fhe.add(%c0_i16_52, %3881) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3883 = affine.apply #map0(%c-1_1)
    %3884 = arith.addi %3647, %3883 : index
    %3885 = arith.muli %3884, %c8 : index
    %3886 = arith.addi %3875, %c-1 : index
    %3887 = arith.addi %3885, %3886 : index
    %3888 = arith.remui %3887, %c64 : index
    %3889 = tensor.extract %arg0[%3888] : tensor<64x!fhe.secret<i16>>
    %3890 = fhe.add(%3882, %3889) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3891 = affine.apply #map1(%c-1_1)
    %3892 = arith.addi %3647, %3891 : index
    %3893 = arith.muli %3892, %c8 : index
    %3894 = arith.addi %3875, %c-1 : index
    %3895 = arith.addi %3893, %3894 : index
    %3896 = arith.remui %3895, %c64 : index
    %3897 = tensor.extract %arg0[%3896] : tensor<64x!fhe.secret<i16>>
    %3898 = fhe.add(%3890, %3897) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3899 = affine.apply #map0(%c-1)
    %3900 = arith.addi %3647, %c-1_1 : index
    %3901 = arith.muli %3900, %c8 : index
    %3902 = arith.addi %3875, %3899 : index
    %3903 = arith.addi %3901, %3902 : index
    %3904 = arith.remui %3903, %c64 : index
    %3905 = tensor.extract %arg0[%3904] : tensor<64x!fhe.secret<i16>>
    %3906 = fhe.add(%3898, %3905) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3907 = affine.apply #map0(%c-1_1)
    %3908 = arith.addi %3647, %3907 : index
    %3909 = arith.muli %3908, %c8 : index
    %3910 = arith.addi %3875, %3899 : index
    %3911 = arith.addi %3909, %3910 : index
    %3912 = arith.remui %3911, %c64 : index
    %3913 = tensor.extract %arg0[%3912] : tensor<64x!fhe.secret<i16>>
    %3914 = fhe.add(%3906, %3913) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3915 = affine.apply #map1(%c-1_1)
    %3916 = arith.addi %3647, %3915 : index
    %3917 = arith.muli %3916, %c8 : index
    %3918 = arith.addi %3875, %3899 : index
    %3919 = arith.addi %3917, %3918 : index
    %3920 = arith.remui %3919, %c64 : index
    %3921 = tensor.extract %arg0[%3920] : tensor<64x!fhe.secret<i16>>
    %3922 = fhe.add(%3914, %3921) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3923 = affine.apply #map1(%c-1)
    %3924 = arith.addi %3647, %c-1_1 : index
    %3925 = arith.muli %3924, %c8 : index
    %3926 = arith.addi %3875, %3923 : index
    %3927 = arith.addi %3925, %3926 : index
    %3928 = arith.remui %3927, %c64 : index
    %3929 = tensor.extract %arg0[%3928] : tensor<64x!fhe.secret<i16>>
    %3930 = fhe.add(%3922, %3929) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3931 = affine.apply #map0(%c-1_1)
    %3932 = arith.addi %3647, %3931 : index
    %3933 = arith.muli %3932, %c8 : index
    %3934 = arith.addi %3875, %3923 : index
    %3935 = arith.addi %3933, %3934 : index
    %3936 = arith.remui %3935, %c64 : index
    %3937 = tensor.extract %arg0[%3936] : tensor<64x!fhe.secret<i16>>
    %3938 = fhe.add(%3930, %3937) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3939 = affine.apply #map1(%c-1_1)
    %3940 = arith.addi %3647, %3939 : index
    %3941 = arith.muli %3940, %c8 : index
    %3942 = arith.addi %3875, %3923 : index
    %3943 = arith.addi %3941, %3942 : index
    %3944 = arith.remui %3943, %c64 : index
    %3945 = tensor.extract %arg0[%3944] : tensor<64x!fhe.secret<i16>>
    %3946 = fhe.add(%3938, %3945) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3947 = arith.muli %c8, %3647 : index
    %3948 = arith.addi %3947, %3875 : index
    %3949 = arith.remui %3948, %c64 : index
    %3950 = tensor.insert %3946 into %3874[%3949] : tensor<64x!fhe.secret<i16>>
    %3951 = affine.apply #map3(%c0_0)
    %c0_i16_53 = fhe.constant 0 : i16
    %3952 = arith.addi %3647, %c-1_1 : index
    %3953 = arith.muli %3952, %c8 : index
    %3954 = arith.addi %3951, %c-1 : index
    %3955 = arith.addi %3953, %3954 : index
    %3956 = arith.remui %3955, %c64 : index
    %3957 = tensor.extract %arg0[%3956] : tensor<64x!fhe.secret<i16>>
    %3958 = fhe.add(%c0_i16_53, %3957) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3959 = affine.apply #map0(%c-1_1)
    %3960 = arith.addi %3647, %3959 : index
    %3961 = arith.muli %3960, %c8 : index
    %3962 = arith.addi %3951, %c-1 : index
    %3963 = arith.addi %3961, %3962 : index
    %3964 = arith.remui %3963, %c64 : index
    %3965 = tensor.extract %arg0[%3964] : tensor<64x!fhe.secret<i16>>
    %3966 = fhe.add(%3958, %3965) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3967 = affine.apply #map1(%c-1_1)
    %3968 = arith.addi %3647, %3967 : index
    %3969 = arith.muli %3968, %c8 : index
    %3970 = arith.addi %3951, %c-1 : index
    %3971 = arith.addi %3969, %3970 : index
    %3972 = arith.remui %3971, %c64 : index
    %3973 = tensor.extract %arg0[%3972] : tensor<64x!fhe.secret<i16>>
    %3974 = fhe.add(%3966, %3973) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3975 = affine.apply #map0(%c-1)
    %3976 = arith.addi %3647, %c-1_1 : index
    %3977 = arith.muli %3976, %c8 : index
    %3978 = arith.addi %3951, %3975 : index
    %3979 = arith.addi %3977, %3978 : index
    %3980 = arith.remui %3979, %c64 : index
    %3981 = tensor.extract %arg0[%3980] : tensor<64x!fhe.secret<i16>>
    %3982 = fhe.add(%3974, %3981) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3983 = affine.apply #map0(%c-1_1)
    %3984 = arith.addi %3647, %3983 : index
    %3985 = arith.muli %3984, %c8 : index
    %3986 = arith.addi %3951, %3975 : index
    %3987 = arith.addi %3985, %3986 : index
    %3988 = arith.remui %3987, %c64 : index
    %3989 = tensor.extract %arg0[%3988] : tensor<64x!fhe.secret<i16>>
    %3990 = fhe.add(%3982, %3989) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3991 = affine.apply #map1(%c-1_1)
    %3992 = arith.addi %3647, %3991 : index
    %3993 = arith.muli %3992, %c8 : index
    %3994 = arith.addi %3951, %3975 : index
    %3995 = arith.addi %3993, %3994 : index
    %3996 = arith.remui %3995, %c64 : index
    %3997 = tensor.extract %arg0[%3996] : tensor<64x!fhe.secret<i16>>
    %3998 = fhe.add(%3990, %3997) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %3999 = affine.apply #map1(%c-1)
    %4000 = arith.addi %3647, %c-1_1 : index
    %4001 = arith.muli %4000, %c8 : index
    %4002 = arith.addi %3951, %3999 : index
    %4003 = arith.addi %4001, %4002 : index
    %4004 = arith.remui %4003, %c64 : index
    %4005 = tensor.extract %arg0[%4004] : tensor<64x!fhe.secret<i16>>
    %4006 = fhe.add(%3998, %4005) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4007 = affine.apply #map0(%c-1_1)
    %4008 = arith.addi %3647, %4007 : index
    %4009 = arith.muli %4008, %c8 : index
    %4010 = arith.addi %3951, %3999 : index
    %4011 = arith.addi %4009, %4010 : index
    %4012 = arith.remui %4011, %c64 : index
    %4013 = tensor.extract %arg0[%4012] : tensor<64x!fhe.secret<i16>>
    %4014 = fhe.add(%4006, %4013) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4015 = affine.apply #map1(%c-1_1)
    %4016 = arith.addi %3647, %4015 : index
    %4017 = arith.muli %4016, %c8 : index
    %4018 = arith.addi %3951, %3999 : index
    %4019 = arith.addi %4017, %4018 : index
    %4020 = arith.remui %4019, %c64 : index
    %4021 = tensor.extract %arg0[%4020] : tensor<64x!fhe.secret<i16>>
    %4022 = fhe.add(%4014, %4021) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4023 = arith.muli %c8, %3647 : index
    %4024 = arith.addi %4023, %3951 : index
    %4025 = arith.remui %4024, %c64 : index
    %4026 = tensor.insert %4022 into %3950[%4025] : tensor<64x!fhe.secret<i16>>
    %4027 = affine.apply #map4(%c0_0)
    %c0_i16_54 = fhe.constant 0 : i16
    %4028 = arith.addi %3647, %c-1_1 : index
    %4029 = arith.muli %4028, %c8 : index
    %4030 = arith.addi %4027, %c-1 : index
    %4031 = arith.addi %4029, %4030 : index
    %4032 = arith.remui %4031, %c64 : index
    %4033 = tensor.extract %arg0[%4032] : tensor<64x!fhe.secret<i16>>
    %4034 = fhe.add(%c0_i16_54, %4033) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4035 = affine.apply #map0(%c-1_1)
    %4036 = arith.addi %3647, %4035 : index
    %4037 = arith.muli %4036, %c8 : index
    %4038 = arith.addi %4027, %c-1 : index
    %4039 = arith.addi %4037, %4038 : index
    %4040 = arith.remui %4039, %c64 : index
    %4041 = tensor.extract %arg0[%4040] : tensor<64x!fhe.secret<i16>>
    %4042 = fhe.add(%4034, %4041) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4043 = affine.apply #map1(%c-1_1)
    %4044 = arith.addi %3647, %4043 : index
    %4045 = arith.muli %4044, %c8 : index
    %4046 = arith.addi %4027, %c-1 : index
    %4047 = arith.addi %4045, %4046 : index
    %4048 = arith.remui %4047, %c64 : index
    %4049 = tensor.extract %arg0[%4048] : tensor<64x!fhe.secret<i16>>
    %4050 = fhe.add(%4042, %4049) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4051 = affine.apply #map0(%c-1)
    %4052 = arith.addi %3647, %c-1_1 : index
    %4053 = arith.muli %4052, %c8 : index
    %4054 = arith.addi %4027, %4051 : index
    %4055 = arith.addi %4053, %4054 : index
    %4056 = arith.remui %4055, %c64 : index
    %4057 = tensor.extract %arg0[%4056] : tensor<64x!fhe.secret<i16>>
    %4058 = fhe.add(%4050, %4057) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4059 = affine.apply #map0(%c-1_1)
    %4060 = arith.addi %3647, %4059 : index
    %4061 = arith.muli %4060, %c8 : index
    %4062 = arith.addi %4027, %4051 : index
    %4063 = arith.addi %4061, %4062 : index
    %4064 = arith.remui %4063, %c64 : index
    %4065 = tensor.extract %arg0[%4064] : tensor<64x!fhe.secret<i16>>
    %4066 = fhe.add(%4058, %4065) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4067 = affine.apply #map1(%c-1_1)
    %4068 = arith.addi %3647, %4067 : index
    %4069 = arith.muli %4068, %c8 : index
    %4070 = arith.addi %4027, %4051 : index
    %4071 = arith.addi %4069, %4070 : index
    %4072 = arith.remui %4071, %c64 : index
    %4073 = tensor.extract %arg0[%4072] : tensor<64x!fhe.secret<i16>>
    %4074 = fhe.add(%4066, %4073) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4075 = affine.apply #map1(%c-1)
    %4076 = arith.addi %3647, %c-1_1 : index
    %4077 = arith.muli %4076, %c8 : index
    %4078 = arith.addi %4027, %4075 : index
    %4079 = arith.addi %4077, %4078 : index
    %4080 = arith.remui %4079, %c64 : index
    %4081 = tensor.extract %arg0[%4080] : tensor<64x!fhe.secret<i16>>
    %4082 = fhe.add(%4074, %4081) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4083 = affine.apply #map0(%c-1_1)
    %4084 = arith.addi %3647, %4083 : index
    %4085 = arith.muli %4084, %c8 : index
    %4086 = arith.addi %4027, %4075 : index
    %4087 = arith.addi %4085, %4086 : index
    %4088 = arith.remui %4087, %c64 : index
    %4089 = tensor.extract %arg0[%4088] : tensor<64x!fhe.secret<i16>>
    %4090 = fhe.add(%4082, %4089) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4091 = affine.apply #map1(%c-1_1)
    %4092 = arith.addi %3647, %4091 : index
    %4093 = arith.muli %4092, %c8 : index
    %4094 = arith.addi %4027, %4075 : index
    %4095 = arith.addi %4093, %4094 : index
    %4096 = arith.remui %4095, %c64 : index
    %4097 = tensor.extract %arg0[%4096] : tensor<64x!fhe.secret<i16>>
    %4098 = fhe.add(%4090, %4097) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4099 = arith.muli %c8, %3647 : index
    %4100 = arith.addi %4099, %4027 : index
    %4101 = arith.remui %4100, %c64 : index
    %4102 = tensor.insert %4098 into %4026[%4101] : tensor<64x!fhe.secret<i16>>
    %4103 = affine.apply #map5(%c0_0)
    %c0_i16_55 = fhe.constant 0 : i16
    %4104 = arith.addi %3647, %c-1_1 : index
    %4105 = arith.muli %4104, %c8 : index
    %4106 = arith.addi %4103, %c-1 : index
    %4107 = arith.addi %4105, %4106 : index
    %4108 = arith.remui %4107, %c64 : index
    %4109 = tensor.extract %arg0[%4108] : tensor<64x!fhe.secret<i16>>
    %4110 = fhe.add(%c0_i16_55, %4109) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4111 = affine.apply #map0(%c-1_1)
    %4112 = arith.addi %3647, %4111 : index
    %4113 = arith.muli %4112, %c8 : index
    %4114 = arith.addi %4103, %c-1 : index
    %4115 = arith.addi %4113, %4114 : index
    %4116 = arith.remui %4115, %c64 : index
    %4117 = tensor.extract %arg0[%4116] : tensor<64x!fhe.secret<i16>>
    %4118 = fhe.add(%4110, %4117) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4119 = affine.apply #map1(%c-1_1)
    %4120 = arith.addi %3647, %4119 : index
    %4121 = arith.muli %4120, %c8 : index
    %4122 = arith.addi %4103, %c-1 : index
    %4123 = arith.addi %4121, %4122 : index
    %4124 = arith.remui %4123, %c64 : index
    %4125 = tensor.extract %arg0[%4124] : tensor<64x!fhe.secret<i16>>
    %4126 = fhe.add(%4118, %4125) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4127 = affine.apply #map0(%c-1)
    %4128 = arith.addi %3647, %c-1_1 : index
    %4129 = arith.muli %4128, %c8 : index
    %4130 = arith.addi %4103, %4127 : index
    %4131 = arith.addi %4129, %4130 : index
    %4132 = arith.remui %4131, %c64 : index
    %4133 = tensor.extract %arg0[%4132] : tensor<64x!fhe.secret<i16>>
    %4134 = fhe.add(%4126, %4133) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4135 = affine.apply #map0(%c-1_1)
    %4136 = arith.addi %3647, %4135 : index
    %4137 = arith.muli %4136, %c8 : index
    %4138 = arith.addi %4103, %4127 : index
    %4139 = arith.addi %4137, %4138 : index
    %4140 = arith.remui %4139, %c64 : index
    %4141 = tensor.extract %arg0[%4140] : tensor<64x!fhe.secret<i16>>
    %4142 = fhe.add(%4134, %4141) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4143 = affine.apply #map1(%c-1_1)
    %4144 = arith.addi %3647, %4143 : index
    %4145 = arith.muli %4144, %c8 : index
    %4146 = arith.addi %4103, %4127 : index
    %4147 = arith.addi %4145, %4146 : index
    %4148 = arith.remui %4147, %c64 : index
    %4149 = tensor.extract %arg0[%4148] : tensor<64x!fhe.secret<i16>>
    %4150 = fhe.add(%4142, %4149) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4151 = affine.apply #map1(%c-1)
    %4152 = arith.addi %3647, %c-1_1 : index
    %4153 = arith.muli %4152, %c8 : index
    %4154 = arith.addi %4103, %4151 : index
    %4155 = arith.addi %4153, %4154 : index
    %4156 = arith.remui %4155, %c64 : index
    %4157 = tensor.extract %arg0[%4156] : tensor<64x!fhe.secret<i16>>
    %4158 = fhe.add(%4150, %4157) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4159 = affine.apply #map0(%c-1_1)
    %4160 = arith.addi %3647, %4159 : index
    %4161 = arith.muli %4160, %c8 : index
    %4162 = arith.addi %4103, %4151 : index
    %4163 = arith.addi %4161, %4162 : index
    %4164 = arith.remui %4163, %c64 : index
    %4165 = tensor.extract %arg0[%4164] : tensor<64x!fhe.secret<i16>>
    %4166 = fhe.add(%4158, %4165) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4167 = affine.apply #map1(%c-1_1)
    %4168 = arith.addi %3647, %4167 : index
    %4169 = arith.muli %4168, %c8 : index
    %4170 = arith.addi %4103, %4151 : index
    %4171 = arith.addi %4169, %4170 : index
    %4172 = arith.remui %4171, %c64 : index
    %4173 = tensor.extract %arg0[%4172] : tensor<64x!fhe.secret<i16>>
    %4174 = fhe.add(%4166, %4173) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4175 = arith.muli %c8, %3647 : index
    %4176 = arith.addi %4175, %4103 : index
    %4177 = arith.remui %4176, %c64 : index
    %4178 = tensor.insert %4174 into %4102[%4177] : tensor<64x!fhe.secret<i16>>
    %4179 = affine.apply #map6(%c0_0)
    %c0_i16_56 = fhe.constant 0 : i16
    %4180 = arith.addi %3647, %c-1_1 : index
    %4181 = arith.muli %4180, %c8 : index
    %4182 = arith.addi %4179, %c-1 : index
    %4183 = arith.addi %4181, %4182 : index
    %4184 = arith.remui %4183, %c64 : index
    %4185 = tensor.extract %arg0[%4184] : tensor<64x!fhe.secret<i16>>
    %4186 = fhe.add(%c0_i16_56, %4185) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4187 = affine.apply #map0(%c-1_1)
    %4188 = arith.addi %3647, %4187 : index
    %4189 = arith.muli %4188, %c8 : index
    %4190 = arith.addi %4179, %c-1 : index
    %4191 = arith.addi %4189, %4190 : index
    %4192 = arith.remui %4191, %c64 : index
    %4193 = tensor.extract %arg0[%4192] : tensor<64x!fhe.secret<i16>>
    %4194 = fhe.add(%4186, %4193) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4195 = affine.apply #map1(%c-1_1)
    %4196 = arith.addi %3647, %4195 : index
    %4197 = arith.muli %4196, %c8 : index
    %4198 = arith.addi %4179, %c-1 : index
    %4199 = arith.addi %4197, %4198 : index
    %4200 = arith.remui %4199, %c64 : index
    %4201 = tensor.extract %arg0[%4200] : tensor<64x!fhe.secret<i16>>
    %4202 = fhe.add(%4194, %4201) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4203 = affine.apply #map0(%c-1)
    %4204 = arith.addi %3647, %c-1_1 : index
    %4205 = arith.muli %4204, %c8 : index
    %4206 = arith.addi %4179, %4203 : index
    %4207 = arith.addi %4205, %4206 : index
    %4208 = arith.remui %4207, %c64 : index
    %4209 = tensor.extract %arg0[%4208] : tensor<64x!fhe.secret<i16>>
    %4210 = fhe.add(%4202, %4209) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4211 = affine.apply #map0(%c-1_1)
    %4212 = arith.addi %3647, %4211 : index
    %4213 = arith.muli %4212, %c8 : index
    %4214 = arith.addi %4179, %4203 : index
    %4215 = arith.addi %4213, %4214 : index
    %4216 = arith.remui %4215, %c64 : index
    %4217 = tensor.extract %arg0[%4216] : tensor<64x!fhe.secret<i16>>
    %4218 = fhe.add(%4210, %4217) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4219 = affine.apply #map1(%c-1_1)
    %4220 = arith.addi %3647, %4219 : index
    %4221 = arith.muli %4220, %c8 : index
    %4222 = arith.addi %4179, %4203 : index
    %4223 = arith.addi %4221, %4222 : index
    %4224 = arith.remui %4223, %c64 : index
    %4225 = tensor.extract %arg0[%4224] : tensor<64x!fhe.secret<i16>>
    %4226 = fhe.add(%4218, %4225) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4227 = affine.apply #map1(%c-1)
    %4228 = arith.addi %3647, %c-1_1 : index
    %4229 = arith.muli %4228, %c8 : index
    %4230 = arith.addi %4179, %4227 : index
    %4231 = arith.addi %4229, %4230 : index
    %4232 = arith.remui %4231, %c64 : index
    %4233 = tensor.extract %arg0[%4232] : tensor<64x!fhe.secret<i16>>
    %4234 = fhe.add(%4226, %4233) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4235 = affine.apply #map0(%c-1_1)
    %4236 = arith.addi %3647, %4235 : index
    %4237 = arith.muli %4236, %c8 : index
    %4238 = arith.addi %4179, %4227 : index
    %4239 = arith.addi %4237, %4238 : index
    %4240 = arith.remui %4239, %c64 : index
    %4241 = tensor.extract %arg0[%4240] : tensor<64x!fhe.secret<i16>>
    %4242 = fhe.add(%4234, %4241) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4243 = affine.apply #map1(%c-1_1)
    %4244 = arith.addi %3647, %4243 : index
    %4245 = arith.muli %4244, %c8 : index
    %4246 = arith.addi %4179, %4227 : index
    %4247 = arith.addi %4245, %4246 : index
    %4248 = arith.remui %4247, %c64 : index
    %4249 = tensor.extract %arg0[%4248] : tensor<64x!fhe.secret<i16>>
    %4250 = fhe.add(%4242, %4249) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4251 = arith.muli %c8, %3647 : index
    %4252 = arith.addi %4251, %4179 : index
    %4253 = arith.remui %4252, %c64 : index
    %4254 = tensor.insert %4250 into %4178[%4253] : tensor<64x!fhe.secret<i16>>
    %4255 = affine.apply #map6(%c0)
    %c0_i16_57 = fhe.constant 0 : i16
    %4256 = arith.addi %4255, %c-1_1 : index
    %4257 = arith.muli %4256, %c8 : index
    %4258 = arith.addi %c0_0, %c-1 : index
    %4259 = arith.addi %4257, %4258 : index
    %4260 = arith.remui %4259, %c64 : index
    %4261 = tensor.extract %arg0[%4260] : tensor<64x!fhe.secret<i16>>
    %4262 = fhe.add(%c0_i16_57, %4261) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4263 = affine.apply #map0(%c-1_1)
    %4264 = arith.addi %4255, %4263 : index
    %4265 = arith.muli %4264, %c8 : index
    %4266 = arith.addi %c0_0, %c-1 : index
    %4267 = arith.addi %4265, %4266 : index
    %4268 = arith.remui %4267, %c64 : index
    %4269 = tensor.extract %arg0[%4268] : tensor<64x!fhe.secret<i16>>
    %4270 = fhe.add(%4262, %4269) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4271 = affine.apply #map1(%c-1_1)
    %4272 = arith.addi %4255, %4271 : index
    %4273 = arith.muli %4272, %c8 : index
    %4274 = arith.addi %c0_0, %c-1 : index
    %4275 = arith.addi %4273, %4274 : index
    %4276 = arith.remui %4275, %c64 : index
    %4277 = tensor.extract %arg0[%4276] : tensor<64x!fhe.secret<i16>>
    %4278 = fhe.add(%4270, %4277) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4279 = affine.apply #map0(%c-1)
    %4280 = arith.addi %4255, %c-1_1 : index
    %4281 = arith.muli %4280, %c8 : index
    %4282 = arith.addi %c0_0, %4279 : index
    %4283 = arith.addi %4281, %4282 : index
    %4284 = arith.remui %4283, %c64 : index
    %4285 = tensor.extract %arg0[%4284] : tensor<64x!fhe.secret<i16>>
    %4286 = fhe.add(%4278, %4285) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4287 = affine.apply #map0(%c-1_1)
    %4288 = arith.addi %4255, %4287 : index
    %4289 = arith.muli %4288, %c8 : index
    %4290 = arith.addi %c0_0, %4279 : index
    %4291 = arith.addi %4289, %4290 : index
    %4292 = arith.remui %4291, %c64 : index
    %4293 = tensor.extract %arg0[%4292] : tensor<64x!fhe.secret<i16>>
    %4294 = fhe.add(%4286, %4293) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4295 = affine.apply #map1(%c-1_1)
    %4296 = arith.addi %4255, %4295 : index
    %4297 = arith.muli %4296, %c8 : index
    %4298 = arith.addi %c0_0, %4279 : index
    %4299 = arith.addi %4297, %4298 : index
    %4300 = arith.remui %4299, %c64 : index
    %4301 = tensor.extract %arg0[%4300] : tensor<64x!fhe.secret<i16>>
    %4302 = fhe.add(%4294, %4301) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4303 = affine.apply #map1(%c-1)
    %4304 = arith.addi %4255, %c-1_1 : index
    %4305 = arith.muli %4304, %c8 : index
    %4306 = arith.addi %c0_0, %4303 : index
    %4307 = arith.addi %4305, %4306 : index
    %4308 = arith.remui %4307, %c64 : index
    %4309 = tensor.extract %arg0[%4308] : tensor<64x!fhe.secret<i16>>
    %4310 = fhe.add(%4302, %4309) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4311 = affine.apply #map0(%c-1_1)
    %4312 = arith.addi %4255, %4311 : index
    %4313 = arith.muli %4312, %c8 : index
    %4314 = arith.addi %c0_0, %4303 : index
    %4315 = arith.addi %4313, %4314 : index
    %4316 = arith.remui %4315, %c64 : index
    %4317 = tensor.extract %arg0[%4316] : tensor<64x!fhe.secret<i16>>
    %4318 = fhe.add(%4310, %4317) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4319 = affine.apply #map1(%c-1_1)
    %4320 = arith.addi %4255, %4319 : index
    %4321 = arith.muli %4320, %c8 : index
    %4322 = arith.addi %c0_0, %4303 : index
    %4323 = arith.addi %4321, %4322 : index
    %4324 = arith.remui %4323, %c64 : index
    %4325 = tensor.extract %arg0[%4324] : tensor<64x!fhe.secret<i16>>
    %4326 = fhe.add(%4318, %4325) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4327 = arith.muli %c8, %4255 : index
    %4328 = arith.addi %4327, %c0_0 : index
    %4329 = arith.remui %4328, %c64 : index
    %4330 = tensor.insert %4326 into %4254[%4329] : tensor<64x!fhe.secret<i16>>
    %4331 = affine.apply #map0(%c0_0)
    %c0_i16_58 = fhe.constant 0 : i16
    %4332 = arith.addi %4255, %c-1_1 : index
    %4333 = arith.muli %4332, %c8 : index
    %4334 = arith.addi %4331, %c-1 : index
    %4335 = arith.addi %4333, %4334 : index
    %4336 = arith.remui %4335, %c64 : index
    %4337 = tensor.extract %arg0[%4336] : tensor<64x!fhe.secret<i16>>
    %4338 = fhe.add(%c0_i16_58, %4337) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4339 = affine.apply #map0(%c-1_1)
    %4340 = arith.addi %4255, %4339 : index
    %4341 = arith.muli %4340, %c8 : index
    %4342 = arith.addi %4331, %c-1 : index
    %4343 = arith.addi %4341, %4342 : index
    %4344 = arith.remui %4343, %c64 : index
    %4345 = tensor.extract %arg0[%4344] : tensor<64x!fhe.secret<i16>>
    %4346 = fhe.add(%4338, %4345) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4347 = affine.apply #map1(%c-1_1)
    %4348 = arith.addi %4255, %4347 : index
    %4349 = arith.muli %4348, %c8 : index
    %4350 = arith.addi %4331, %c-1 : index
    %4351 = arith.addi %4349, %4350 : index
    %4352 = arith.remui %4351, %c64 : index
    %4353 = tensor.extract %arg0[%4352] : tensor<64x!fhe.secret<i16>>
    %4354 = fhe.add(%4346, %4353) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4355 = affine.apply #map0(%c-1)
    %4356 = arith.addi %4255, %c-1_1 : index
    %4357 = arith.muli %4356, %c8 : index
    %4358 = arith.addi %4331, %4355 : index
    %4359 = arith.addi %4357, %4358 : index
    %4360 = arith.remui %4359, %c64 : index
    %4361 = tensor.extract %arg0[%4360] : tensor<64x!fhe.secret<i16>>
    %4362 = fhe.add(%4354, %4361) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4363 = affine.apply #map0(%c-1_1)
    %4364 = arith.addi %4255, %4363 : index
    %4365 = arith.muli %4364, %c8 : index
    %4366 = arith.addi %4331, %4355 : index
    %4367 = arith.addi %4365, %4366 : index
    %4368 = arith.remui %4367, %c64 : index
    %4369 = tensor.extract %arg0[%4368] : tensor<64x!fhe.secret<i16>>
    %4370 = fhe.add(%4362, %4369) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4371 = affine.apply #map1(%c-1_1)
    %4372 = arith.addi %4255, %4371 : index
    %4373 = arith.muli %4372, %c8 : index
    %4374 = arith.addi %4331, %4355 : index
    %4375 = arith.addi %4373, %4374 : index
    %4376 = arith.remui %4375, %c64 : index
    %4377 = tensor.extract %arg0[%4376] : tensor<64x!fhe.secret<i16>>
    %4378 = fhe.add(%4370, %4377) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4379 = affine.apply #map1(%c-1)
    %4380 = arith.addi %4255, %c-1_1 : index
    %4381 = arith.muli %4380, %c8 : index
    %4382 = arith.addi %4331, %4379 : index
    %4383 = arith.addi %4381, %4382 : index
    %4384 = arith.remui %4383, %c64 : index
    %4385 = tensor.extract %arg0[%4384] : tensor<64x!fhe.secret<i16>>
    %4386 = fhe.add(%4378, %4385) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4387 = affine.apply #map0(%c-1_1)
    %4388 = arith.addi %4255, %4387 : index
    %4389 = arith.muli %4388, %c8 : index
    %4390 = arith.addi %4331, %4379 : index
    %4391 = arith.addi %4389, %4390 : index
    %4392 = arith.remui %4391, %c64 : index
    %4393 = tensor.extract %arg0[%4392] : tensor<64x!fhe.secret<i16>>
    %4394 = fhe.add(%4386, %4393) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4395 = affine.apply #map1(%c-1_1)
    %4396 = arith.addi %4255, %4395 : index
    %4397 = arith.muli %4396, %c8 : index
    %4398 = arith.addi %4331, %4379 : index
    %4399 = arith.addi %4397, %4398 : index
    %4400 = arith.remui %4399, %c64 : index
    %4401 = tensor.extract %arg0[%4400] : tensor<64x!fhe.secret<i16>>
    %4402 = fhe.add(%4394, %4401) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4403 = arith.muli %c8, %4255 : index
    %4404 = arith.addi %4403, %4331 : index
    %4405 = arith.remui %4404, %c64 : index
    %4406 = tensor.insert %4402 into %4330[%4405] : tensor<64x!fhe.secret<i16>>
    %4407 = affine.apply #map1(%c0_0)
    %c0_i16_59 = fhe.constant 0 : i16
    %4408 = arith.addi %4255, %c-1_1 : index
    %4409 = arith.muli %4408, %c8 : index
    %4410 = arith.addi %4407, %c-1 : index
    %4411 = arith.addi %4409, %4410 : index
    %4412 = arith.remui %4411, %c64 : index
    %4413 = tensor.extract %arg0[%4412] : tensor<64x!fhe.secret<i16>>
    %4414 = fhe.add(%c0_i16_59, %4413) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4415 = affine.apply #map0(%c-1_1)
    %4416 = arith.addi %4255, %4415 : index
    %4417 = arith.muli %4416, %c8 : index
    %4418 = arith.addi %4407, %c-1 : index
    %4419 = arith.addi %4417, %4418 : index
    %4420 = arith.remui %4419, %c64 : index
    %4421 = tensor.extract %arg0[%4420] : tensor<64x!fhe.secret<i16>>
    %4422 = fhe.add(%4414, %4421) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4423 = affine.apply #map1(%c-1_1)
    %4424 = arith.addi %4255, %4423 : index
    %4425 = arith.muli %4424, %c8 : index
    %4426 = arith.addi %4407, %c-1 : index
    %4427 = arith.addi %4425, %4426 : index
    %4428 = arith.remui %4427, %c64 : index
    %4429 = tensor.extract %arg0[%4428] : tensor<64x!fhe.secret<i16>>
    %4430 = fhe.add(%4422, %4429) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4431 = affine.apply #map0(%c-1)
    %4432 = arith.addi %4255, %c-1_1 : index
    %4433 = arith.muli %4432, %c8 : index
    %4434 = arith.addi %4407, %4431 : index
    %4435 = arith.addi %4433, %4434 : index
    %4436 = arith.remui %4435, %c64 : index
    %4437 = tensor.extract %arg0[%4436] : tensor<64x!fhe.secret<i16>>
    %4438 = fhe.add(%4430, %4437) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4439 = affine.apply #map0(%c-1_1)
    %4440 = arith.addi %4255, %4439 : index
    %4441 = arith.muli %4440, %c8 : index
    %4442 = arith.addi %4407, %4431 : index
    %4443 = arith.addi %4441, %4442 : index
    %4444 = arith.remui %4443, %c64 : index
    %4445 = tensor.extract %arg0[%4444] : tensor<64x!fhe.secret<i16>>
    %4446 = fhe.add(%4438, %4445) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4447 = affine.apply #map1(%c-1_1)
    %4448 = arith.addi %4255, %4447 : index
    %4449 = arith.muli %4448, %c8 : index
    %4450 = arith.addi %4407, %4431 : index
    %4451 = arith.addi %4449, %4450 : index
    %4452 = arith.remui %4451, %c64 : index
    %4453 = tensor.extract %arg0[%4452] : tensor<64x!fhe.secret<i16>>
    %4454 = fhe.add(%4446, %4453) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4455 = affine.apply #map1(%c-1)
    %4456 = arith.addi %4255, %c-1_1 : index
    %4457 = arith.muli %4456, %c8 : index
    %4458 = arith.addi %4407, %4455 : index
    %4459 = arith.addi %4457, %4458 : index
    %4460 = arith.remui %4459, %c64 : index
    %4461 = tensor.extract %arg0[%4460] : tensor<64x!fhe.secret<i16>>
    %4462 = fhe.add(%4454, %4461) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4463 = affine.apply #map0(%c-1_1)
    %4464 = arith.addi %4255, %4463 : index
    %4465 = arith.muli %4464, %c8 : index
    %4466 = arith.addi %4407, %4455 : index
    %4467 = arith.addi %4465, %4466 : index
    %4468 = arith.remui %4467, %c64 : index
    %4469 = tensor.extract %arg0[%4468] : tensor<64x!fhe.secret<i16>>
    %4470 = fhe.add(%4462, %4469) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4471 = affine.apply #map1(%c-1_1)
    %4472 = arith.addi %4255, %4471 : index
    %4473 = arith.muli %4472, %c8 : index
    %4474 = arith.addi %4407, %4455 : index
    %4475 = arith.addi %4473, %4474 : index
    %4476 = arith.remui %4475, %c64 : index
    %4477 = tensor.extract %arg0[%4476] : tensor<64x!fhe.secret<i16>>
    %4478 = fhe.add(%4470, %4477) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4479 = arith.muli %c8, %4255 : index
    %4480 = arith.addi %4479, %4407 : index
    %4481 = arith.remui %4480, %c64 : index
    %4482 = tensor.insert %4478 into %4406[%4481] : tensor<64x!fhe.secret<i16>>
    %4483 = affine.apply #map2(%c0_0)
    %c0_i16_60 = fhe.constant 0 : i16
    %4484 = arith.addi %4255, %c-1_1 : index
    %4485 = arith.muli %4484, %c8 : index
    %4486 = arith.addi %4483, %c-1 : index
    %4487 = arith.addi %4485, %4486 : index
    %4488 = arith.remui %4487, %c64 : index
    %4489 = tensor.extract %arg0[%4488] : tensor<64x!fhe.secret<i16>>
    %4490 = fhe.add(%c0_i16_60, %4489) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4491 = affine.apply #map0(%c-1_1)
    %4492 = arith.addi %4255, %4491 : index
    %4493 = arith.muli %4492, %c8 : index
    %4494 = arith.addi %4483, %c-1 : index
    %4495 = arith.addi %4493, %4494 : index
    %4496 = arith.remui %4495, %c64 : index
    %4497 = tensor.extract %arg0[%4496] : tensor<64x!fhe.secret<i16>>
    %4498 = fhe.add(%4490, %4497) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4499 = affine.apply #map1(%c-1_1)
    %4500 = arith.addi %4255, %4499 : index
    %4501 = arith.muli %4500, %c8 : index
    %4502 = arith.addi %4483, %c-1 : index
    %4503 = arith.addi %4501, %4502 : index
    %4504 = arith.remui %4503, %c64 : index
    %4505 = tensor.extract %arg0[%4504] : tensor<64x!fhe.secret<i16>>
    %4506 = fhe.add(%4498, %4505) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4507 = affine.apply #map0(%c-1)
    %4508 = arith.addi %4255, %c-1_1 : index
    %4509 = arith.muli %4508, %c8 : index
    %4510 = arith.addi %4483, %4507 : index
    %4511 = arith.addi %4509, %4510 : index
    %4512 = arith.remui %4511, %c64 : index
    %4513 = tensor.extract %arg0[%4512] : tensor<64x!fhe.secret<i16>>
    %4514 = fhe.add(%4506, %4513) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4515 = affine.apply #map0(%c-1_1)
    %4516 = arith.addi %4255, %4515 : index
    %4517 = arith.muli %4516, %c8 : index
    %4518 = arith.addi %4483, %4507 : index
    %4519 = arith.addi %4517, %4518 : index
    %4520 = arith.remui %4519, %c64 : index
    %4521 = tensor.extract %arg0[%4520] : tensor<64x!fhe.secret<i16>>
    %4522 = fhe.add(%4514, %4521) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4523 = affine.apply #map1(%c-1_1)
    %4524 = arith.addi %4255, %4523 : index
    %4525 = arith.muli %4524, %c8 : index
    %4526 = arith.addi %4483, %4507 : index
    %4527 = arith.addi %4525, %4526 : index
    %4528 = arith.remui %4527, %c64 : index
    %4529 = tensor.extract %arg0[%4528] : tensor<64x!fhe.secret<i16>>
    %4530 = fhe.add(%4522, %4529) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4531 = affine.apply #map1(%c-1)
    %4532 = arith.addi %4255, %c-1_1 : index
    %4533 = arith.muli %4532, %c8 : index
    %4534 = arith.addi %4483, %4531 : index
    %4535 = arith.addi %4533, %4534 : index
    %4536 = arith.remui %4535, %c64 : index
    %4537 = tensor.extract %arg0[%4536] : tensor<64x!fhe.secret<i16>>
    %4538 = fhe.add(%4530, %4537) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4539 = affine.apply #map0(%c-1_1)
    %4540 = arith.addi %4255, %4539 : index
    %4541 = arith.muli %4540, %c8 : index
    %4542 = arith.addi %4483, %4531 : index
    %4543 = arith.addi %4541, %4542 : index
    %4544 = arith.remui %4543, %c64 : index
    %4545 = tensor.extract %arg0[%4544] : tensor<64x!fhe.secret<i16>>
    %4546 = fhe.add(%4538, %4545) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4547 = affine.apply #map1(%c-1_1)
    %4548 = arith.addi %4255, %4547 : index
    %4549 = arith.muli %4548, %c8 : index
    %4550 = arith.addi %4483, %4531 : index
    %4551 = arith.addi %4549, %4550 : index
    %4552 = arith.remui %4551, %c64 : index
    %4553 = tensor.extract %arg0[%4552] : tensor<64x!fhe.secret<i16>>
    %4554 = fhe.add(%4546, %4553) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4555 = arith.muli %c8, %4255 : index
    %4556 = arith.addi %4555, %4483 : index
    %4557 = arith.remui %4556, %c64 : index
    %4558 = tensor.insert %4554 into %4482[%4557] : tensor<64x!fhe.secret<i16>>
    %4559 = affine.apply #map3(%c0_0)
    %c0_i16_61 = fhe.constant 0 : i16
    %4560 = arith.addi %4255, %c-1_1 : index
    %4561 = arith.muli %4560, %c8 : index
    %4562 = arith.addi %4559, %c-1 : index
    %4563 = arith.addi %4561, %4562 : index
    %4564 = arith.remui %4563, %c64 : index
    %4565 = tensor.extract %arg0[%4564] : tensor<64x!fhe.secret<i16>>
    %4566 = fhe.add(%c0_i16_61, %4565) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4567 = affine.apply #map0(%c-1_1)
    %4568 = arith.addi %4255, %4567 : index
    %4569 = arith.muli %4568, %c8 : index
    %4570 = arith.addi %4559, %c-1 : index
    %4571 = arith.addi %4569, %4570 : index
    %4572 = arith.remui %4571, %c64 : index
    %4573 = tensor.extract %arg0[%4572] : tensor<64x!fhe.secret<i16>>
    %4574 = fhe.add(%4566, %4573) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4575 = affine.apply #map1(%c-1_1)
    %4576 = arith.addi %4255, %4575 : index
    %4577 = arith.muli %4576, %c8 : index
    %4578 = arith.addi %4559, %c-1 : index
    %4579 = arith.addi %4577, %4578 : index
    %4580 = arith.remui %4579, %c64 : index
    %4581 = tensor.extract %arg0[%4580] : tensor<64x!fhe.secret<i16>>
    %4582 = fhe.add(%4574, %4581) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4583 = affine.apply #map0(%c-1)
    %4584 = arith.addi %4255, %c-1_1 : index
    %4585 = arith.muli %4584, %c8 : index
    %4586 = arith.addi %4559, %4583 : index
    %4587 = arith.addi %4585, %4586 : index
    %4588 = arith.remui %4587, %c64 : index
    %4589 = tensor.extract %arg0[%4588] : tensor<64x!fhe.secret<i16>>
    %4590 = fhe.add(%4582, %4589) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4591 = affine.apply #map0(%c-1_1)
    %4592 = arith.addi %4255, %4591 : index
    %4593 = arith.muli %4592, %c8 : index
    %4594 = arith.addi %4559, %4583 : index
    %4595 = arith.addi %4593, %4594 : index
    %4596 = arith.remui %4595, %c64 : index
    %4597 = tensor.extract %arg0[%4596] : tensor<64x!fhe.secret<i16>>
    %4598 = fhe.add(%4590, %4597) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4599 = affine.apply #map1(%c-1_1)
    %4600 = arith.addi %4255, %4599 : index
    %4601 = arith.muli %4600, %c8 : index
    %4602 = arith.addi %4559, %4583 : index
    %4603 = arith.addi %4601, %4602 : index
    %4604 = arith.remui %4603, %c64 : index
    %4605 = tensor.extract %arg0[%4604] : tensor<64x!fhe.secret<i16>>
    %4606 = fhe.add(%4598, %4605) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4607 = affine.apply #map1(%c-1)
    %4608 = arith.addi %4255, %c-1_1 : index
    %4609 = arith.muli %4608, %c8 : index
    %4610 = arith.addi %4559, %4607 : index
    %4611 = arith.addi %4609, %4610 : index
    %4612 = arith.remui %4611, %c64 : index
    %4613 = tensor.extract %arg0[%4612] : tensor<64x!fhe.secret<i16>>
    %4614 = fhe.add(%4606, %4613) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4615 = affine.apply #map0(%c-1_1)
    %4616 = arith.addi %4255, %4615 : index
    %4617 = arith.muli %4616, %c8 : index
    %4618 = arith.addi %4559, %4607 : index
    %4619 = arith.addi %4617, %4618 : index
    %4620 = arith.remui %4619, %c64 : index
    %4621 = tensor.extract %arg0[%4620] : tensor<64x!fhe.secret<i16>>
    %4622 = fhe.add(%4614, %4621) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4623 = affine.apply #map1(%c-1_1)
    %4624 = arith.addi %4255, %4623 : index
    %4625 = arith.muli %4624, %c8 : index
    %4626 = arith.addi %4559, %4607 : index
    %4627 = arith.addi %4625, %4626 : index
    %4628 = arith.remui %4627, %c64 : index
    %4629 = tensor.extract %arg0[%4628] : tensor<64x!fhe.secret<i16>>
    %4630 = fhe.add(%4622, %4629) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4631 = arith.muli %c8, %4255 : index
    %4632 = arith.addi %4631, %4559 : index
    %4633 = arith.remui %4632, %c64 : index
    %4634 = tensor.insert %4630 into %4558[%4633] : tensor<64x!fhe.secret<i16>>
    %4635 = affine.apply #map4(%c0_0)
    %c0_i16_62 = fhe.constant 0 : i16
    %4636 = arith.addi %4255, %c-1_1 : index
    %4637 = arith.muli %4636, %c8 : index
    %4638 = arith.addi %4635, %c-1 : index
    %4639 = arith.addi %4637, %4638 : index
    %4640 = arith.remui %4639, %c64 : index
    %4641 = tensor.extract %arg0[%4640] : tensor<64x!fhe.secret<i16>>
    %4642 = fhe.add(%c0_i16_62, %4641) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4643 = affine.apply #map0(%c-1_1)
    %4644 = arith.addi %4255, %4643 : index
    %4645 = arith.muli %4644, %c8 : index
    %4646 = arith.addi %4635, %c-1 : index
    %4647 = arith.addi %4645, %4646 : index
    %4648 = arith.remui %4647, %c64 : index
    %4649 = tensor.extract %arg0[%4648] : tensor<64x!fhe.secret<i16>>
    %4650 = fhe.add(%4642, %4649) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4651 = affine.apply #map1(%c-1_1)
    %4652 = arith.addi %4255, %4651 : index
    %4653 = arith.muli %4652, %c8 : index
    %4654 = arith.addi %4635, %c-1 : index
    %4655 = arith.addi %4653, %4654 : index
    %4656 = arith.remui %4655, %c64 : index
    %4657 = tensor.extract %arg0[%4656] : tensor<64x!fhe.secret<i16>>
    %4658 = fhe.add(%4650, %4657) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4659 = affine.apply #map0(%c-1)
    %4660 = arith.addi %4255, %c-1_1 : index
    %4661 = arith.muli %4660, %c8 : index
    %4662 = arith.addi %4635, %4659 : index
    %4663 = arith.addi %4661, %4662 : index
    %4664 = arith.remui %4663, %c64 : index
    %4665 = tensor.extract %arg0[%4664] : tensor<64x!fhe.secret<i16>>
    %4666 = fhe.add(%4658, %4665) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4667 = affine.apply #map0(%c-1_1)
    %4668 = arith.addi %4255, %4667 : index
    %4669 = arith.muli %4668, %c8 : index
    %4670 = arith.addi %4635, %4659 : index
    %4671 = arith.addi %4669, %4670 : index
    %4672 = arith.remui %4671, %c64 : index
    %4673 = tensor.extract %arg0[%4672] : tensor<64x!fhe.secret<i16>>
    %4674 = fhe.add(%4666, %4673) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4675 = affine.apply #map1(%c-1_1)
    %4676 = arith.addi %4255, %4675 : index
    %4677 = arith.muli %4676, %c8 : index
    %4678 = arith.addi %4635, %4659 : index
    %4679 = arith.addi %4677, %4678 : index
    %4680 = arith.remui %4679, %c64 : index
    %4681 = tensor.extract %arg0[%4680] : tensor<64x!fhe.secret<i16>>
    %4682 = fhe.add(%4674, %4681) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4683 = affine.apply #map1(%c-1)
    %4684 = arith.addi %4255, %c-1_1 : index
    %4685 = arith.muli %4684, %c8 : index
    %4686 = arith.addi %4635, %4683 : index
    %4687 = arith.addi %4685, %4686 : index
    %4688 = arith.remui %4687, %c64 : index
    %4689 = tensor.extract %arg0[%4688] : tensor<64x!fhe.secret<i16>>
    %4690 = fhe.add(%4682, %4689) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4691 = affine.apply #map0(%c-1_1)
    %4692 = arith.addi %4255, %4691 : index
    %4693 = arith.muli %4692, %c8 : index
    %4694 = arith.addi %4635, %4683 : index
    %4695 = arith.addi %4693, %4694 : index
    %4696 = arith.remui %4695, %c64 : index
    %4697 = tensor.extract %arg0[%4696] : tensor<64x!fhe.secret<i16>>
    %4698 = fhe.add(%4690, %4697) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4699 = affine.apply #map1(%c-1_1)
    %4700 = arith.addi %4255, %4699 : index
    %4701 = arith.muli %4700, %c8 : index
    %4702 = arith.addi %4635, %4683 : index
    %4703 = arith.addi %4701, %4702 : index
    %4704 = arith.remui %4703, %c64 : index
    %4705 = tensor.extract %arg0[%4704] : tensor<64x!fhe.secret<i16>>
    %4706 = fhe.add(%4698, %4705) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4707 = arith.muli %c8, %4255 : index
    %4708 = arith.addi %4707, %4635 : index
    %4709 = arith.remui %4708, %c64 : index
    %4710 = tensor.insert %4706 into %4634[%4709] : tensor<64x!fhe.secret<i16>>
    %4711 = affine.apply #map5(%c0_0)
    %c0_i16_63 = fhe.constant 0 : i16
    %4712 = arith.addi %4255, %c-1_1 : index
    %4713 = arith.muli %4712, %c8 : index
    %4714 = arith.addi %4711, %c-1 : index
    %4715 = arith.addi %4713, %4714 : index
    %4716 = arith.remui %4715, %c64 : index
    %4717 = tensor.extract %arg0[%4716] : tensor<64x!fhe.secret<i16>>
    %4718 = fhe.add(%c0_i16_63, %4717) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4719 = affine.apply #map0(%c-1_1)
    %4720 = arith.addi %4255, %4719 : index
    %4721 = arith.muli %4720, %c8 : index
    %4722 = arith.addi %4711, %c-1 : index
    %4723 = arith.addi %4721, %4722 : index
    %4724 = arith.remui %4723, %c64 : index
    %4725 = tensor.extract %arg0[%4724] : tensor<64x!fhe.secret<i16>>
    %4726 = fhe.add(%4718, %4725) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4727 = affine.apply #map1(%c-1_1)
    %4728 = arith.addi %4255, %4727 : index
    %4729 = arith.muli %4728, %c8 : index
    %4730 = arith.addi %4711, %c-1 : index
    %4731 = arith.addi %4729, %4730 : index
    %4732 = arith.remui %4731, %c64 : index
    %4733 = tensor.extract %arg0[%4732] : tensor<64x!fhe.secret<i16>>
    %4734 = fhe.add(%4726, %4733) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4735 = affine.apply #map0(%c-1)
    %4736 = arith.addi %4255, %c-1_1 : index
    %4737 = arith.muli %4736, %c8 : index
    %4738 = arith.addi %4711, %4735 : index
    %4739 = arith.addi %4737, %4738 : index
    %4740 = arith.remui %4739, %c64 : index
    %4741 = tensor.extract %arg0[%4740] : tensor<64x!fhe.secret<i16>>
    %4742 = fhe.add(%4734, %4741) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4743 = affine.apply #map0(%c-1_1)
    %4744 = arith.addi %4255, %4743 : index
    %4745 = arith.muli %4744, %c8 : index
    %4746 = arith.addi %4711, %4735 : index
    %4747 = arith.addi %4745, %4746 : index
    %4748 = arith.remui %4747, %c64 : index
    %4749 = tensor.extract %arg0[%4748] : tensor<64x!fhe.secret<i16>>
    %4750 = fhe.add(%4742, %4749) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4751 = affine.apply #map1(%c-1_1)
    %4752 = arith.addi %4255, %4751 : index
    %4753 = arith.muli %4752, %c8 : index
    %4754 = arith.addi %4711, %4735 : index
    %4755 = arith.addi %4753, %4754 : index
    %4756 = arith.remui %4755, %c64 : index
    %4757 = tensor.extract %arg0[%4756] : tensor<64x!fhe.secret<i16>>
    %4758 = fhe.add(%4750, %4757) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4759 = affine.apply #map1(%c-1)
    %4760 = arith.addi %4255, %c-1_1 : index
    %4761 = arith.muli %4760, %c8 : index
    %4762 = arith.addi %4711, %4759 : index
    %4763 = arith.addi %4761, %4762 : index
    %4764 = arith.remui %4763, %c64 : index
    %4765 = tensor.extract %arg0[%4764] : tensor<64x!fhe.secret<i16>>
    %4766 = fhe.add(%4758, %4765) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4767 = affine.apply #map0(%c-1_1)
    %4768 = arith.addi %4255, %4767 : index
    %4769 = arith.muli %4768, %c8 : index
    %4770 = arith.addi %4711, %4759 : index
    %4771 = arith.addi %4769, %4770 : index
    %4772 = arith.remui %4771, %c64 : index
    %4773 = tensor.extract %arg0[%4772] : tensor<64x!fhe.secret<i16>>
    %4774 = fhe.add(%4766, %4773) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4775 = affine.apply #map1(%c-1_1)
    %4776 = arith.addi %4255, %4775 : index
    %4777 = arith.muli %4776, %c8 : index
    %4778 = arith.addi %4711, %4759 : index
    %4779 = arith.addi %4777, %4778 : index
    %4780 = arith.remui %4779, %c64 : index
    %4781 = tensor.extract %arg0[%4780] : tensor<64x!fhe.secret<i16>>
    %4782 = fhe.add(%4774, %4781) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4783 = arith.muli %c8, %4255 : index
    %4784 = arith.addi %4783, %4711 : index
    %4785 = arith.remui %4784, %c64 : index
    %4786 = tensor.insert %4782 into %4710[%4785] : tensor<64x!fhe.secret<i16>>
    %4787 = affine.apply #map6(%c0_0)
    %c0_i16_64 = fhe.constant 0 : i16
    %4788 = arith.addi %4255, %c-1_1 : index
    %4789 = arith.muli %4788, %c8 : index
    %4790 = arith.addi %4787, %c-1 : index
    %4791 = arith.addi %4789, %4790 : index
    %4792 = arith.remui %4791, %c64 : index
    %4793 = tensor.extract %arg0[%4792] : tensor<64x!fhe.secret<i16>>
    %4794 = fhe.add(%c0_i16_64, %4793) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4795 = affine.apply #map0(%c-1_1)
    %4796 = arith.addi %4255, %4795 : index
    %4797 = arith.muli %4796, %c8 : index
    %4798 = arith.addi %4787, %c-1 : index
    %4799 = arith.addi %4797, %4798 : index
    %4800 = arith.remui %4799, %c64 : index
    %4801 = tensor.extract %arg0[%4800] : tensor<64x!fhe.secret<i16>>
    %4802 = fhe.add(%4794, %4801) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4803 = affine.apply #map1(%c-1_1)
    %4804 = arith.addi %4255, %4803 : index
    %4805 = arith.muli %4804, %c8 : index
    %4806 = arith.addi %4787, %c-1 : index
    %4807 = arith.addi %4805, %4806 : index
    %4808 = arith.remui %4807, %c64 : index
    %4809 = tensor.extract %arg0[%4808] : tensor<64x!fhe.secret<i16>>
    %4810 = fhe.add(%4802, %4809) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4811 = affine.apply #map0(%c-1)
    %4812 = arith.addi %4255, %c-1_1 : index
    %4813 = arith.muli %4812, %c8 : index
    %4814 = arith.addi %4787, %4811 : index
    %4815 = arith.addi %4813, %4814 : index
    %4816 = arith.remui %4815, %c64 : index
    %4817 = tensor.extract %arg0[%4816] : tensor<64x!fhe.secret<i16>>
    %4818 = fhe.add(%4810, %4817) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4819 = affine.apply #map0(%c-1_1)
    %4820 = arith.addi %4255, %4819 : index
    %4821 = arith.muli %4820, %c8 : index
    %4822 = arith.addi %4787, %4811 : index
    %4823 = arith.addi %4821, %4822 : index
    %4824 = arith.remui %4823, %c64 : index
    %4825 = tensor.extract %arg0[%4824] : tensor<64x!fhe.secret<i16>>
    %4826 = fhe.add(%4818, %4825) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4827 = affine.apply #map1(%c-1_1)
    %4828 = arith.addi %4255, %4827 : index
    %4829 = arith.muli %4828, %c8 : index
    %4830 = arith.addi %4787, %4811 : index
    %4831 = arith.addi %4829, %4830 : index
    %4832 = arith.remui %4831, %c64 : index
    %4833 = tensor.extract %arg0[%4832] : tensor<64x!fhe.secret<i16>>
    %4834 = fhe.add(%4826, %4833) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4835 = affine.apply #map1(%c-1)
    %4836 = arith.addi %4255, %c-1_1 : index
    %4837 = arith.muli %4836, %c8 : index
    %4838 = arith.addi %4787, %4835 : index
    %4839 = arith.addi %4837, %4838 : index
    %4840 = arith.remui %4839, %c64 : index
    %4841 = tensor.extract %arg0[%4840] : tensor<64x!fhe.secret<i16>>
    %4842 = fhe.add(%4834, %4841) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4843 = affine.apply #map0(%c-1_1)
    %4844 = arith.addi %4255, %4843 : index
    %4845 = arith.muli %4844, %c8 : index
    %4846 = arith.addi %4787, %4835 : index
    %4847 = arith.addi %4845, %4846 : index
    %4848 = arith.remui %4847, %c64 : index
    %4849 = tensor.extract %arg0[%4848] : tensor<64x!fhe.secret<i16>>
    %4850 = fhe.add(%4842, %4849) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4851 = affine.apply #map1(%c-1_1)
    %4852 = arith.addi %4255, %4851 : index
    %4853 = arith.muli %4852, %c8 : index
    %4854 = arith.addi %4787, %4835 : index
    %4855 = arith.addi %4853, %4854 : index
    %4856 = arith.remui %4855, %c64 : index
    %4857 = tensor.extract %arg0[%4856] : tensor<64x!fhe.secret<i16>>
    %4858 = fhe.add(%4850, %4857) : (!fhe.secret<i16>, !fhe.secret<i16>) -> !fhe.secret<i16>
    %4859 = arith.muli %c8, %4255 : index
    %4860 = arith.addi %4859, %4787 : index
    %4861 = arith.remui %4860, %c64 : index
    %4862 = tensor.insert %4858 into %4786[%4861] : tensor<64x!fhe.secret<i16>>
    return %4862 : tensor<64x!fhe.secret<i16>>
  }
}

