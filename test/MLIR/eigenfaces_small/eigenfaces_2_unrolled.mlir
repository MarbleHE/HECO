module {
  func.func private @encryptedEigenfaces(%arg0: tensor<4x!fhe.secret<f64>>, %arg1: tensor<4x4x!fhe.secret<f64>>) -> tensor<4x!fhe.secret<f64>> {
    %c3 = arith.constant 3 : index
    %c2 = arith.constant 2 : index
    %c1 = arith.constant 1 : index
    %c0 = arith.constant 0 : index
    %0 = linalg.init_tensor [4] : tensor<4x!fhe.secret<f64>>
    %1 = tensor.extract %arg1[%c0, %c0] : tensor<4x4x!fhe.secret<f64>>
    %2 = fhe.multiply(%1, %1) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %3 = tensor.extract %arg0[%c0] : tensor<4x!fhe.secret<f64>>
    %4 = fhe.multiply(%3, %3) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %5 = fhe.sub(%2, %4) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %6 = tensor.extract %arg1[%c0, %c1] : tensor<4x4x!fhe.secret<f64>>
    %7 = fhe.multiply(%6, %6) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %8 = tensor.extract %arg0[%c1] : tensor<4x!fhe.secret<f64>>
    %9 = fhe.multiply(%8, %8) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %10 = fhe.sub(%7, %9) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %11 = fhe.add(%5, %10) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %12 = tensor.extract %arg1[%c0, %c2] : tensor<4x4x!fhe.secret<f64>>
    %13 = fhe.multiply(%12, %12) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %14 = tensor.extract %arg0[%c2] : tensor<4x!fhe.secret<f64>>
    %15 = fhe.multiply(%14, %14) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %16 = fhe.sub(%13, %15) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %17 = fhe.add(%11, %16) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %18 = tensor.extract %arg1[%c0, %c3] : tensor<4x4x!fhe.secret<f64>>
    %19 = fhe.multiply(%18, %18) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %20 = tensor.extract %arg0[%c3] : tensor<4x!fhe.secret<f64>>
    %21 = fhe.multiply(%20, %20) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %22 = fhe.sub(%19, %21) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %23 = fhe.add(%17, %22) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %24 = tensor.insert %23 into %0[%c0] : tensor<4x!fhe.secret<f64>>
    %25 = tensor.extract %arg1[%c1, %c0] : tensor<4x4x!fhe.secret<f64>>
    %26 = fhe.multiply(%25, %25) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %27 = fhe.sub(%26, %4) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %28 = tensor.extract %arg1[%c1, %c1] : tensor<4x4x!fhe.secret<f64>>
    %29 = fhe.multiply(%28, %28) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %30 = fhe.sub(%29, %9) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %31 = fhe.add(%27, %30) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %32 = tensor.extract %arg1[%c1, %c2] : tensor<4x4x!fhe.secret<f64>>
    %33 = fhe.multiply(%32, %32) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %34 = fhe.sub(%33, %15) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %35 = fhe.add(%31, %34) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %36 = tensor.extract %arg1[%c1, %c3] : tensor<4x4x!fhe.secret<f64>>
    %37 = fhe.multiply(%36, %36) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %38 = fhe.sub(%37, %21) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %39 = fhe.add(%35, %38) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %40 = tensor.insert %39 into %24[%c1] : tensor<4x!fhe.secret<f64>>
    %41 = tensor.extract %arg1[%c2, %c0] : tensor<4x4x!fhe.secret<f64>>
    %42 = fhe.multiply(%41, %41) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %43 = fhe.sub(%42, %4) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %44 = tensor.extract %arg1[%c2, %c1] : tensor<4x4x!fhe.secret<f64>>
    %45 = fhe.multiply(%44, %44) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %46 = fhe.sub(%45, %9) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %47 = fhe.add(%43, %46) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %48 = tensor.extract %arg1[%c2, %c2] : tensor<4x4x!fhe.secret<f64>>
    %49 = fhe.multiply(%48, %48) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %50 = fhe.sub(%49, %15) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %51 = fhe.add(%47, %50) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %52 = tensor.extract %arg1[%c2, %c3] : tensor<4x4x!fhe.secret<f64>>
    %53 = fhe.multiply(%52, %52) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %54 = fhe.sub(%53, %21) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %55 = fhe.add(%51, %54) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %56 = tensor.insert %55 into %40[%c2] : tensor<4x!fhe.secret<f64>>
    %57 = tensor.extract %arg1[%c3, %c0] : tensor<4x4x!fhe.secret<f64>>
    %58 = fhe.multiply(%57, %57) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %59 = fhe.sub(%58, %4) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %60 = tensor.extract %arg1[%c3, %c1] : tensor<4x4x!fhe.secret<f64>>
    %61 = fhe.multiply(%60, %60) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %62 = fhe.sub(%61, %9) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %63 = fhe.add(%59, %62) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %64 = tensor.extract %arg1[%c3, %c2] : tensor<4x4x!fhe.secret<f64>>
    %65 = fhe.multiply(%64, %64) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %66 = fhe.sub(%65, %15) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %67 = fhe.add(%63, %66) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %68 = tensor.extract %arg1[%c3, %c3] : tensor<4x4x!fhe.secret<f64>>
    %69 = fhe.multiply(%68, %68) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %70 = fhe.sub(%69, %21) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %71 = fhe.add(%67, %70) : (!fhe.secret<f64>, !fhe.secret<f64>) -> !fhe.secret<f64>
    %72 = tensor.insert %71 into %56[%c3] : tensor<4x!fhe.secret<f64>>
    return %72 : tensor<4x!fhe.secret<f64>>
  }
}

